(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    949696,      17288]
NotebookOptionsPosition[    943330,      17183]
NotebookOutlinePosition[    943684,      17199]
CellTagsIndexPosition[    943641,      17196]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"l", ">", "0"}], ",", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"R", "[", "r", "]"}], ",", "r"}], "]"}]}], ",", "r"}], 
        "]"}], "-", 
       RowBox[{"2", "l", 
        RowBox[{"(", 
         RowBox[{"l", "+", "1"}], ")"}], 
        RowBox[{"R", "[", "r", "]"}]}]}], "\[Equal]", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Mu]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"SphericalBesselJ", "[", 
         RowBox[{"l", ",", 
          RowBox[{"k", " ", "r"}]}], "]"}], "2"]}]}], ",", " ", "R", ",", 
     "r"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7487782877218857`*^9, 3.748778374784988*^9}, {
  3.748778409192781*^9, 3.7487784204194183`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e34ebbaa-b49f-48d3-9ae3-d28e82ae474c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"R", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "r", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["r", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{"l", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["\[ImaginaryI]", 
              RowBox[{
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"l", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "l"}], ")"}]}]]}]], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               RowBox[{"4", "+", 
                FractionBox["1", 
                 RowBox[{"2", " ", "l", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "l"}], ")"}]}]]}]]}]}], ")"}]}], 
          SqrtBox["2"]]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["r", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{"l", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["\[ImaginaryI]", 
              RowBox[{
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"l", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "l"}], ")"}]}]]}]], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               RowBox[{"4", "+", 
                FractionBox["1", 
                 RowBox[{"2", " ", "l", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "l"}], ")"}]}]]}]]}]}], ")"}]}], 
          SqrtBox["2"]]], " ", 
        RowBox[{"C", "[", "2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"2", " ", "l"}]}]], " ", "\[Pi]", " ", 
          SuperscriptBox["r", 
           RowBox[{
            FractionBox["1", "2"], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"8", " ", "l"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"k", " ", "r"}], ")"}], 
           RowBox[{"2", " ", "l"}]], " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Mu]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["\[ImaginaryI]", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "-", 
                   FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                    SqrtBox["2"]]}], ")"}]}], 
                SqrtBox["2"]]]}], " ", 
             RowBox[{"HypergeometricPFQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "+", "l"}], ",", 
                 RowBox[{
                  FractionBox["1", "4"], "+", "l", "-", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  FractionBox["3", "2"], "+", "l"}], ",", 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "l"}]}], ",", 
                 RowBox[{
                  FractionBox["5", "4"], "+", "l", "-", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["k", "2"]}], " ", 
                SuperscriptBox["r", "2"]}]}], "]"}]}], "-", 
            RowBox[{"4", " ", "l", " ", 
             SuperscriptBox["r", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", 
                SqrtBox[
                 RowBox[{"l", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["\[ImaginaryI]", 
                   RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "-", 
                  FractionBox[
                   RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                   SqrtBox["2"]]}], ")"}]}], 
               SqrtBox["2"]]], " ", 
             RowBox[{"HypergeometricPFQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "+", "l"}], ",", 
                 RowBox[{
                  FractionBox["1", "4"], "+", "l", "-", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  FractionBox["3", "2"], "+", "l"}], ",", 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "l"}]}], ",", 
                 RowBox[{
                  FractionBox["5", "4"], "+", "l", "-", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["k", "2"]}], " ", 
                SuperscriptBox["r", "2"]}]}], "]"}]}], "-", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"8", " ", "l"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]], " ", 
             SuperscriptBox["r", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", 
                SqrtBox[
                 RowBox[{"l", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["\[ImaginaryI]", 
                   RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "-", 
                  FractionBox[
                   RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                   SqrtBox["2"]]}], ")"}]}], 
               SqrtBox["2"]]], " ", 
             RowBox[{"HypergeometricPFQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "+", "l"}], ",", 
                 RowBox[{
                  FractionBox["1", "4"], "+", "l", "-", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  FractionBox["3", "2"], "+", "l"}], ",", 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "l"}]}], ",", 
                 RowBox[{
                  FractionBox["5", "4"], "+", "l", "-", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["k", "2"]}], " ", 
                SuperscriptBox["r", "2"]}]}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["r", 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]], "+", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["\[ImaginaryI]", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "+", 
                   FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                    SqrtBox["2"]]}], ")"}]}], 
                SqrtBox["2"]]}]], " ", 
             RowBox[{"HypergeometricPFQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "+", "l"}], ",", 
                 RowBox[{
                  FractionBox["1", "4"], "+", "l", "+", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  FractionBox["3", "2"], "+", "l"}], ",", 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "l"}]}], ",", 
                 RowBox[{
                  FractionBox["5", "4"], "+", "l", "+", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["k", "2"]}], " ", 
                SuperscriptBox["r", "2"]}]}], "]"}]}], "+", 
            RowBox[{"4", " ", "l", " ", 
             SuperscriptBox["r", 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]], "+", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["\[ImaginaryI]", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "+", 
                   FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                    SqrtBox["2"]]}], ")"}]}], 
                SqrtBox["2"]]}]], " ", 
             RowBox[{"HypergeometricPFQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "+", "l"}], ",", 
                 RowBox[{
                  FractionBox["1", "4"], "+", "l", "+", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  FractionBox["3", "2"], "+", "l"}], ",", 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "l"}]}], ",", 
                 RowBox[{
                  FractionBox["5", "4"], "+", "l", "+", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["k", "2"]}], " ", 
                SuperscriptBox["r", "2"]}]}], "]"}]}], "-", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"8", " ", "l"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]], " ", 
             SuperscriptBox["r", 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]], "+", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["\[ImaginaryI]", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "+", 
                   FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                    SqrtBox["2"]]}], ")"}]}], 
                SqrtBox["2"]]}]], " ", 
             RowBox[{"HypergeometricPFQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "+", "l"}], ",", 
                 RowBox[{
                  FractionBox["1", "4"], "+", "l", "+", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  FractionBox["3", "2"], "+", "l"}], ",", 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "l"}]}], ",", 
                 RowBox[{
                  FractionBox["5", "4"], "+", "l", "+", 
                  RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["k", "2"]}], " ", 
                SuperscriptBox["r", "2"]}]}], "]"}]}]}], ")"}]}], ")"}], "/", 
        
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"8", " ", "l"}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["l", "2"]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", " ", "l"}], "-", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "l"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", " ", "l"}], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "l"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Gamma", "[", 
            RowBox[{
             FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}], ")"}]}]}]}], 
     "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.748778378443036*^9, 3.748778421859133*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"17568730-8bac-4dc8-b061-27d397283f87"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["r", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{"l", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["\[ImaginaryI]", 
          RowBox[{
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"l", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "l"}], ")"}]}]]}]], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox[
           RowBox[{"4", "+", 
            FractionBox["1", 
             RowBox[{"2", " ", "l", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "l"}], ")"}]}]]}]]}]}], ")"}]}], 
      SqrtBox["2"]]], " ", 
    RowBox[{"C", "[", "1", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["r", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{"l", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["\[ImaginaryI]", 
          RowBox[{
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"l", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "l"}], ")"}]}]]}]], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox[
           RowBox[{"4", "+", 
            FractionBox["1", 
             RowBox[{"2", " ", "l", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "l"}], ")"}]}]]}]]}]}], ")"}]}], 
      SqrtBox["2"]]], " ", 
    RowBox[{"C", "[", "2", "]"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"2", " ", "l"}]}]], " ", "\[Pi]", " ", 
      SuperscriptBox["r", 
       RowBox[{
        FractionBox["1", "2"], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "l"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["l", "2"]}]}]]}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"k", " ", "r"}], ")"}], 
       RowBox[{"2", " ", "l"}]], " ", "\[Kappa]", " ", 
      SuperscriptBox["\[Mu]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["r", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{"l", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["\[ImaginaryI]", 
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "-", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                SqrtBox["2"]]}], ")"}]}], 
            SqrtBox["2"]]]}], " ", 
         RowBox[{"HypergeometricPFQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "l"}], ",", 
             RowBox[{
              FractionBox["1", "4"], "+", "l", "-", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["3", "2"], "+", "l"}], ",", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "l"}]}], ",", 
             RowBox[{
              FractionBox["5", "4"], "+", "l", "-", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k", "2"]}], " ", 
            SuperscriptBox["r", "2"]}]}], "]"}]}], "-", 
        RowBox[{"4", " ", "l", " ", 
         SuperscriptBox["r", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{"l", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["\[ImaginaryI]", 
               RowBox[{
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"l", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "l"}], ")"}]}]]}]], "-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                   RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
               SqrtBox["2"]]}], ")"}]}], 
           SqrtBox["2"]]], " ", 
         RowBox[{"HypergeometricPFQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "l"}], ",", 
             RowBox[{
              FractionBox["1", "4"], "+", "l", "-", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["3", "2"], "+", "l"}], ",", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "l"}]}], ",", 
             RowBox[{
              FractionBox["5", "4"], "+", "l", "-", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k", "2"]}], " ", 
            SuperscriptBox["r", "2"]}]}], "]"}]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "l"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["l", "2"]}]}]], " ", 
         SuperscriptBox["r", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{"l", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["\[ImaginaryI]", 
               RowBox[{
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"l", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "l"}], ")"}]}]]}]], "-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                   RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
               SqrtBox["2"]]}], ")"}]}], 
           SqrtBox["2"]]], " ", 
         RowBox[{"HypergeometricPFQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "l"}], ",", 
             RowBox[{
              FractionBox["1", "4"], "+", "l", "-", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["3", "2"], "+", "l"}], ",", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "l"}]}], ",", 
             RowBox[{
              FractionBox["5", "4"], "+", "l", "-", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k", "2"]}], " ", 
            SuperscriptBox["r", "2"]}]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["r", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"8", " ", "l"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["l", "2"]}]}]], "+", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{"l", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["\[ImaginaryI]", 
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "+", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                SqrtBox["2"]]}], ")"}]}], 
            SqrtBox["2"]]}]], " ", 
         RowBox[{"HypergeometricPFQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "l"}], ",", 
             RowBox[{
              FractionBox["1", "4"], "+", "l", "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["3", "2"], "+", "l"}], ",", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "l"}]}], ",", 
             RowBox[{
              FractionBox["5", "4"], "+", "l", "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k", "2"]}], " ", 
            SuperscriptBox["r", "2"]}]}], "]"}]}], "+", 
        RowBox[{"4", " ", "l", " ", 
         SuperscriptBox["r", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"8", " ", "l"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["l", "2"]}]}]], "+", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{"l", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["\[ImaginaryI]", 
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "+", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                SqrtBox["2"]]}], ")"}]}], 
            SqrtBox["2"]]}]], " ", 
         RowBox[{"HypergeometricPFQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "l"}], ",", 
             RowBox[{
              FractionBox["1", "4"], "+", "l", "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["3", "2"], "+", "l"}], ",", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "l"}]}], ",", 
             RowBox[{
              FractionBox["5", "4"], "+", "l", "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k", "2"]}], " ", 
            SuperscriptBox["r", "2"]}]}], "]"}]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "l"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["l", "2"]}]}]], " ", 
         SuperscriptBox["r", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"8", " ", "l"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["l", "2"]}]}]], "+", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{"l", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["\[ImaginaryI]", 
                RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]], "+", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                    RowBox[{"l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]]}]]}], 
                SqrtBox["2"]]}], ")"}]}], 
            SqrtBox["2"]]}]], " ", 
         RowBox[{"HypergeometricPFQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "l"}], ",", 
             RowBox[{
              FractionBox["1", "4"], "+", "l", "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["3", "2"], "+", "l"}], ",", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "l"}]}], ",", 
             RowBox[{
              FractionBox["5", "4"], "+", "l", "+", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k", "2"]}], " ", 
            SuperscriptBox["r", "2"]}]}], "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"8", " ", "l"}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["l", "2"]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"4", " ", "l"}], "-", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"8", " ", "l"}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"4", " ", "l"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"8", " ", "l"}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.748778548621814*^9, 3.74877855540455*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f096f007-1129-4a3d-bd8f-3efae82646f2"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"l", ">", "0"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["l", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"8", " ", "l"}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["l", "2"]}]}]], " ", 
        SuperscriptBox[
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}]], 
      SuperscriptBox["4", 
       RowBox[{
        RowBox[{"-", "2"}], "-", "l"}]], " ", 
      SuperscriptBox["r", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"8", " ", "l"}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["l", "2"]}]}]], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{"l", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
           SqrtBox[
            FractionBox[
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "l"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}], 
             RowBox[{"l", "+", 
              SuperscriptBox["l", "2"]}]]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", " ", "l"}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"8", " ", "l"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", "\[Pi]", " ", 
         SuperscriptBox["r", 
          RowBox[{
           FractionBox["1", "2"], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"l", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "+", 
               RowBox[{"8", " ", "l"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}], 
              RowBox[{"l", "+", 
               SuperscriptBox["l", "2"]}]]]}]}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", " ", "r"}], ")"}], 
          RowBox[{"2", " ", "l"}]], " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"HypergeometricPFQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "l"}], ",", 
             RowBox[{
              FractionBox["1", "4"], "+", "l", "-", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["3", "2"], "+", "l"}], ",", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "l"}]}], ",", 
             RowBox[{
              FractionBox["5", "4"], "+", "l", "-", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{"8", " ", "l"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k", "2"]}], " ", 
            SuperscriptBox["r", "2"]}]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["r", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"8", " ", "l"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["l", "2"]}]}]]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["4", 
             RowBox[{"2", "+", "l"}]], " ", 
            SuperscriptBox["l", "2"], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "l"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["r", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"l", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}], 
                   RowBox[{"l", "+", 
                    SuperscriptBox["l", "2"]}]]]}]], " ", 
               RowBox[{"C", "[", "1", "]"}]}], "+", 
              RowBox[{"C", "[", "2", "]"}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Gamma", "[", 
              RowBox[{
               FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"4", " ", "l"}], "+", 
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{"8", " ", "l"}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", "\[Pi]", " ", 
            SuperscriptBox["r", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  RowBox[{"8", " ", "l"}], "+", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["l", "2"]}]}]]}], ")"}]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"k", " ", "r"}], ")"}], 
             RowBox[{"2", " ", "l"}]], " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Mu]", "2"], " ", 
            RowBox[{"HypergeometricPFQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "+", "l"}], ",", 
                RowBox[{
                 FractionBox["1", "4"], "+", "l", "+", 
                 RowBox[{
                  FractionBox["1", "4"], " ", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 FractionBox["3", "2"], "+", "l"}], ",", 
                RowBox[{"2", "+", 
                 RowBox[{"2", " ", "l"}]}], ",", 
                RowBox[{
                 FractionBox["5", "4"], "+", "l", "+", 
                 RowBox[{
                  FractionBox["1", "4"], " ", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    RowBox[{"8", " ", "l"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["k", "2"]}], " ", 
               SuperscriptBox["r", "2"]}]}], "]"}]}]}], ")"}]}]}], ")"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.748778578214181*^9, 3.748778607794455*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"3beda23c-3c61-4c74-a3a7-03a1e219f51e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rr", "[", 
   RowBox[{"l_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", " ", 
    SuperscriptBox["r", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"8", " ", "l"}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["l", "2"]}]}]]}]}]]}], "+", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["4", 
       RowBox[{
        RowBox[{"-", "2"}], "-", "l"}]], " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"k", " ", "r"}], ")"}], 
       RowBox[{"2", " ", "l"}]], " ", "\[Kappa]", " ", 
      SuperscriptBox["\[Mu]", "2"]}], 
     RowBox[{
      SuperscriptBox["l", "2"], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"8", " ", "l"}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["l", "2"]}]}]], " ", 
      SuperscriptBox[
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"4", " ", "l"}], "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "l"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["l", "2"]}]}]]}], ")"}], "  ", 
       RowBox[{"HypergeometricPFQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "+", "l"}], ",", 
           RowBox[{
            FractionBox["1", "4"], "+", "l", "-", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"8", " ", "l"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["3", "2"], "+", "l"}], ",", 
           RowBox[{"2", "+", 
            RowBox[{"2", " ", "l"}]}], ",", 
           RowBox[{
            FractionBox["5", "4"], "+", "l", "-", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"8", " ", "l"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k", "2"]}], " ", 
          SuperscriptBox["r", "2"]}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"4", " ", "l"}], "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "l"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", 
       RowBox[{"HypergeometricPFQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "+", "l"}], ",", 
           RowBox[{
            FractionBox["1", "4"], "+", "l", "+", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"8", " ", "l"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["3", "2"], "+", "l"}], ",", 
           RowBox[{"2", "+", 
            RowBox[{"2", " ", "l"}]}], ",", 
           RowBox[{
            FractionBox["5", "4"], "+", "l", "+", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"8", " ", "l"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k", "2"]}], " ", 
          SuperscriptBox["r", "2"]}]}], "]"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.748778773921667*^9, 3.748778780441793*^9}, {
  3.748779678507066*^9, 3.7487796830694323`*^9}, {3.749162879059268*^9, 
  3.749162879737665*^9}, {3.74916291800313*^9, 3.749162927083191*^9}, {
  3.749163185397607*^9, 3.749163193283003*^9}, {3.749163240688322*^9, 
  3.749163277136189*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"da4394ec-35ff-4029-be05-0100f8722b93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rrr", "[", 
   RowBox[{"l_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"8", " ", "l"}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["l", "2"]}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}]], 
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "2"}], "-", "l"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["4", 
       RowBox[{"2", "+", "l"}]], " ", 
      SuperscriptBox["l", "2"], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"8", " ", "l"}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["l", "2"]}]}]], " ", 
      SuperscriptBox["r", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "l"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["l", "2"]}]}]]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"8", " ", "l"}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["l", "2"]}]}]]], " ", "C1"}], "+", "C2"}], ")"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["3", "2"], "+", "l"}], "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"4", " ", "l"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"8", " ", "l"}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"k", " ", "r"}], ")"}], 
       RowBox[{"2", " ", "l"}]], " ", "\[Kappa]", " ", 
      SuperscriptBox["\[Mu]", "2"], " ", 
      RowBox[{"HypergeometricPFQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "+", "l"}], ",", 
          RowBox[{
           FractionBox["1", "4"], "+", "l", "-", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "l"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["3", "2"], "+", "l"}], ",", 
          RowBox[{"2", "+", 
           RowBox[{"2", " ", "l"}]}], ",", 
          RowBox[{
           FractionBox["5", "4"], "+", "l", "-", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "l"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k", "2"]}], " ", 
         SuperscriptBox["r", "2"]}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"4", " ", "l"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"8", " ", "l"}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"k", " ", "r"}], ")"}], 
       RowBox[{"2", " ", "l"}]], " ", "\[Kappa]", " ", 
      SuperscriptBox["\[Mu]", "2"], " ", 
      RowBox[{"HypergeometricPFQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "+", "l"}], ",", 
          RowBox[{
           FractionBox["1", "4"], "+", "l", "+", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "l"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["3", "2"], "+", "l"}], ",", 
          RowBox[{"2", "+", 
           RowBox[{"2", " ", "l"}]}], ",", 
          RowBox[{
           FractionBox["5", "4"], "+", "l", "+", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"8", " ", "l"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}]]}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k", "2"]}], " ", 
         SuperscriptBox["r", "2"]}]}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.748779873015209*^9, 3.748779881962047*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2302711a-9eac-474e-9a1b-19afa4b65ee2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<MaTeX`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MaTeX", "[", "\"\<\\\\int\\\\frac{i x^2}{i+x^2}dx\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]", "=", 
   RowBox[{"8", " ", "\[Pi]", " ", 
    RowBox[{"G", "/", 
     SuperscriptBox["c", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "15.614"}], " ", 
  RowBox[{"(*", 
   RowBox[{"[", 
    RowBox[{"1", "/", "pc"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"\[Mu]", "-", 
    RowBox[{".1", "*", "\[Mu]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"k", "=", " ", 
  RowBox[{"\[Mu]", " ", "\[Omega]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ri", " ", "=", " ", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rf", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C2", "=", " ", 
   RowBox[{"-", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7416533225337067`*^9, 3.7416533229894533`*^9}, {
   3.741705106737762*^9, 3.741705109353241*^9}, {3.742562965812224*^9, 
   3.742562973637351*^9}, {3.746215512426386*^9, 3.7462155385067053`*^9}, 
   3.746215641185556*^9, {3.746215671691609*^9, 3.7462157349292583`*^9}, {
   3.746281893274837*^9, 3.7462818946244583`*^9}, {3.748608221691004*^9, 
   3.748608249561865*^9}, 3.748629848495098*^9, {3.7487792182594624`*^9, 
   3.7487792187750387`*^9}, {3.748779644496646*^9, 3.7487796929026337`*^9}, {
   3.748780400239703*^9, 3.748780413013982*^9}, 3.749163990071083*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"7f3387a3-88fb-488f-8654-1102f1fdc7c8"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.01643115346697338], 
   {Thickness[0.007854091357213277], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYCYm5HPq8ZLxkdZDaKzWdK+GW/zWuDxZyfLA4t
4rWsmcd+2X/Z93Fr+jQ2h61g8X9wvn2JY+3pO4wOMP6SW8sfGzKzOtzgvS2W
asbioPFJ5eWsTpg4E5yfMzWh0KL4vz2M/6b2cfb5Nb/s7UDmybDC+c1g+xnh
fPEmmSkGl3/ag+2VYXI4AwYf7V+A5N+ww/lg95gJw/kKuxbsS30n6nAd7C5+
h76Ibn/GAEmHXhBdIOsQoxohc+6PjMOjCPHtFx3UHKrv/7hlzK3gcP5q2Bv9
27oOwpWTSs6GKDp0e71iMTlo5JCeBgRmSg4zJvBXmXmbOrivObqcQULZ4UWW
9rfpa80dBGID7hs9V3ZoZDnab2hu6SAzL07ztIEK1D2WDgxgoAoxJ8zagYmz
Sz75HYIPNne1Gpzve3FizD9ndYcYBcePyTLWDlPaW6Mux6g7FKzpvp0hYO1g
ZAwEk9UcONxUS5m4oPq11RzqQfYft4LzVZ40zztbheB/33mr66+oFcT8w2oO
N6RrEo2eWjqc2LWjly1AHc7/9fb1AcvHCD44XKo1HA60LQ8/JWQF5z8H+b8W
wZeYeoUzQ8na4e+30gdzDNUdZswEAWuI+CNVOD/gFtBgIRU4HxxMe5QgtI+V
w2kQnaPocOqw09rMe+YOzhOahdKiFKHqzCH6LGUcpEHhfMDQAWzMTzGIulfK
DlGg+N0jColHFwWHN2253UbRIg7G4HCTcNgRbBXx/7iQw33XeMdZHwUh5r4R
dICkKx5Iei7jh8bbN3twetnDDudD3MkC58PSOyw/oecvAPE+gpc=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBWIQHaPg+DF5jZWD6pPmeWelTB1gfC431VImLVOH/DXd
tzMWWDmkgYCZqUOE+PaLDH0IvvjUK5wZRQj+88SF10zyrRxsKyNWmOqaOvwH
gXgrB423vPsMfpo4yMyL0zwtYOWw5P4+vjmPjR0Wg+jJlg4GWiuFL7QYO5Rs
Ff19Wg/B32L+41AKF4LfF1yiMv2+BdQdCP5MEHiJ4G/Uy1vMaGPisL9W1iKd
xdLhy4aA7FnTTRy+7rzV9VfV0sHEGAg+mzjYNz06PuO3JcT/WuZQ9VYQeWdz
Bw5QOEhBw6MKwfe7ODHm32YEH6zPxMLh+GGntZn7LB2SY++4Ma+wcKj7bVVw
TgPBB4cHvwWc/wQUXvPNHV5kaX+b/tYMzr8jXZNodBXBB4ffSTMHB5B7V5tD
3LPLDBKeBxB8cPzdQfDB+u+bO3wB+fsoVP9rc4i+D2YO+qBwBbq7x+sVi8lH
c4h7ge6aPoG/yizbAhKe8pZw/jQQbY3gg83Ph/ovA8EHpwc2BL+R5Wi/4XZz
CO1u6SABSjdB5vD4BqvjN3foBrnjoAUkfXw2hfPB6emtKSQcIi0g8XndBGqe
hcMNoU+O55eZwP0D9m8pgg823x7B9znBbjt7q7EDKJqNJ1s4pIDc72EMTx8w
Pjg+7azgfFj+8ALpZ0XkF1j+AQCh1lrW
      "], {{26.578099999999992`, 26.8391}, {
      26.578099999999992`, 27.0172}, {26.434400000000007`, 27.2313}, {26.1734,
       27.2313}, {25.898399999999995`, 27.2313}, {25.5891, 26.9688}, {25.5891,
       26.6594}, {25.5891, 26.3609}, {25.8391, 26.265600000000003`}, {
      25.982799999999994`, 26.265600000000003`}, {26.304699999999997`, 
      26.265600000000003`}, {26.578099999999992`, 26.5766}, {
      26.578099999999992`, 26.8391}}}], FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGI5IIaxWZDYzCSwGaB8BjL0DhR7oNwMAEUOAp8=
     
     "], CompressedData["
1:eJxdlGlIVUEUx58LlpEGSSSWWJBhbqnvbthdjgUqYfsHDUyx51aWBillaKJt
YGFFpqZimkUvskywtBAxQnKtBE0zwUgDEVosEcLK7szcN8N7By7Dj7ln5pzz
P2c2Hs7Zn+ZiMpmc9C9e/5z1z3/6XN1gCQBefXiw8Ypo/zznQB5uLLglVxUA
pCMTeNBKPr+uOsnYL2rOMpDG+NL9+L6IVICx1T+j3m7m4deTvVnVyQC9r7Y/
OuLJw205eLhaALDOxIYuOXHQGprd6NShQVjgA693583QdREdwDj10ES0S49K
OWFt25CpTIWuQl8pY5jxlZ2zrtw+zn6/nIPlKI9qFT6sK0iJ6OZgE8qvT4Xc
p2sW+8t4iOtZptTwGswcDVqoDBHh7mSnZ63FuH9ahPJrq84I/RpUojVLgtMJ
Vn4wCCifMrjC4FvIDrJ9zPkAjejcHRIULUaeeBMLJN5widYD5zkjUsZ5PGaM
40kVIcv9d33GAYDEDXrh40RyXiZj/H+FAz8DAKRbDWN8/jcHzpbAS5ct/TiA
BcVjNTiEcU7T5Y+Z9RrlQnS/pJF85kRQ8vWC+GpQ7Np9NbxNjw+toyq0IJ1r
JaKHj0r9ObNuUwpl3F8PZcojqI/cZPDY01ye5i1SnkB6jgiUA756dIb1CuQ8
L5n07wsBViK/AMbedUlb+oExji9GJvENCCCj+HcZ940JsBXVvVUmegZJJM9i
heqL8xlnjO+3qJRxn51VyVzNipT/LOR9qm1g3IfmI0kkuh1Tab4/0PzEqDD/
fLz07wUBlpBNKrB76HrivykO7qE5alFgAFkwB1W4/xT7+WmXKWO9rIzxfYkO
vF4ma5OZ5Fcqk3l9aQbvm8PumXdkMi++HGW8H8V4OqXhPVfEkfrlymSuGo35
i2SM6zC3jTLxN9jC2PZe2HGxmfiHyyTPWDPVy8ZEX4XyFxRXs0L07jD4u2L0
MUfq66fa16tdpf64vls0yri/woCy7f2cR7qNcuD4vv4H/fk+pg==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4pvSNYlGT50cHicuvGYib+ngfYLddvZRBP8N
7z6DmYecHK4LfXI8/83CQXzqFc6MXU4O0vPiNE9PsHDQn7Dgh+E6J4ct5j8O
pWRZOFhcO5prssLJgctNtZQpysJB9UnzvLNRCD7YPC8EH2zfVEc4v3ir6O/T
ck4Qe4IsHZ6A3KEPta/A0uFifjz7uUgnB5+LE2P+bbZ0uL+Pb45xlpNDwZru
2xkXLB26vV6xmKx0cthfK2uR7mLlAPMfmL8FwbepjFhhmmsN5/cGl6hMj7dx
2Hmr629qPdA/enmLGf/YOPD4r5+SyoDg64L82+YI50eIb7/IYObocKRtefgp
JwQfTPdZw/ng8NGyhvg31tFhA0i/jLVDBdAZZ7MRfLD7GxH8+t9WBecWQPVb
IfgfNgRkz2pH8P98K30w56O1g7zjx+QzuQj+TBBIRPDB8Vrv6PAF5NFWG4ds
zp8L0g87OtSCzNlh43AbFB5fEXxQMJ0NdoLzp3xji5/R4gQJFwkEHxaeMP4M
sMVWkHi0coLE439ofB1ydKgDmccB5Ts5QuKPwQIeXuD08Moczv8Kcu9TBN/E
GAg2mzsc17SadPq4E5yPnp4B3x46cw==
     "]]}, 
   {Thickness[0.007854091357213277], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 14.2801}, {45.93520000000001, 
     14.2801}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBWIQrfGWd59BpbGDx5qjyxkshB1g/FYFdtUzJcIOtpUR
K0xzjR0y0oBgmbCD6pPmeWejEPwniQuvmdgj+Bv18hYz2hg7hLy9/HFGo7DD
GRDQMXZ44BrvOGujkMPzLO1v0+8aOVznvS2Wuo3HoWBN9+2MBCOH/yCwn9PB
senR8Rm/DeH8Rpaj/YbXEfxoBcePyWsMHdQ/qbycxckF56eD7H/GA+dv8dpg
MaeS36Hb6xWLyUVDh+r7P24Zaws6HG5bHn7qk6HDTDAQcuD3Xz8l9YSRgzvI
/xXSUPVGDtNB0jelHa4LfXI8/8wIEh5bZOD8GNUImXNzZOH8tUI6fOnz5B2m
T+CvMus2grhnm4KD9wl229lfDeF8cHjcMYDzN4DCK8fA4UD3viaTZik4PwAU
fooI/n1Q+H2UdOABubfCwKEd7B5JSHj2IvjqoPhbieCD9a8xcBCpnFRy9glU
/w4Dh/6Ibn/GCVIOf76VPpjDaAiJn4lyEPeWGkLcaaMACc83CH5y7B03Zg4j
OB8S31D/miH4qeD4kIPzVUHxtVLWwf/ixJh/wkYOX/Z93JouJgOPb0h8SjtE
iG+/yNBn6PCmLbfbaLYYnA9JT2IOX3fe6vqrCotPIah5hg47gq0i/qcLwv0j
DPLvEgE43/+J5yXTyfxwfot4LWumGzckXcVD08NNdtT0AeSD45PbGM6H5Y+D
oPh6LOSAnn8A77x4VA==
      "], {{19.378100000000003`, 10.5391}, {
      19.378100000000003`, 10.717199999999998`}, {19.234399999999997`, 
      10.9313}, {18.973399999999994`, 10.9313}, {18.698400000000003`, 
      10.9313}, {18.3891, 10.668799999999997`}, {18.3891, 10.3594}, {18.3891, 
      10.060899999999998`}, {18.6391, 9.965629999999997}, {
      18.782800000000005`, 9.965629999999997}, {19.104699999999998`, 
      9.965629999999997}, {19.378100000000003`, 10.276600000000002`}, {
      19.378100000000003`, 10.5391}}}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4i3mPw6lWNk7pIGAm4QDjC+/a8G+VD1Jh1SQ
OBuCX/vbquDcDTs4/8Rhp7WZfdYY/Or7P24ZayvD+Su/vaw404DgrxHS4Ut/
p+zwYUNA9qxwBP95lva36bKYfIHYgPtG7Qg+zHwYH2a/iTEQXDaH83n9109J
XYHg//1W+mBOISb/oWu846xACThf45PKy1mZ4g4+J9htZy9F8GHmw/gw+9H5
S24tf2zYzALnv6h9nH1ehxnOv857Wyy1jNFhf62sRXoIgg8LH3S+/xPPS6bC
zHA+zHwYH2Y/LH5Q3MtsD+fD4hedD4t/AG/w5dg=
     "]], 
    FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGI5IIaxWZDYzCSwGaB8BjL0DhR7oNwMAEUOAp8=
     
     "], CompressedData["
1:eJxllGtIk1EYx1+XOuZlOpfZdDejEZJIuAljLnre952hfpL84EJDK+YMM4Ok
HGFCmkLzS9plDlFD0ARDI7vohymEkZcZphhpoZFBpRIqVF5y7bxnOy+uB86H
H+ec5/Z/zkk8V37Kso+iqCDvyvMugXc1ZP8I1iWZILNnpIvSS8HPt9RCzUSF
FLYKykZ2D5mgpNhrnVLo/JaZ4pHxXNeVN5YawfNKpOtYc5gJXuYazB6rFMxx
L6aoUBNY0X6oFII7Gg1Bn1iIoMXZju5IGK5S6K21LHiQDYngTZKhcfwEz3H3
ZkQlYTxL1+m3xasMFGjM8kljBOHFjELaKYkm3BuTLLYqJVAq2my3bjCQuzq9
5vgsgUrzozR3OAsDKD9hLK6XZmHY7rqpq0kA/exImc7MAoWsSAl9KZc6ghpY
mEBmVMOiS9yiffc/j/uYu0eZyD6HahOs1JXZU+dVsHT24azuJ4vzvaMi/eDO
X1QS3m9rrHDXKgjjfOQwVV4onNxkcX27CdhflIkwd/54AJ/xxU9XEMb+lYTt
xqzBYkYNNtQfqU+v5z6eZgm3GZNnnFd51izVtLoZfz1KCEH+0ljQrB/+7uxW
QBeaFwkLj1E+rWqsx1OG3Od0fcBzPZqnHZowV283DarBdpclJYFwDtIzMZ7w
Aoq/JsP+emmoR/PbL8PzOMjzlWex2+OveebyG6XxPO3IcD/c/njxUL1tuDxJ
MeBo9ppNBT32+RLKyhB9uXqaeObiv+dZRa+dn/jKQAZ6X5VKwjqt13IVhC2o
3pNyaPoVWuj4yJB6F9B8jTEgRXotHcR9uc9APsq3IAYG5m7/tVQzOK5HDFrO
L7P3/Qh45vTaognfRfFmArjf348wXN8y7Xuv4bDRl1Pq/E1DbVxVyIU6MWG8
H0X4CNJ/NBr3b5GGZTR/+b7394rnL2h+23jm7l/zczRh/3+xl0X4/hANSJ7m
D0Kil585fbN4Po3+oxsM9Gf36Vts4ZhbGZA/OdAmKIryzV1AvwQsuc/pls5z
BZqnWZ79/+f1hT9z2qMxEPi//gP2p159
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4pKtor9P17k59EZ0+zNukHd4krjwmkk8gt+2
PPyUUYybg/yuBftS+eQdNurlLWYMcXP4su/j1vQyWYcTmlaTTru7OUSoRsic
uyPjcCk/nv2co5vDm7bcbqPZMg4HamUt0r+4wvlg854g+GD79BF8Hv/1U1J3
uDqsFdLhS7dTcKj7bVVw7oSrQ/X9H7eMqxUccjh/Lkj/7OrwwDXecRajokNF
xArTs8xuDs4TmoXSrBQdVJ80zzvr5ObQaeO5K01JyQHmv24Qn0kZzhft8XrF
UqIC5+9waHp0PELNIaREZfp/CTeHv99KH8yZqO6w7IWH3v+ZrnA+2L/yCP6n
DQHZs867OMguByqUV4PzfU6w287eqgLnrwH5550yxL/fXSDuv6jsIPTJ8Xwa
qyucD3a/FIIvMfUKZ4aVqwMLZ5d8Mp8KnN8ACpcVCP6U9taoyzWqDjtvdf1N
ZUfwTYyB4LcLnF8L0ifh6tDCCwzopWoOLIsnWTHGujrMmMBfZcatDgmPPgRf
BOS+twi+3oQFPwzl3By2mP84lHJKFc6HhSeMfwYMlCDp5Yqrg/uao8sZZig6
VILiK9oVkn7C5CH82y4O7QrsqmdMpOHhBU4Pt6Xg/BpQ/J9G8P+DgaRD4uHL
2qmJbnA+enoGAAw3RwE=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxTTMoPSmViYGCwB2IQXf/bquBcgZeD+NQrnBlMWg4w/oMI8e0XFbQcVJ40
zzub5eUwYyYQWGpB6EQEvzxihenZYAQfbE6Ql0PNpw0B2VJaDu3Lw08Z+Xg5
yCx/4aG3X9NB5JPj+TRTL4dGlqP9huEaDjz+66ekSng56CjKf8m5puZwIT+e
/dxNTzjf5wS77ey1CD7Y/FWeEPFSdTj/SeLCaybvEfzZi5R3/mHXQOW3azjc
kK5JNNrq6WAMBpoQ9/V4OaSnAYGbsYOC48fkM71eDhJgfxhDwmOCl4OB1krh
CykIvv/FiTH/ihH8g21AgyYZO8y30bkyq44w/wCUf38f3xxjI6j9bcYOb3j3
GczU8nIwATmv2djBXbWUaZaAl0PBmu7bGQ3GkPD56emwxfzHoZQqY4i+e56Q
8Cw3djC/djTXZIenQ4/XKxaTQmN4+IGikyEPwQerN0fwecHxADV/J4IPspbh
PJq8pBecn8P5c0G6tJeDfSUwIfw1gvNPH3Zam3kPwY8GB6wRPL7B4bfZyKFk
q+jv02JeDqqgdLbKCG4/2H9d+g4hJSrT/6/wdNhfK2uRLmLgcFzTatLpek+H
kyDz+wwg5hkg+Bv18hYztnjA+RdB5p10h6SDRbpwPix9wvinQOr3QdOPkofD
lPbWqMsxag7LgMn2fyeCHwkKx3sIvjzIW6qeDr/evj5gmawOcU+Ap8PpM0Cg
owFxb7yngy/Iv4fVHPbc6vqbutwTrh+cHq8i+H9ico/+Y/KC878AnTlL3QsS
Hqeg8k5eDqBoT1umDgnfaC8Hb3B+0IDn3/iQIPUFLzUd0PM3ADL7r7k=
      
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/R8Ewj0dju3a0ctWoOnA479+SmqAp8PsRco7/7Aj
+Bv18hYz/tFw+B2Te/SfFVS+XcNhJghIejpMaW+NunxH3SENBK55OOgoyn/J
uabmMN9G58qsPgTf/NrRXJMABJ9l8SQrRl0Phx0OTY+O71CH8x9FiG+/qKAJ
5x8Hu0/LYX+trEV6jIfDBpB7ZHQdEg5f1k6thPH1HG5K1yQarfVw8AApPK7v
cAYEvng4/P1W+mBOoAHEPwaecP4tkPqpCH5Iicr0/ys8HVg4u+ST1+nB+c+z
tL9Nr0Xwn0L5YPcs8XSYAwoPdT0H9SfN884u8oS7Bz18AW20o+U=
      "]}], 
    FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGI5IIaxWZDYzCSwGaB8BjL0DhR7oNwMAEUOAp8=
     
     "], CompressedData["
1:eJxllGtIVEEUx3dVFCnLMJMEUfGxe1f3kVqaWR1CVJy5aCKthKiF66Os7YMm
hH7QFLFMSzafW5oSKhQaKVmEQSbmM0UTKQJJwxI/RJkUarZzZ51BGxi4P+bO
nDnn/z/jfd6YYLCVyWRyy9Rbpo1lJrk9m5RdFcHt7rRjlo0KtniOfHipYFAI
rx4xilBXbxlHVZDb47o2ksE5Mde3djOJc++HGxsGvQgFP7riL7qrwHfh+v2x
BBFSExMUzd8EmDCmOowLIrjfTxFGJhRQEbtkFzKJIdDbcyVnxh9Mq/apdRWc
F849mAnRc/7Ut8ccHI4Bv3U43pinYDxP/jMqGSOy/ksJoTMDl0IAQ5HdQNUh
vQCRfnk2DUkYukN/v05fsuZbicHc4vN8XaEBu9bqcPlDDGoSr0YLhWvhV8Zn
MWys5s2ZT+vg0c2PWTJP8T9et/IoGZivS5wjwq4oS2CVDro1l1vlESL8tJSn
wU3H6mEqKz07ZdYyluIqOdP7aOBeROB0Q5QIJU5xnSaDhp6XzFn6v3wHd4gg
Tt5J/murZSyd3875VaFHWGaijtYnTYSh/lOPsyut7MU5x/FPc2Y/ZrxC8qjC
8IXUv9N6XhGGd+/PLGuPaalfUjD1V7GO6iHj+6X6LCDGkp9iODeRfFdjYfFC
wGrthppxCdEzn7NH29cYTaqanrceS/0LanhJ/OiAGJ8s/jxY58JZut8BBFpV
h8tEupre/yCi8QrV1Gcionru00F+UvvhsaeI6SvlM4e26+3L/bLs1KerD7Lm
36JlPPCi95a9M+c00h/lGkjrnwowCJjlK/nLDUMPWC4+GwghwZYxjyDb+L10
yCRAWZt+OGgUQQYZ/krYJKMJsX5ZJLrEcZb0iuYsxfPewXJE/eOnoPmFIdqv
8Qrqk0gEjaRfHJSM6Trn2tt7rx0ZUdL6qRG4kkbfL0A08ZMz5y7i3+VYxtL+
N1Y2KRlvvRfb2Z/u341o/yT7M722WNK3hrP0Hg0j0BG9IxWUlxAME7+dUNL6
2uLt9YrDbL9U3zLORJY6H5Hx1vv5hNyrQICd7+s/bDBYQA==
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.3782645757361546],
  ImageSize->{60.86199750933997, 29.849843088418428`},
  PlotRange->{{0., 60.86}, {0., 29.85}}]], "Output",
 CellChangeTimes->{{3.739923338767308*^9, 3.7399233390060387`*^9}, {
   3.739977304650917*^9, 3.7399773049712687`*^9}, 3.739992429903714*^9, 
   3.740491412255129*^9, 3.7405050030469313`*^9, {3.740774201237671*^9, 
   3.74077420147831*^9}, {3.740830785853128*^9, 3.740830786102565*^9}, {
   3.740835717050376*^9, 3.740835717256691*^9}, {3.7409219190467653`*^9, 
   3.740921919325441*^9}, {3.741353131910626*^9, 3.741353132234838*^9}, 
   3.741651833581115*^9, 3.741653324014834*^9, 3.741653937369079*^9, 
   3.741704290698957*^9, {3.7419595396987867`*^9, 3.741959540090254*^9}, 
   3.74198258249769*^9, 3.742055545811886*^9, 3.74230917085806*^9, 
   3.742314098921987*^9, 3.742314669197896*^9, 3.742321145561656*^9, 
   3.7423229499554462`*^9, 3.742324704071237*^9, 3.7423396672099953`*^9, 
   3.742392471232121*^9, {3.742418083981503*^9, 3.742418086603067*^9}, 
   3.742421132334032*^9, 3.742560849443678*^9, 3.7426455305326653`*^9, {
   3.74267701472893*^9, 3.742677014906629*^9}, 3.7427282365714817`*^9, 
   3.7427327790040493`*^9, 3.743425727163184*^9, 3.743426149050701*^9, 
   3.743692156493318*^9, 3.746215249428568*^9, 3.74621573584956*^9, 
   3.746216028820202*^9, 3.746281899147442*^9, 3.746300817937182*^9, 
   3.7463034591656637`*^9, 3.746388457927506*^9, 3.7467555125356293`*^9, 
   3.746883066660366*^9, 3.746885164375585*^9, 3.746885947298963*^9, 
   3.746886150193675*^9, 3.746896058262931*^9, 3.746992584731105*^9, 
   3.7469948997116203`*^9, 3.747141297139991*^9, 3.7471466956935062`*^9, 
   3.747166610034816*^9, 3.747394053103589*^9, 3.747398694050912*^9, 
   3.748010005395393*^9, 3.748294073742737*^9, 3.748351440853375*^9, 
   3.748370991160384*^9, 3.748608277395789*^9, 3.74862985659137*^9, 
   3.7487794544470367`*^9, {3.748779668736524*^9, 3.748779693440469*^9}, 
   3.748780210993805*^9, {3.748780400439863*^9, 3.748780413318791*^9}, 
   3.749162954534424*^9, 3.7491633236504593`*^9, 3.749163990281612*^9, 
   3.749164590648937*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f16f4fe9-d00d-467e-bfcf-9a0635aa1e57"],

Cell[BoxData["15.614`"], "Output",
 CellChangeTimes->{{3.739923338767308*^9, 3.7399233390060387`*^9}, {
   3.739977304650917*^9, 3.7399773049712687`*^9}, 3.739992429903714*^9, 
   3.740491412255129*^9, 3.7405050030469313`*^9, {3.740774201237671*^9, 
   3.74077420147831*^9}, {3.740830785853128*^9, 3.740830786102565*^9}, {
   3.740835717050376*^9, 3.740835717256691*^9}, {3.7409219190467653`*^9, 
   3.740921919325441*^9}, {3.741353131910626*^9, 3.741353132234838*^9}, 
   3.741651833581115*^9, 3.741653324014834*^9, 3.741653937369079*^9, 
   3.741704290698957*^9, {3.7419595396987867`*^9, 3.741959540090254*^9}, 
   3.74198258249769*^9, 3.742055545811886*^9, 3.74230917085806*^9, 
   3.742314098921987*^9, 3.742314669197896*^9, 3.742321145561656*^9, 
   3.7423229499554462`*^9, 3.742324704071237*^9, 3.7423396672099953`*^9, 
   3.742392471232121*^9, {3.742418083981503*^9, 3.742418086603067*^9}, 
   3.742421132334032*^9, 3.742560849443678*^9, 3.7426455305326653`*^9, {
   3.74267701472893*^9, 3.742677014906629*^9}, 3.7427282365714817`*^9, 
   3.7427327790040493`*^9, 3.743425727163184*^9, 3.743426149050701*^9, 
   3.743692156493318*^9, 3.746215249428568*^9, 3.74621573584956*^9, 
   3.746216028820202*^9, 3.746281899147442*^9, 3.746300817937182*^9, 
   3.7463034591656637`*^9, 3.746388457927506*^9, 3.7467555125356293`*^9, 
   3.746883066660366*^9, 3.746885164375585*^9, 3.746885947298963*^9, 
   3.746886150193675*^9, 3.746896058262931*^9, 3.746992584731105*^9, 
   3.7469948997116203`*^9, 3.747141297139991*^9, 3.7471466956935062`*^9, 
   3.747166610034816*^9, 3.747394053103589*^9, 3.747398694050912*^9, 
   3.748010005395393*^9, 3.748294073742737*^9, 3.748351440853375*^9, 
   3.748370991160384*^9, 3.748608277395789*^9, 3.74862985659137*^9, 
   3.7487794544470367`*^9, {3.748779668736524*^9, 3.748779693440469*^9}, 
   3.748780210993805*^9, {3.748780400439863*^9, 3.748780413318791*^9}, 
   3.749162954534424*^9, 3.7491633236504593`*^9, 3.749163990281612*^9, 
   3.749164590651012*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"88ffb926-d552-4af1-a255-65d0de760f7b"],

Cell[BoxData["219.4172964`"], "Output",
 CellChangeTimes->{{3.739923338767308*^9, 3.7399233390060387`*^9}, {
   3.739977304650917*^9, 3.7399773049712687`*^9}, 3.739992429903714*^9, 
   3.740491412255129*^9, 3.7405050030469313`*^9, {3.740774201237671*^9, 
   3.74077420147831*^9}, {3.740830785853128*^9, 3.740830786102565*^9}, {
   3.740835717050376*^9, 3.740835717256691*^9}, {3.7409219190467653`*^9, 
   3.740921919325441*^9}, {3.741353131910626*^9, 3.741353132234838*^9}, 
   3.741651833581115*^9, 3.741653324014834*^9, 3.741653937369079*^9, 
   3.741704290698957*^9, {3.7419595396987867`*^9, 3.741959540090254*^9}, 
   3.74198258249769*^9, 3.742055545811886*^9, 3.74230917085806*^9, 
   3.742314098921987*^9, 3.742314669197896*^9, 3.742321145561656*^9, 
   3.7423229499554462`*^9, 3.742324704071237*^9, 3.7423396672099953`*^9, 
   3.742392471232121*^9, {3.742418083981503*^9, 3.742418086603067*^9}, 
   3.742421132334032*^9, 3.742560849443678*^9, 3.7426455305326653`*^9, {
   3.74267701472893*^9, 3.742677014906629*^9}, 3.7427282365714817`*^9, 
   3.7427327790040493`*^9, 3.743425727163184*^9, 3.743426149050701*^9, 
   3.743692156493318*^9, 3.746215249428568*^9, 3.74621573584956*^9, 
   3.746216028820202*^9, 3.746281899147442*^9, 3.746300817937182*^9, 
   3.7463034591656637`*^9, 3.746388457927506*^9, 3.7467555125356293`*^9, 
   3.746883066660366*^9, 3.746885164375585*^9, 3.746885947298963*^9, 
   3.746886150193675*^9, 3.746896058262931*^9, 3.746992584731105*^9, 
   3.7469948997116203`*^9, 3.747141297139991*^9, 3.7471466956935062`*^9, 
   3.747166610034816*^9, 3.747394053103589*^9, 3.747398694050912*^9, 
   3.748010005395393*^9, 3.748294073742737*^9, 3.748351440853375*^9, 
   3.748370991160384*^9, 3.748608277395789*^9, 3.74862985659137*^9, 
   3.7487794544470367`*^9, {3.748779668736524*^9, 3.748779693440469*^9}, 
   3.748780210993805*^9, {3.748780400439863*^9, 3.748780413318791*^9}, 
   3.749162954534424*^9, 3.7491633236504593`*^9, 3.749163990281612*^9, 
   3.749164590652491*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"631e249c-556e-4b4e-a910-91f94649ac82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Rr", "[", 
    RowBox[{"2", ",", "r"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"10", " ", "ri"}], ",", "rf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748780250645357*^9, 3.748780269304867*^9}, {
   3.748780308955392*^9, 3.748780368234251*^9}, 3.749162942652725*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"57d88186-ef74-4c6e-9e66-b0b8b6874fc4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
NbFsiSnl94W8pv7aQPt8+4QZ1oq1HW61MoZ8+n0+UhZkjNRvPpX90RjYtgmj
Bt9M8M/8o4d/HE3g24M3qVdnjZDBIqHG9LMJ3E9JavU/YYiv3IjD4HoeyjIP
OI3f1cdjNzbij66fh2plgke26jk8Mhz9PNTJFFYctlbb3+pg38Lqhu+mKQzm
p1SdctdCrmH9tuuuZGBUVd5t6KWB0WQujgx3Mkhvlk7N3dTAXe+nbXs9yXDN
bCrYx04DlwZd6KR9yXBT15y38rwGNr6L19kJJoNtEpueobQG2va+76MkksHu
n8BdKhvqWN5xaaKqlgxREd+Hh2+p43ENEbFP9WT443JrYNpBHdPavwRwIxmM
LLYuLFurY0jb3cMBzWSwqM77xmSojuSWvCua3WRgviSg7Supjjv4aXFkjAx3
FxTrfm+Q0FX5qSLjJBl8gkl2p5dI+KnhdtSZaTIcmOwOCJwjYd/z/aJ5H8jg
Eci6xDJAwry6k7ccV8jAlcAfYFZNQi6FzabMtb//bmWaVD0hYXRtA2v/Ohnk
NCGcrYCEns/OVcpskWHnazfVSBIJl2Q5aR22/+4xnlJRpZDwUs2kSepPMnzP
TR0qCSPhgExhfs9vMixRTJp575BQu9p5688fMsQ1PfgTfZuE/wMtrB+x
       "]], 
      LineBox[{{1.7491603796899708`, 0.000011412466588758819`}, {
       1.7491603796899728`, -0.00001907983600243423}}], 
      LineBox[{{0.07518984370626514, -0.00001907983600243423}, {
       0.07518984371519669, 0.000011412466588758819`}}]},
     Annotation[#, "Charting`Private`Tag$109756#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.001, 100}, {-0.00001907983600243423, 
    0.000011412466588758819`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.748780303938945*^9, 3.748780370496523*^9}, {
   3.748780405563067*^9, 3.7487804172471046`*^9}, {3.749162943657909*^9, 
   3.749162959828168*^9}, 3.749163326499219*^9, 3.749163994206929*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"f235f72a-d5bd-47bf-9af7-2d81e04a793e"]
}, Open  ]],

Cell[TextData[StyleBox["Ecuaci\[OAcute]n a resolver:",
 FontSize->24,
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.739918726503496*^9, 3.7399187340096283`*^9}, {
  3.7413532538812428`*^9, 3.741353281851891*^9}, {3.7413768179488363`*^9, 
  3.741376818699942*^9}},ExpressionUUID->"ce74ca16-802a-4d2d-bd07-\
98ef7610f6d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eceins", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"F", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], "]"}]}], 
       ",", "\[Theta]"}], "]"}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"F", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "r"}], "]"}]}], ",", 
        "r"}], "]"}]}]}], "\[Equal]", " ", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Rr", "[", 
      RowBox[{"l", ",", "r"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"LegendreP", "[", 
       RowBox[{"l", ",", "1", ",", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "2"]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.740923779349449*^9, 3.7409237870102367`*^9}, {
   3.7413770787825937`*^9, 3.741377092780073*^9}, {3.7413771425544243`*^9, 
   3.741377148041397*^9}, {3.741377284547927*^9, 3.7413772879834213`*^9}, {
   3.741644580620928*^9, 3.7416446147536097`*^9}, {3.741644749429421*^9, 
   3.741644849135778*^9}, {3.741652569284998*^9, 3.741652600777359*^9}, {
   3.741652971566545*^9, 3.741653001061545*^9}, {3.741653060717815*^9, 
   3.7416530702702093`*^9}, {3.7417043351888723`*^9, 3.7417043434725037`*^9}, 
   3.7419596454620323`*^9, {3.741959677039844*^9, 3.741959685862308*^9}, {
   3.741982602538084*^9, 3.7419826053066587`*^9}, 3.742055655486087*^9, 
   3.742392400775592*^9, 3.7424180475855722`*^9, {3.7425630294503517`*^9, 
   3.7425630510936623`*^9}, {3.743692074507585*^9, 3.7436921280671997`*^9}, 
   3.7462154434688597`*^9, {3.746215507137677*^9, 3.746215507867888*^9}, {
   3.747167381016583*^9, 3.747167381777108*^9}, {3.748779244945774*^9, 
   3.7487792728774023`*^9}, {3.748779385419798*^9, 3.748779437232297*^9}, {
   3.748779483005501*^9, 3.748779509434188*^9}, 3.748779713092123*^9, {
   3.749163352862125*^9, 3.749163353035645*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"5c4fb602-2d69-4d3e-a57f-9c6699829127"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"efe", "=", 
  RowBox[{"ParametricNDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eceins", ",", 
      RowBox[{"DirichletCondition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "r"}]}], ",", 
        RowBox[{"\[Theta]", "\[Equal]", 
         RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}]}], "}"}], ",", "F", ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "ri", ",", "rf"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", "l", ",", 
    RowBox[{"DependentVariables", "\[Rule]", 
     RowBox[{"{", "F", "}"}]}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "All"}], ",", 
    RowBox[{"MaxStepFraction", "\[Rule]", 
     RowBox[{"1", "/", "100"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.746281883200776*^9, 3.7462818863190203`*^9}, {
   3.748371459599084*^9, 3.748371461080853*^9}, 3.748371525516243*^9, {
   3.748372059520276*^9, 3.748372062748534*^9}, {3.748608262780555*^9, 
   3.748608267474661*^9}, {3.7487794442671957`*^9, 3.748779460989848*^9}, {
   3.748779516984706*^9, 3.748779525284499*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"cf7eb2bf-d8b0-44c3-bab7-954fd41e6138"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ParametricFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                   0.0874367476365131, 0.08197166587636243}, {
                   0.18222810297558026`, 0.1358255024317191}, {
                   0.27073779576926765`, 0.13315455086535802`}, {
                   0.3575112797365835, 0.08143316377978886}, {
                   0.4516394623155443, -0.007347854733426912}, {
                   0.5394859823491253, -0.08816932746972758}, {
                   0.6346872009943513, -0.13787329990112937`}, {
                   0.7281522108132057, -0.12816574147938434`}, {
                   0.8153355580866803, -0.07001063326902106}, {
                   0.9098736039718, 0.02121659675083076}, {0.9999999090909091,
                    0.10024804094746914`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                   0.0874367476365131, 0.08090369567458766}, {
                   0.18222810297558026`, 0.12746559200130417`}, {
                   0.27073779576926765`, 0.1116266937044405}, {
                   0.3575112797365835, 0.046963725126600256`}, {
                   0.4516394623155443, -0.04509050859182233}, {
                   0.5394859823491253, -0.11115559892361665`}, {
                   0.6346872009943513, -0.12642564594664163`}, {
                   0.7281522108132057, -0.07740196037964171}, {
                   0.8153355580866803, 0.004179083230780074}, {
                   0.9098736039718, 0.08937493944143977}, {0.9999999090909091,
                    0.12834702174618903`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                   0.0874367476365131, 0.07984396759533968}, {
                   0.18222810297558026`, 0.11939549826670079`}, {
                   0.27073779576926765`, 0.09184904274707059}, {
                   0.3575112797365835, 0.017913117173780694`}, {
                   0.4516394623155443, -0.07109962300031061}, {
                   0.5394859823491253, -0.11717052830989395`}, {
                   0.6346872009943513, -0.09879571259704382}, {
                   0.7281522108132057, -0.022693471356141894`}, {
                   0.8153355580866803, 0.06128703302641453}, {0.9098736039718,
                    0.11605625481609519`}, {0.9999999090909091, 
                   0.10415981267620744`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                   0.0874367476365131, 0.07879243663407876}, {
                   0.18222810297558026`, 0.1116081822210312}, {
                   0.27073779576926765`, 0.07372482040530459}, {
                   0.3575112797365835, -0.006267252216927747}, {
                   0.4516394623155443, -0.08743897872291118}, {
                   0.5394859823491253, -0.11109134853087661`}, {
                   0.6346872009943513, -0.06371549528296311}, {
                   0.7281522108132057, 0.02544576624054603}, {
                   0.8153355580866803, 0.09464282937855747}, {0.9098736039718,
                    0.10731931496853601`}, {0.9999999090909091, 
                   0.0516787429232188}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                   0.0874367476365131, 0.07774905743802465}, {
                   0.18222810297558026`, 0.10409673959866513`}, {
                   0.27073779576926765`, 0.05716133039337165}, {
                   0.3575112797365835, -0.026084496726167965`}, {
                   0.4516394623155443, -0.09591154799603378}, {
                   0.5394859823491253, -0.09685594593277226}, {
                   0.6346872009943513, -0.02730376120671303}, {
                   0.7281522108132057, 0.061646715198529656`}, {
                   0.8153355580866803, 0.1046634148537508}, {0.9098736039718, 
                   0.07509702498429204}, {
                   0.9999999090909091, -0.006536873471333553}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                   0.0874367476365131, 0.07671378556951527}, {
                   0.18222810297558026`, 0.09685439581479163}, {
                   0.27073779576926765`, 0.042069810325321415`}, {
                   0.3575112797365835, -0.042006785469922474`}, {
                   0.4516394623155443, -0.09808544986431629}, {
                   0.5394859823491253, -0.07760167026270944}, {
                   0.6346872009943513, 0.0063643674428021085`}, {
                   0.7281522108132057, 0.08405712128907425}, {
                   0.8153355580866803, 0.09555213349985489}, {0.9098736039718,
                    0.03202960165577907}, {
                   0.9999999090909091, -0.054402034659985464`}}]}}, 
                AspectRatio -> 1, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                  Dynamic[
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {Automatic, Automatic}, 
                Ticks -> {Automatic, Automatic}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["F", HoldForm], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "l", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                   0.0874367476365131, 0.08197166587636243}, {
                   0.18222810297558026`, 0.1358255024317191}, {
                   0.27073779576926765`, 0.13315455086535802`}, {
                   0.3575112797365835, 0.08143316377978886}, {
                   0.4516394623155443, -0.007347854733426912}, {
                   0.5394859823491253, -0.08816932746972758}, {
                   0.6346872009943513, -0.13787329990112937`}, {
                   0.7281522108132057, -0.12816574147938434`}, {
                   0.8153355580866803, -0.07001063326902106}, {
                   0.9098736039718, 0.02121659675083076}, {0.9999999090909091,
                    0.10024804094746914`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                   0.0874367476365131, 0.08090369567458766}, {
                   0.18222810297558026`, 0.12746559200130417`}, {
                   0.27073779576926765`, 0.1116266937044405}, {
                   0.3575112797365835, 0.046963725126600256`}, {
                   0.4516394623155443, -0.04509050859182233}, {
                   0.5394859823491253, -0.11115559892361665`}, {
                   0.6346872009943513, -0.12642564594664163`}, {
                   0.7281522108132057, -0.07740196037964171}, {
                   0.8153355580866803, 0.004179083230780074}, {
                   0.9098736039718, 0.08937493944143977}, {0.9999999090909091,
                    0.12834702174618903`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                   0.0874367476365131, 0.07984396759533968}, {
                   0.18222810297558026`, 0.11939549826670079`}, {
                   0.27073779576926765`, 0.09184904274707059}, {
                   0.3575112797365835, 0.017913117173780694`}, {
                   0.4516394623155443, -0.07109962300031061}, {
                   0.5394859823491253, -0.11717052830989395`}, {
                   0.6346872009943513, -0.09879571259704382}, {
                   0.7281522108132057, -0.022693471356141894`}, {
                   0.8153355580866803, 0.06128703302641453}, {0.9098736039718,
                    0.11605625481609519`}, {0.9999999090909091, 
                   0.10415981267620744`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                   0.0874367476365131, 0.07879243663407876}, {
                   0.18222810297558026`, 0.1116081822210312}, {
                   0.27073779576926765`, 0.07372482040530459}, {
                   0.3575112797365835, -0.006267252216927747}, {
                   0.4516394623155443, -0.08743897872291118}, {
                   0.5394859823491253, -0.11109134853087661`}, {
                   0.6346872009943513, -0.06371549528296311}, {
                   0.7281522108132057, 0.02544576624054603}, {
                   0.8153355580866803, 0.09464282937855747}, {0.9098736039718,
                    0.10731931496853601`}, {0.9999999090909091, 
                   0.0516787429232188}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                   0.0874367476365131, 0.07774905743802465}, {
                   0.18222810297558026`, 0.10409673959866513`}, {
                   0.27073779576926765`, 0.05716133039337165}, {
                   0.3575112797365835, -0.026084496726167965`}, {
                   0.4516394623155443, -0.09591154799603378}, {
                   0.5394859823491253, -0.09685594593277226}, {
                   0.6346872009943513, -0.02730376120671303}, {
                   0.7281522108132057, 0.061646715198529656`}, {
                   0.8153355580866803, 0.1046634148537508}, {0.9098736039718, 
                   0.07509702498429204}, {
                   0.9999999090909091, -0.006536873471333553}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                   0.0874367476365131, 0.07671378556951527}, {
                   0.18222810297558026`, 0.09685439581479163}, {
                   0.27073779576926765`, 0.042069810325321415`}, {
                   0.3575112797365835, -0.042006785469922474`}, {
                   0.4516394623155443, -0.09808544986431629}, {
                   0.5394859823491253, -0.07760167026270944}, {
                   0.6346872009943513, 0.0063643674428021085`}, {
                   0.7281522108132057, 0.08405712128907425}, {
                   0.8153355580866803, 0.09555213349985489}, {0.9098736039718,
                    0.03202960165577907}, {
                   0.9999999090909091, -0.054402034659985464`}}]}}, 
                AspectRatio -> 1, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                  Dynamic[
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {Automatic, Automatic}, 
                Ticks -> {Automatic, Automatic}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["F", HoldForm], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "l", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Generator: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["ParametricNDSolveValue", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Dependent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "F", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Independent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"r", ",", "\[Theta]"}], "}"}], "SummaryItem"]}]}},
                 GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ParametricFunction[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7462818894511013`*^9, 3.746281912311843*^9}, 
   3.746300832135445*^9, {3.746303468225634*^9, 3.7463034701936398`*^9}, {
   3.746388537120391*^9, 3.746388538618005*^9}, 3.746755525887096*^9, 
   3.7468830705907*^9, {3.746885926269265*^9, 3.746885953552567*^9}, 
   3.746886154753257*^9, 3.746896066806881*^9, 3.746992590420207*^9, 
   3.746994868659134*^9, 3.7469949034979362`*^9, 3.747141306624848*^9, 
   3.747146702327094*^9, 3.7471667156732407`*^9, 3.7471673911681623`*^9, 
   3.747167430874864*^9, 3.7473941039705477`*^9, 3.74739869462673*^9, 
   3.748010010230195*^9, 3.748011238655731*^9, 3.7482940770003347`*^9, 
   3.748351449276597*^9, 3.74837100268404*^9, 3.7483714616927147`*^9, 
   3.748371526938937*^9, 3.7483715758092422`*^9, 3.7483720634017677`*^9, 
   3.748608283569894*^9, 3.748629864604298*^9, {3.748779517803302*^9, 
   3.748779526234284*^9}, 3.748779716230006*^9, 3.7487802192477427`*^9, 
   3.749162970640358*^9, 3.749163083399179*^9, {3.749163330850322*^9, 
   3.7491633567393427`*^9}, 3.749163998235875*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"23d586a1-a519-4fa8-823b-33b5896c2835"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"efe", "[", "2", "]"}], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "2", ",", "rf"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"MaTeX", " ", "/@", 
     RowBox[{"{", 
      RowBox[{"\"\<r\>\"", ",", "\"\<\\\\theta\>\"", ",", "\"\<F\>\""}], 
      "}"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748779766447304*^9, 3.748779781662088*^9}, {
  3.7487800153072968`*^9, 3.7487800163580713`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"1ae0df2b-3bff-4b87-bee6-e82f480da72d"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
FO58EPxlInc+CD7hJXc+CF6azZ0Pgl/Yyp0PgucbcOeDLrvzbaN8O0joDL6Y
t74BfoK3vgE+uxd3fQP8dD/u+gZ4+AXu+gb4gPfc9Q3wp+O46xvgVzdy1zfA
59zhrm+AL9Ljrm+AX2rkrm+AX37AXd8A/1vOXd8Ab23grm/EVOsY/9bsJKEz
eF/eeh24gT93vQ78+Trueh14v3Hc9TrwxAPc9TrwuMnc9Try3E/c9TpwZV/u
eh34TFXueh24eQZ3vQ68nRJ3vQ487QN3vQ58liV3vQ68tIN4vc5Ld/RZGYGK
sM+HnAKtCxdJXpeRc7FGpO5P+Aamfl12J3di3/Lx8dQo35/EHtx01mmrdZ9+
SfDqS7PMjcw6Cvn+wdtd4vrnr9PWHkg9LxDok/KY1v5WTQgPIfZ3lg8Y/CTl
MXku2g+/Xt6By5wEiSMJH7Psmvvg6gBSHjx3eKb8RE9tqhvsvz82d51xz42U
B88N9nPsVmIQQp7LLw+eC970KFVpQBR9LvgC6zdWCe3oe/lw/ebDM82vLfg6
gC+xW9xg/yeYPJdvj+eCC+9HtD8mE0D8R91J3Phbs07CP3hdysEspVzqn28P
/+AOxcKh5Vn+xP/8D/2zNPUaJfyD966O9Q6Lo/759vAPvvigWbfkydT/uajW
lTZFzRL+wf2y1X6FOlP/fHv4B3dztTjzaag/4WjnNy/bq8kp+zNnw86PFSSO
JfZXtu1K3jLDm3DY58jc3abv6E3KyZ+fojz8foTnoh9t4T0XfAPrPyWvpaeA
ERI/k5yirH+XehAOeyWWF4zZ2lUgtCb28yu2jbry2Y1w2P98LOb1lwzbCxg7
Yj+vKvaMbbMz4bCXZ3nfCaW/RRZOxP6grPmB2kmOhMPekOWO/4l7Ra7EXubo
PEO/v3aEw35JtpiPP7Tiu0jdg9hbyBglnsy1IRz2FwVi7vPBo0n00pPYb0kR
VF3wtiIc9qYsn6mv8Um015vYPzM33yFzS0g47ENZvnL651pRsC+xX610cP/w
4nGEw36qopijv8PeanP55JzSUYTD/sYmMUf7iW9cr3Uq6a9E++HHW7Qf2Ne5
iNsz2g+4J9tu0U7AjV+5lKf9oe0EfIJ+wMEBJjQe4rkj9rxc8q1gBOl3sNfl
9Tt++TFeg5/WMzfS7TaRlH/ShbzE+m4yQm22v6P84C9jS/JCjtP+Bc6PA+An
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
+BJ7nJf4Ljj4d2cO7dfQYYpHXOpcO2qPcxGvu/510TCn9tDnwN3AhCXVPsSe
nJeIz1ruXEnHL4x3li0vi5b840PvG2H1VFE8tHK23ETiB+cNRvD8IP7vbPJ8
4phDn4tzBX+7cMuJOL+wIO1vQXdaL5wf0OHpgHgevb5VJ2sZtcc5gSE8nRG3
Dwu+L17205e0k1vro8b5Pvptke6wclFwFF1vJ+dXP3TcOD08gLQ3vPfTZl0a
zzf4M7/HDq8uT9GQOI/3WKN2kfIkDYlzMsa//O5Wm2hInHvxD8rS7dNPQ+Ic
i7N/rvpaeQ2JcynbX/S/M/ebusQ5k1sr2h6Ob1CXONcdz9rzz2Xpsv7551J6
sOXhnz+paRWXn3+eJImtL/98yClWH/55j8fj9w0bUKwhse5d/c/Tg4o6GkL5
eXHTztXfIuX8fs+sZeNDdeF7ux0u6WlPCY+xdq21na0u/DWxpH5ycA3h8xT3
WjkOVBfurZpuUbvoI+HHSqZs6PBRTTg7q5/+a2eqZ2W326P23lQTdl2z8kL8
S7p+G9FN98XVf/U8Y6EbOzqDrtOGrNX9dveruvBNeGmM+iiqp/vtkuLLz9SE
nS8NrovPouuo/Vc5VAu7qQuX5bX+Wryf6tm3du/dFd7qQvt9e9funUP1/Bp1
hbE9rS5kNtyKHGVN9RwdsUMmS1lDqDteVc+uN9XTyON78asADWGWSCHg6Ue6
XhTGln9p3zCT4izaHhTMxfrz1+eZAf7qY36qC1NVw26vG0/zwC3x1UdqD2pI
/G+lcWL28zdzNCT+V3JQr9VzmoOGxP8+dLb/6B6vpyGxv1yTovfrtqKGxP8s
PD/tenDur7rE/yPUWM4/v32C9cM/R31vm/i5/H03T7ac/HPL+9l68c8bu7M6
8M/9NvxJ7vmyTl34YczFY9MPVJLyPNXZkbMs8d/3PsgpXbYf3Xc41PtAqtEw
dWGXezWHIybT/QXfvY2rbzWpCYWvt4eolFIdejpdy+5ToiZ8+sVLeUQ0bZ+/
7TpWnKtQE7qfMYtVG0bb29g+jjnr26sL06w1LuQGUx02xb+tNbD7t70NdDT4
o0vbm2DJ8A1Fe9SFyp8/P2xqoDo4qHe5VyWnIcx/Mjhh9SmqwwK2nz56d/eT
2xbaDs33Nfd2Hq0hDAm8tTFEhupzNVrcnm3rn080+VxNynmXfa5lm7ecbjk9
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
4onlvvHRXyzUUiPiDp6kedcd9vzb+kkHPMOHUB3Gzuw5rXbPJ4vACRlMugLV
Af6zpy70nx1P81WcPz8fNnKjl6sj0eHyghYt+V2NFpVHZnR7t8SB6IB1/itp
C4qSFRyIDijn7vsWvlZyDkQHlPMfl0/mCpMdiA7j2HLuL+sTM6SNznc29E1t
/dr7u0X/pyWNR3KmknHhb2u5zGCjbxbGTl3MzfbReU31+Yge6RFfLUoX1Ye0
b6HzGvjJevHIYI+KI6mvHXs+sHj4yeKkeXReI2L9Jz3JyPrV047UF/sseqfu
Gu4T2ZD6zqoa0DnUudli7ACtbxmuNqS+OFf/cbbpmA3DbUh9X7LllJ8xLvjD
JxtS37KMyCcqJ1ssvBvi1LL/a56Ic62pkQ51Kb3oPBH2R9ZuaLd9KNWtu7pN
/ljbNouBhV18df5rnohzg9eSnOU39aP5auLfdUWxIb8t/IM9S++t8yP+4cfY
pPFd3BM6H4SfBhPN8zNL7Ihu8HNVVkPH/CStl+c+zW2TX4gsptftW/sin77H
K4nRe7b+/Gsx4/PuhJ/H6HvcZ9F2QnboH4vG56e6ak2n7xF+jDs/aOw8mLZb
/P9XQS7ku+syOs+C/yPWPb+Pa6LvEfuMFQGB1eqxtuQ9GoacOXy3+1+L7Mri
StPP1uQ91rH/L2hevW5voocVeY/72XJOyw4qXrjAktT3dvdlYy0LZISLO1Uu
tLlH+++YppsTFpYLhApHqgYbHKD9F/dCrKg0t/nRSuebTSENN7aECoTN9zfd
irKn8034b9mR7zTsozPRAf/Drf8S/LVivRPR4Z9/DlwOspMR9gmSKb4U4Eh0
wP6vd9X2EVY2tP+inAfaHlx9621PdEA5Y68Izu7eY0d0QDnHx8ZGfg2k8806
z0/6j1bKCr1XW0Wmf6Tvfd+V7ic+95AVGuUwzfEjaP4fYGRs1DmznXBEv+Fm
Z5RonMe53CCvOOZAAo1v3fcHntMxaCecM3BS2H0hjW947qoVi09/uedK9MF+
/dCNZjWj/h2PoA/K438kKvbSaRrnsV+/b+TczJpnNM6jnLo/vFSr9WmcRzn/
7hh2/FEWnVeinNsm5LdfHk3nlZ3SJvYJ95ATyjZndm/tEU70KZZN3J1Y3V54
7NYI76vrqD6L5h7UzJjeXtiiPsnkTCrVB+ccNEpy9j5RpPmA4dtbh/Jb/p1X
nl34zq6J6oPn7th65HnUYJr/4DxG48KZKvsC6fwI5Umu1Ck8mUrzAZzHuPLo
bJ3fW5oPoJy1nlV2z/1oPoByNkb430l5QeePKKeGZ5lyvrcz0Uf/8e2OP/t3
EK7YsLJwlxXV57X159QeR+WFrwZmrFdqofrsONuj+zATeWHEhL5acl1ofohz
LCOihatFGVQfD22TrQ7X5ISOFcvuPN5A8yU8V919fS/PB1QfnLf5czfHsHEy
zQ9RHq+5Pj7qsjQfxnmbUtMhGqGxND9EOUc81d7Z+SedP6KcO79Zi7S2uJL6
tlsVlHBwXkfh5XZKB8Ji6Hyw4HuigGnXUbh3WIDc1bW0vjh3lP3GSD9Dh+b/
seGHkp5t6CAU2QZMGKBF838nFdOW5NqOwrue3dVSJtH5Ds5HLTfutkD2K60v
yrM5p6BWsI/WF+ejzPuH3DKYQvN/lFN5gkNTwnCa/6Oc8uYu49u10X2x2ew8
JenAE//hNu6EO7HzlLwk2YgbV6j9HLZewqVc7sjWyytT7Aftir/fCp0xT/nx
YlpmbHgA3Qdh8/mG/NFBfz75E//R7PxibZ587sal9LmD2flFiZz7Dmsf+h59
2Tw59dL9s2kr/Al/wuaN71UMjproUh7E5lFX5GWzBj7xIxz5RtDUPn9e7KM8
d+Kv2qS3Pyw2suM4eOOLiptH4n9ZpLc8k+ufSNfxYH/+77rGUFVPwoUJp165
3P5pMd91oMzn7pTDjzmPY9w/vVYoXNiPjmvIE2Tcftd2iKXjmvo4q6bCP98t
btVsc/k20pXGczbf+PFWzNE+Ya9tys1D8D+dy6bcPAT1mtlenIeAo/yBDkxm
lh7N32Af0Olh11GploRDB6M0j7PPdgoJh5+KLVwOHZiOYj9o5yhn3z0Gd30E
QsKhj3C3mKP9aLD1tRi+ra+nwJxwJVafCwZijvdrxOYtTxzF+TDeC/iG30Nm
TDen7wt50fK6iXlJzvR94X+U2sPaDXu/kf7vEvlV5zk+Go7n6D418qiGyGEq
14bSfBL5g+qXfsIhD+j/WJFvzPn7bf873//ap2DH085j+w4ZpUTbP8aRQcuH
66RFU474aVE2suTFA9ofEc9fidz+r9+BI557neT2U6xHhdUtC0r/d14P/4hX
vo7tFUbaBhB7rM/opXP367HuMbI2Lj//3GTCsT6wp2plr062lGMeXTCvZNjR
d5NIXMK8sr96vmmqK83bwZ9sMJPdtZXaY/6VHLGwdt1Iag9ezuoMe8xfnoxd
fmOdJrUH140Sv0e0E+xDLe2RJLu2iydp5+ALr9arLiofT/M3dr/mSlawyQp9
2q7ABcdn99JbSuMw2s9FtjzgaCeubL3AkY9dVOPqA+7K6gOO/GQoqzM4xmVb
3nvB+GXPvkc8F+tChyumNshq0/Jg/eRgqPlK3daphCPPHFD1YtOID5Qjv8rL
Y1pmdKN+kFeoXR0c8tGMcjd2HMQ4BU7GKR7H+lIczw/WYbqc4z4X6xKxbDmh
A/5vmMTON2GP/M2NV1/kLW48fTC+ayT08B7oH076Ec7DnPsi7ndoPzhXmTtz
WPSy3rT9gGspR8T+CHcn/RTtJELd4bOgio53mO9M5o2bmDeZ7Ju7+XetHykn
/CtmlD9cq0rbFflON29dGv3luecZg5uHqH+sPyS42C+4fZzGYfwvL4JXL/AP
PcT1QnmQX/HfL9Zj57F6wj/WAa6EVD7V7kbjfMgl9bKXaa0Wp1mOcpLvfTQ0
jK9NoeXHeHeZzRPA4b/vzg2jlZdSjvJ35/nBcxV49ogb+0KPr/NdQuf7KE/f
HOdp/eRoPgD/+4+LOfIBcv729eOdj+c7EI7yl92e8c55MuXws4hnj3Imsesn
4BjfZ7B+kG/guUs0m448iKb3pcD/Lw0xR74B+9R3d27oRNA8BOW8yOYh4NA5
+EiX3maXrQmH/448Pyi/Oc8eOhd2mriqwwq6/47yRP0ZZZrfj+Y58P+1TcyR
n5B7h5TyLztajScc9omKYo5+Dfu6BSF5BmtNCIe9BsvRHjBu2q1du9w6mObb
2F/IZ8dfcOxTJNjkdVbRoxzjbJXb1qzAOponYN3+OZsngGP93250XdqgfMox
Lhdvzzo8L5Hyhex6+FFeHoJ19QL3ukJrL8oxXnfxOrFsqzblv9j15PG8PAfr
0pk3OnaIaKP9BeP4HV58w3rs9ywDmSc3Kce6ruD9JNcfFyjHOvBaNu4hPmAe
oV8vzgPBsb46uI2bN+J8i9UR8fgOjnz1VYTL1suaNL5h/bOAzRvJuVN23TWH
l2fC/2w2T0D5Mb4/9+TqiXUVH55uGPdH8N4j1hk8ee8L+YAxr/0gnzw8ittO
kCfUpHDbLeahrdbi9olxBP3ifmltkHFvmoegXxSwHHEPcaDhwDd7nRoXwhE3
TrStaVX6STniwH2ePeKYN8+e3KOVYb5wwDO6boPnOgW9HphdbU44iecsR7++
z9p/XqLzfOzK4YRbsuVsLJMb7VU2ivBQ1k86z/4LysmzJ99l3srUW63XJzpj
X887uV1rRGeqP/a/XLXTk7Zn0PeF/aDGj63HH42jHHmOyYl9Fef/a5zCuG/+
9LZlv73/FX/YfExWdUznCSsDyLjMP38Ozj9XD87/nxQ4//9f4Pz/tYFjfYPP
8b482X0EcKyrC4/PjRs/gHL++XZw/rl9cP7/EcD5/88C5//vDJz/fzrwj2zc
XjZxua7WYMoRh6f5vU7Q+EvzT+zTLVtULxPwjHLEyTtVlw/HFlOO+KYxJnHQ
mlzKMS9O3Nqx5MkZypFP5pXMPfjzBuVYN95a1Otu97eUY73UoP+yRv2OtPxY
J1y2c1avJGPKsS73vYt4fx8c81CljUfLwoMpRzsPYNeNwbG+tIL3XLT/bHYd
HhzrTl945cd+3DV2/wIc61HfeTog793C7u+AY3zZx9MT+wUF7P4mONYNNvPe
F1nnZ/eFyXlIdt1Am/feSZxn99PBsZ7Qg9d+EOfHsecNwLHOMJjXDhF/nrDr
0uDZ7DphBe/9Yv0q5lZAfNwx+lysOwVOTrl3Ppvyu2z+M5X33vn/VwXn/98E
fHpaWVbEyWIJ/uPnsrbdUyokuGvxuilNHd5I8P1O53ukH5Xs18fvTOhUv16y
X6f5edscb7gt4Sf8WPG1iOGS8dB2tVOe7WLJeBi24PXh68Mk42HLwJt17TtI
6jDrw+cNI1ZI2vdYOVx+3QvJePVs+PWfB0e/kOBfLob8/rtXsr6Ww86mrfaR
rG/8z2OLFTIky1/RvYt/Snq5hP+KSUMqAkfel+D/a72k6SPtvfyv5Zf2XqS1
B2m6SWtX/+t7kdZ+pLXn/1V/ae2W349w7xzmI+T/j+y9vuDf93YWBXeh30Em
56x6f8hlguh3kME39s4pGTqOfgcZ3HjrEMvec+h3kMEbU4+XL6mh35sGj/dz
r69PpN9BBk8OWHw4wIx+Bxn88z2fkkWK9DvI4KXz/RLk6+j3psG/lZ18NeI2
/a50Z97/AaED+Ev3z2sFu+l3t8FnZkZ6zXtHv28OPquvrdysQvp9c/BOv7Sn
Cj7S75uDh8ifzTH2ozqA53l+3fL8Gf2+OXiPAvvRP2zciA7gMlEVs0uf0++b
g8cu2nmtLZ1+3xw8YUjQpcylrqS+89n8pJtL+LhtRrS+4FXjW/yiZtD6gmtH
l9t5jqT1BffR8Ltwz5vWF3z4+ktlMdFupL7gL7T/uO1c5UrqC17j+S509jsX
Ul/wkNSaF8/muJD6gjs9OxxQ0t+F1Bd8W7qoNOihM7nPE1z+8fBrq5Ocyb1b
kbzvJOJ+wkje/ZnQDdzfPH5M17v0vmvwD6Xv7XY20nuGwS2Hlntm7nUnuoFb
ycbmGrq7Ed3A9Y4aXX36yoXoBq41oF/Gl0fORDdwhaw3K2+oOBPdwJOffJ2m
sMuJ6AaunLnNepinE9ENPHvjx19X9JyIbuBvva89sJdxIvdCB7L5Vb+d+70C
Xej378Ctdp4+9U1I9QQP9a3e896D6gneTe/Xzt6xVE/wvwMfvdu7hOoJfmLs
tLp8RaoneIRctt6jTy5ET3AVxdSEC6OdiZ7gLiuPPE6rdiR6gl91mdi+XbUD
0RN8qd/yyw4jHYie4AbyFqpm7+yJnuDaKWaTe8o4ED3Be/rE6BTucKD3b7Pr
D//0eqb8fBzVE/z00sF2L1WonuCL0mvGnu1P9QTvpOqrOG4I1RN8ZR+9A9e0
qJ7gy75oFDaOpPdUg6t0332jfRG9Rxp8+LmSH2FnHYme4HM8Ot6I/WVP9ATP
WCp7ZctqO6IneN+Axapngm2JnuDqZo+DF261IXqC10a26se62tDvdLC8lMns
aXHHhuiJPHaJa6ziGEOqJ7jKBDP1d22BRE/wHaWdXCf89iF6gp8afnbSjzZP
oie4/9ZXv3XeuRM9wb2HjB41boMr0RNcM3yqv+cbJ6InuMXye+tmraX3ZoM/
LRxlYhxpR/Qk5f+Slvcg1IboCf42qHGza6QV0RNcQT9zY+FsS6IneNniGJOH
deZET3Bf76MR9bVjiZ7Y785ZW2+43JB+P4Lsg7PjKfTEPmzY0EE7A9Ro+wSP
681tn+AvVbntE/zVJ277BB+vyG2f4Bpnue0T3MCN2z7Jd/0SuO0TXNWP2z7B
Dcdy2yd432nc9gmuWyRun9AN83R+HgK+eBA3HoKP4MVDYj+GGw/BVdpx4yH4
wy7ceAg+6x9uPASvduDGQ/BvXtx4CD5RlhsPwfVWc+Mh+CUPcTyEDlhHzRnP
HWfBX9/jjrPgdwdzx1lwFdFszjgL3ukwd5wFH6vKHWfBW/dxx1nwM4+44yy4
fgZ3nAWfkcodZ8EV3cXjLOIV1gG+GkwPNLpK4z947sa9beMaaf8CH+zMzevA
15lx8zrwxEhuXkf8qHHzOvAVa7h5HXieOjevA1/iws3rwL+t4uZ14NYV3LwO
3HkLN68Dj7rPzeuwz2trVGrxQYV+nwL8wEW1J4qu9Psm4K1u3PwfvN1ebv4P
vlyVm/+Dn/jJzf/BD8ty839wXxdu/g9ec5ab/4Pvm8LN/8HvzOXm/+ApOuL8
H7qBl948tapnoSuJ81jfO1zaa9W1J3TcBG//saOi9XyqJ/jpwg1dfc5SPcH3
8uaV4EdUuPNKcL1e3Hklee5m7rwSfOYa7rwS3NCbO68E/+rLnVeCe5Vw55Xg
02O580rwgjvieSX0BO8UkvRszQU3ZkT0z2MC4TAyDz3dpG83IWwSs/DSKBuB
hjHhE1Q6RG/R92eeXJ85SqAxnvDIYzeT5/v4MP2nPeouUKLz8V31MY8NNnsx
zh9jOgk22hD+KjgwQjvYk0mI6SojUKLz8SFTlt3RXevBfC7UahF1oPPusS+f
jGq/zp2R/9vYLLpJ593WdV3XdbB2Z9SERV9Eq+m8e8myzxuLlN0Z4+XrPors
6LxbYKlXsfmzG+N6beIHUQc677Yce9whtdyN3P8PfrAhKsG92I18twXz0xUz
ZAf1HulD7uEHL2t5sWKshxf5rgr4H9dZD97KepLvnoDH1NRaOA3wIN/pAPdZ
K2NbHOlGvqMB3qH4Rb3MN1fynQtwNRnG+v5hV/IdCvBlR08tj09yZTTZ+6jB
f4+7Oq1XlitTtGKvqSBkHJlvpuqv2/NH1YdRtG1QFoywJPx1lCDIuYcXI7yT
3EWQa03nxZsfdOx30IOJcdWRFYywp/PrQrn+Lw+4M+knSxpFvem8+F3HvrIV
u1yY3KYdDaJKb8LHK57+csfEhbk1MrJWtN2XcEXBty+7nzsz1fOMa0R+dF7c
re2P8qI5zswa9rsJmPc9yY++Oa7Sk3zvALxLXmpLtYUHU3/JsL2AsSO8V9bR
0Gd93ZmZ+hqfRHu9Cd8arSMb848Ts3L651pRsC/hWVU5y/sGOZHviIEPeNgi
ELk4MaOy93UTlFmReZPMs+1d9ze4M1MNzOUE7naE+z7cuKJojBsz4UBcnWiQ
L+FDl+9VyvlmzwS8m/BO9IHOyyZcrR4wYroDuVcf8wgtP9Xw8BRXcu86+CbX
oK0dflgzRmy/Rt5b5T7gkke3IGYR26/B32SGDwte4Uv6Nfi2gtV3x3t5kX4N
3vHC06fFAz1IvwYfOfCVwaOvrqRfgzf2XeLkaeJM+jW4tmj+75ZTdqRfg5d1
aps18bgN6dfg80bUy97MtyL9Gvz0vG3jFO9Ykn4NrtMt5djXixakX4NrbPyw
58mnceQeb+S9X9a32cgM8aP9neXP721sbH5Iv9MEnnTP7fzKHR60v7N88/x8
zy//xmHS31m+NetQ/42RLrS/szx/8EXnX+3saX9Hnp+4+erYclva31k+z+6H
3WFZW9rfWS402uYeeNaG3D8PHl01PvuIli3DsP2d5OdNChc+hnszSmx/J3lv
UURXZQtP0t/BU5fvv5KX6c7MZvs7+LhD7xeseORK+jvJtx8UjP+R6kD6O/jQ
tf8kTlB2IP0dXKPL8/ADTfbMS7a/g29VvRe+d7gD+U4K8s8U7x8Xot/R/g5e
Zz1s/0R32t9J/iwXdvvFUNrfwbd1mpp9bzrt7+DtvMovVqjR/g7+USG/pOtz
R9LfkdedU/69LfO3B+nv4MH3dN4J/x330d/BL846bZrSw4X0d3CnGYbLptc4
k/6O/KfJYLn+wDUeTNLIop2ygg4S89mP+P4vb934Ar7zK+V73J15393uzcYT
8PazhzyU2eDK6O9PvyiT2IPEYfh/FHr5okA4iPBjlsr2EwpCGIcx6S6CTCPC
s94fTQnZEcC4sd+Vi+TdH+gnhb9nv0sI/jHlYJZSbjBTz+O1LMe8le/Hi/2+
A7hjsXBoeZY/48Pj9ixXY+uLOAw/yUcfHJNJ7CPB77E6kHh+Qna5xbIQRvZ9
4FkBM5jG/3fVPQpdJ5Ny8v3YsbqB745SX9e/WwAz4udtD8Erui609nqSmqJ1
IIlXiP/hpeJ4tVHUzlLwiq4XPY1d5ay3yYfEefBmNs6jPOAoD/ygve1j/SD+
w76jNjf+g5/sJ47/yRub/4q+UD5Od/bNX5ucCIf/xTpifv4/31uJcSH2hZpL
12wUOhAO+9saYh7nrPJTtICuRzX00lXcoGZHOOy/9RTz1PU1X0UmnsReLWe4
3ORedNwBtzIUjzuwh58Rx8X2GI9gf3w+dzwCL1fgjkfgJpvE4xHpj2zcbt/9
WIerh+l3f8C1zxwdUe7oQ/J5lMfMS7wOhnkQ7CPZ9Vh7tl0hrtqz7eqI5QMz
QeYYwv3+Doyv7u/DDGTbP3/9p4xt5+CfcsTtHM8Ff79DvK4OP4hv8LOc7Ud8
Dv/gvmw8EbD9CFw3TGnU7Vu0H/H9oL7g+mz8gb3EPd5s3APvEC2OexhPweWN
xfkzxgUyvyt0FN0qpvt34CT+sPGNv78J3cC12Hkr5rmded9rJu+X5TnsugFZ
x2P5xXvc+TLi8CK5+3f7r6R+wGcME6/b4Ds4aJ+/Nx0/tqIv/U4W+LeHtbLu
3t6kXvzxCH7AT/D8gOexfjC+kzxtWvI4+Rf0u2bg8fN/B3Xv4k71Ydt5CLsf
geeS/9eYzDKoMqHPBb+dbJiZG+9N/KDdvtwh3ifC93DxXvRfZF+46xZC/IOH
/LxX8jc3gOjAH3/hB/zgczNmoSb1Ax5kOuFphCv1wx9nvaSMj/BP5k3tt5v1
aabffYZ9HTs+4rmwtz931U32B/3+Eewd2HEQz+WPU/AP3mTS/eTYxdQ/+Kum
b+2+RVA/GKf4fsDll+kYDvKhfsBns+8RfvjjFNGf991qoj/Lby0V+4c9P77B
HjyRVy/wjbx68eMP/IBHy4rfC/yA388T6w8//LgEP+CzeO0H/IoJt/3w4w/8
gKvz2jP43x/i9ox4S9Z5ho0IVVoQzOSy3x3mt/OzUnhv9lwueGvq8ddxjZOY
PjzewvIl7LjAb/9/3onLA86w8X8kO88Fb90YMn/wqSAyvvDfL+oF3lgjzsew
DgZ+Ri4s1NwwiElm821+3Ma4xueJrD2/fQ5i7fl8IWvPf19DWHs+X8zWi8/D
2bwCvPWdeP0K8ynwa+28p6sUuTGZLzSvC5iBpPzZ+jovvcvDyPgLHmA2Oe68
YijzVsr8Ankp7IPWXr547yzNN8Ddljrky3gGMvm8+cjT/898JIHVh98e9rDl
B5850yDm97IwZjhbHvD2HnLFG0WBzAgp84K1bPwn+f/zm6VnwqcwA3nnLm6z
5y7wvWy+Hx2e/U3Wfgtbfn78PMCWH3z82b37hHZhjAHbDsF7y4vboSFbL3Dd
QeNFqfGBRH+02we6Yo52y2//eO/gAva5sOfHMdiDK7M6o7+Az2P7HcoDvsZd
rP9u1g/a4Ty2vZWz7Q18PNveRrH+wbew69JtbBwg6+FsXBrGPhfcmG2Hjmw7
JOvzbDtEnsZvV2t47cGBbQ/QAf3XTGOh+hbnMMKRnwxnOeItuELIa4OK8cHE
P8lj2XwM+ST6y8Ar4nwSfvBcPdYP9jXIe/cRn1fBuj34m7Z+Ub3u+TLL2LjB
jz+ID+ScWydxfMD+CMrvwjtXAN6aJj5XgHjLj4eoL/gndr8G5YefEPY8A/ZZ
wBMHc88ngEdM5Z5PAHf9h3s+AfxtAfd8Anj/z9zzCeBKvPMJ5D3qcc8ngBvG
i88nYL6M+ooOry+s9vYj9QVPvyjeh0LeDn44QrwvQ+Z9bDys3XYy1GEd/S4t
ePgl8f4gWc/kfcdZGs9m531o//nLVVYa36HfzyXn2TaJ922xbkzWeZRPRelH
+jFn2LyanO9iv++cJ4Vnsc9FHIvMezz2i4oPU8yuT4KXs+uTC9jnknNZf8Tt
Gfk88kOHNeJ8Huu04KNLxeu0mF+g/aez84svHcxGCF7R8zOKiWa1E095knVv
8I85ddN3aHiQ9VKy7qHV0a9/Bl0HxnN1ForXgTF/gf0bdv6il1ygKGik/rt9
mn+n73F3sq4I3iXCTC/Nwp3M0xE3spxaM62v+pB1XfCTeuJ9HMQB8J7s+8J6
EfLG7Oni/awqdl0IcfLPUfG+XjzrBzy5l3gfEPNHtP+PluJzSth3QPnPB+oc
G/VlIvOXjdskjhV4/khVnMys4J1j9GTPMWLejX4x2DLI8lUR/Y4quNlKzc4T
R9P2gHZ+c9zYIqUS+r1RtNvldXI3tKZRzm+fK6Wcq4Q92mFWXLvsfvnezCa2
v4O3WWcd+VZD/SMON88V24PjvWTWisuDuAG+ykdkY7+aPhfvqyOvXngvT5LE
Oqxn/YB3XRs8YfS/8eEo237AI9VnaCav9yX5Et6jzZkLP0xHBZL1W/CEceXe
hlf9mZns+W3Ut4X938q10z9mTLqkLjGe3lL1P1Xsry6Rh6w03rXx8WANifHi
5+LdwSZVahLzxOGq95Pkm9Ul1hl2sfb8eR++U8PP08b3EZeHn4/psOXn5z/4
Pgs/7/Xso952XlddYjwdzdaLn59L00Fa+aXVV9pzpekmtb5S9JFWX3J/Au/e
VN0pea0idXpuXLHJxXd/PL3fCRz3f+59WPxLdNKJtBP97WnV9566ib+LPdyN
cGFZt1U1FfT+THDcn9lnQulvkYUTLf/UeHlnnOcpciW8Z17WwRYHF2b8f74D
rk7PIfe6+7spO4reSwaO+yfxP1zohvsh0049bRPddyT8p7dgk6qRC3PtP/t6
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
Pvn/ALrjKA4=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHf8l9P7x+/3/b6XkZCMMiIjIbuMkN0wM0siUVIqKkU0RNbXzgjJFg0q
laRh773HF1lZ2eJr/l7PXpfH74/TeX3O+9znvu9zn3ON13WdNjxhQOf+aZIk
N+VJUlfdWv/sVUuSSvV7qk9U2URliTp9rjJZJS2T5BL13bVIkrWrJPmPcFvh
RGNcqmo34Zr6XCycqT5a7etpjD+yJLlR5Qq1r6x6In003jzVt6pcKjxf9Wv6
7VnGUT1dfz8tPFxjnqFx9tA4K6pO1Heg8AbCR6o0Ff6f+t+veh+Vb7i3+kwR
bqcyTuM0Uts1qqfW/I5f6u/Ddc3aqqfpfe/Xb3OFT9W9DteY66jPr/p9J+GV
GFN4hPqcpT47q89LajtA5U/9fa76nKX7HaW6teqD1J6ovCR8sOpU5Uddc7aa
L9EYzYQPEW6i+WujPpl+766/C/12g+oxqu/W/W6hj+ov9fvJKlur/KVrx6j9
CvVZJjxK+FLhnXXvBvp9qfrvK9xQ+Dvh39RntPpcpj436e8rhRuo/l3t5wpf
rva7+B7C66iepHKrcFPVG6rPocyJxhussrPGLFQ/rt9mqn1L1T30Dg+qflV9
jxOeLfyycHfh6cIvCR8vPEf4FeGTKl//pvCJwo8JvyHcW7i78Ad6nl7Czwi/
pfYThB8Wfk24p/B84deFBwifIfy5+t+osi3rWPVota/JeuP9hH9Wn9VV91cZ
IvyZ+tym+nr1b6T6HNaw6h/UfrrwCOEvhE8THi68RHhH4d7CN2vMPzT2qSrr
ax5OVftgtX+qPn2FTxH+WPhk1a01/vNaV32E2wi/IPyS8CPCbXgm9XtMeGjh
d50nvG3mMXYSfrHuuZkhvIXqp1UeEt5G9RO6f0eV3/T3M6o7qfzO2kq9p9oJ
96n8HB/xPMLHCX8ofErlZ1os3E94kPAnwhfquhdUNkr8Tvupfrfu3/cVfqfu
+W4v/H7dc7m/8HvCZ2ucS/T39xrnXNVHq/0rtY8SPlL4C+GjhVcWniXcV3hz
4UeFd9Q979Tzf6u/Z6reT6WB5rabyg9q+0h9u6g0EJ6j/kcJr0Rf4aXq01z4
qsKy4i6N9RjvpT4t1f6Y+vQX3lL4CeE3a96Pa+i6C9TeWe2fqf2O0uuc9X6k
2lcUnq721rn37uesE5W91f622qfm3uONVI9Rewe1f6D284Q7Cn8o/G3scfZ6
I42/q/p3Vf2xrllD7ReyFzI//8Pq30t4Y+H5wsepzzLhT9TWt/B6Y911F+6r
epDG2VSlt/BA1auq/UDhfsLrF35H3pU1u4nGWaAxjxVeU3iKcDfhxsL3Ch+a
LRfdyd3CXXLLzg/Vtn1qWbqy2o7Q3yuo/b66ZaY+dzJVuLMwov8e4eal9QV6
45jM7zhJ7YcJ66dksvBo4aOEvxS+p/T8b1RY/u8pvLrwg7pvD5XVNc4C1X1T
72dk4+aqF6ruqLbNVbbRsx2msrbaf9HYs9TWTWVV/T1c7UfxDsgr1UNUjhCe
p7qXyhrqc5GuOVH3/VHPc6FwT+EfhC9LrY8O1t+v1Dy3fyeWB6yTT9Rna421
otq/UttIlSPUvqRuHbGOrh1ZWpYcrvbP65b/K6h/M7VvoHK88FOqz1afvdTn
LfW5WPgk4Z/q3k+9hH8W/lzXfqq/Z1fWrc107caldfGG6OjS+nQ79J76nq6+
Owg/p2tPyv3sn6ntNL6r8LNqH5i5/zPCuyA349tNzq3XVlN9pvrsqj6vqk8r
vVNjvgffXvUhKnnNsrO32n5Rn0uFTxZeJnyvfr9Hpa4+Q9W+s9pfVvuj6HXh
lqqHqezCHKv9VOEthB8XHl55Lr5D31b+Tt8KD6m8hr4uLTd2UPlE14wtjeeU
liU7RvucaL9Sc3JsyBPkCuua9Y3N87bqt1QuUNmgsD7eSWXb1H2wE7AXtgv8
murR6GzhTVPre3R919g77CGupT8/zQ/b5hbV21fe8zfpPn/VbQ/8qb/Hpb4v
90euMGa3xM/BGqR9+3imHbF5VLdUGYD8DZnP/umZWw+coPo23et47Bj0W2rd
gF54uDSua8zXVT+nsonKD+g01Xerzw265k32duVn2TSe51b9fRX7AZ0r/BZ7
W/VNKm8jF1TvUFmWTdD4t7FOebaabbHmqe2xYfrtCY03ROO0rqwPJqrtZuEr
0G1qX1H4PdaE6gkq7yCDVP/OHtI4s3X9eP39BvJL9XZ61xb6bdvccmKL1HYq
8nOO6r/UtndpGwbMOlk5td75MvNeZk/vpT5tar7PWsL7qj6+9B7BFh6vcjf7
V9dtXdg2QiZ8qu9ZId9DJg9Q/Y9KW5U2pfXI2zXL54MSY+T63ypPsg5Ur6Dn
6ac6V//3VfdX/bDaTlYZpD7rIedVv8EaKb3uwENLj3Gmfr9B+Hz1v760/Y0d
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
450P0PyspXKs/m6W2XefkdvX4178fV9qvgYZ3ja3nG6c28Z8Wb/vlTmewTui
58/MzV+1VN0pNw/3A2siN6/2PXYkvDwyGPJP79+HNVnYvu6CLK3bPoL/Gabr
/inMC7VR/Xdhvqh1YV/nXNRIZr/kfOEscwzhNuH1MssU9j5yZW5uHmqH3L4O
cZAUm7UwV7ZjYQ4K/vlr9Hxunu/HzPGd23Xto6V13K3qsy77IzdHhdz8PmxF
bEbk38Y1x65Yt9gGcNHo4S6pYy2bBH+Cbrgmc5zln7pjY+wdbN0+4b8foDFm
qz5K161WcyyG/hBJu2N/xlrF58NO/Ltu3btzat5wT/1Wqf6CfRY2Obb3T7pH
D/RJYT28a+p4FTE5ZO3D+Ep8G+EFheNzxOnmq55W2jZYpPqEeDa+MbGa29Vn
/cz+303Ca2WODRE/WiWz/3oecjSzf3k1MiGzXzVOeLXMvt01rO3MPu5V6J/M
ewQ7bV290/Tce7lpbrnJPsLOZ173r3lue+qadbG7sHUry8HV4GDUvg5rXu09
hJsIP1C3n837rqT6BJWmwrPr1jHoGvyOuypznU+X1h/IZHiJpqHv4BOIX03Q
tWtnlrH4HXVdc1/oiCa5eRjsE2zM03PbVnnuub1X1x5fOH41WXhj1ntp2wnf
ATuNPs0zx9DuEN4gc4xrivAmmX3oG4XX5FlS48M05kB4RnSa6vaF258ozFvw
fVfMzIXBiSHD4TbGqj3PvGZWVvu9pdc8vs56wndib+kek0rHL9CXt5fmNlhL
K2SOKRJbfEC/zww7rmHIBdbOL2o/VPfrItw5t3xCh6+r8nRg9tSi1Px+V+F/
Msv7tdV/fmqOnuv/yqwz1yL+qLZB0R9uubPqfvpteNhZTVQeSh0/OLpmXwDZ
yxwtCZlM/HRCyEYwvDm6mT2Cbdkktc4gIILPxn6p40ejH+Es417Em09Jvbe5
1zTWd2LdgZ5nTLhdOH64+uGJ+YAXVO+RmQN4SXhPZHbquBX2BLpuj9B3cAwv
qm6n+nj9flzMNTFE7Iq9M/Ny2IPYBneklm/YDegjfCl8SfQFNiT+KTYe/gh8
ZLvSa7Wh6pOwq2P/j8ztW6yZ2z5kbbPGiT8Sl2+rek7qWAv94QyewZbJzH88
L7y76kPDT8df36O0n7FyaT8Oec7fncLnQJa2CB3171qk/q6wn4m/eVVu2401
iYzeqPR1M9Vn3dIyfGlh32ho6vj9t5ll4/d186isqcY1r6PTU3NkzGv31Gu4
d3xPdN6xMd+r1MzPX516L5wWa5CY1Nzo30ilo56vp/5un9uHODv1Ojkk9z1/
Qt+qbUqs3aUhA1mf0+LdV4j1slmsmd1K71+4bextbKotarajsacvCTuH/nC9
46MPXPVJNV+LXdUiZBe4bekx4GTwo5F1q+SOqzEmMmRsZhv5O83bhqX1yQy1
TxG+IbXcODq+HXLkjPBHicPdnFpOsR8Wxlwxzy3DR0RnNa0sZ5A3xMN47+nY
caXzTIiL4aMRx4Gfx8ZOU9t4+D342NijvXLzvL1zxz6Ic5yYO+5xkXCPsIWx
rbEJif8hJ/DNxuSWR+flXuOMiR22TO/+qNpHqf2rwm34l3yj++I7fa0+HYR3
y21LI7suLG2fYactj51mttuxYdHryBX0/J91f1swuggeATuPWCZziR+OH8f8
bwXnybpXW7vcft8LNfu5y7mfmu3vLQv7eaz/B8rgpirHQtmnpyWe834aY0bl
7wiPB59H7OO61L+tTHwHv6j03uZaZDq87zXCp+TWbbcxF6Xl/wOxT4iDjBfu
n9vex+7Hpz07d79zcq99coiQ2zNLzwNc3/CYB/x59gbynf2M/8374sNgS94b
1/YozG+gP9ur7f7UvNzU+EanJrY7iVcyF8TM6vFd8HHQKReU9jcfq5kf+C98
tjrNyb0+8OHPSCzz2cfkGU2MdYRvCzeFDb5zZs4Lv4ZYBrlGo9BDpfsgg8kV
2Sy4OGIcjP1EjE98DD90sfBr6re1nmFW7nWIDDs87ou8XC/39z02vjkx7cdj
nG6xrpuE7GY/soab6X23qjv+8oh+f0xlSOL8KO4LD4lPOyO+F998TqwZeK52
uvbtsI/4pvitjSrbfleW9t9Zh/AwB6l/P117cO7vMC2+RePKtv1Vpe0H7Nv/
lN5LfDNkPbwg3wIftXNci1xYq7LdcnXp+BHcyRal463Ep+AdsT2I3W+n31et
HNPfvnCMemo8A2sJ/hTfdUnIYexp7HLkN7r8k8K/bx08xBOx9q7MbB/vn3t9
Tol1uFrleP0OhWUJnAX2zQj1G8g9c69/MG1rFs6lIQ4CL8J3/Fbz21jt+yTO
O9qkcC7Bd9EHjo18FTgMuAyakAeHxHutVThXh3gK+RN7Js5Z2rRw7g05OZsV
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
ODKOfMHNK591x/75P2XOWzg=
           "]], Polygon3DBox[CompressedData["
1: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
y0XVw38ZXkW8/UAKPlh+bk1j/Xr4ax24PrcWa+BayG/VnXs9/EdzPi1yM/Xw
N52Dc3FPXZz9pW7IX6o/so/g+52HvoN8WE3uqB7+aRfwD7V4ps+eUwaX9pgx
HvJ/aV/UwmfUd5Tv7yr3Uw//8fH8Lr+J32ZEFfzBgyn49L2r4Admp+CDjauN
r2stkQ/ZsIy9PZDWH3m9Ms7STH0C9XUZe2U0bXvkZ/g9y/KMGdm/dA1ci8Xq
4Yv7m/xti9fDF3ePuFcWpk0tYw1dyyXq4ZvL4anP32Iu12gfG6G/1eNXGx+U
wfXr0/s897B7uVEPX9V8mvHkRX7rZvi0veQK6+Hr6tP2dK3q4evqt+q/dtd/
SRHnGO900x8Czy6D+zJmcH7HlXE2HvEblxETGBucy9hpvO9F8EKMn5L9d/eQ
e2mNesQC7jn3nnvCvWE+aH3kJevxfcfzfd7l97+egt89Cvy69iwFn3Y0+A3w
iyn4r/u1cfXgv+9Bvtv9r++jDdCmluFL6lPuijy2Cr7uuRT80ANlcNFyps75
RPrf0x9NwecdC35TfyEFf7dXFfzZQyn4/BPA72gPU+RXjge/DX41RT7FM+xZ
7l2PWNY96l7tUo/965n2bPepRyxsvtJ82jkp8mt9Uui71Vsin6htnoS8Vkvw
s+4x99qC7rkybKux0twiONRuKWIBOSfzsccxv7e0zyn4cvnBperxDfwW7qFG
9tf126e7p7KOUde0KsNX0mcy16qPID6sDN/BfKDcsD7DEWWcGc/OgFrEx/4e
c6PX1EKHOz/tuTnMg9WvPlNfhHYM8m9l8PN7p+BvqzLulaOWqzYna2x8WS34
NPk1ZXPQ5qLNYepfmkOVM9OH0/5oh/Tt5LS15/p3p3DtsxT72Zja2Nocsfb5
2Vr4X/pjytp4OVbn6FzNiZlf3biMWMHfcCTytfWIVZ+phb+n/6eszzRY+1BG
PmKvFPy+MbN86bAUsbQ+gr7CiBT8+o9l8KdDU/Drn7h/wTum4E9Xr89Ll8/L
CZkb8kx4NjYGr4P8Ka0V/f9OwZ9+Bp4fvFMKPvbbMvjx3VLw9cc3Yj+5r/Td
jMH07walyJ98UwZfPjhF/qRfPfhmc0Tmik6i/6la5GDMhxoz8a/YLgW//lE5
jxIsdkjBv8u3mp8YlYJPrqrIf4xJwTf/XUY+Y78UfHVZRf7hoBT5laKKfMEB
Kfjqf8rgIvZPwWfrX8s375Ei//FDGXzyninyIynHowemyCd8WM57ZLF9inyB
Ok/dN7sW/JB8kbIx3Q7gncrgN59Q5yAPTJEbNsfwcRlrai7EPe1aOwdzMfr8
zs01MBfhN3BtfKe5CtfYuahD1CXaSG2lPLZ8tjpd3a5OV7frI+grqPPV/drw
DvmbmfvqnuNpdYa6QxuhrXANzBX5DVwbv6m5MffoN3kPvJlCv7o3jKGNpW9v
iXyTdnDZ7IPoi/RqROxizsN8mT6ruSv3uL6se85cgN/AvegeNhdgTty9rU9r
7sA9r6/rnpX79xu6lz0D5prcE54Ndaa1CdZ8qEtfLiPXJseofnXPmdtZKMfv
n7gvalETYW2ENQ7WOsy7VoYPoC+wQy34tbtpG6lTcryivrBve9pG4Isa4ctb
Z3KL56eMveAZ8CzIFw7I/r2+tmdyY57VP59V9Z+1Gjtl/fFOGbkfOTTtpz6H
vodFOPLD8sXKchjbluFDltnn/DX7mPqaztm5GwMYC/SoByd2Whl1PJ/VIl40
flTWZmo7f2fciFrkJM2nDSgjlh8O3gJ58zJybcP+H7bPe7zX328txLh8Hk4y
fqxFznIXdXEj1m6+luA/jmoEtyYnsVcjbLy5rqeLsP3aWGsZjAm0vfoI5oK1
6foO2mxzcS8UYcuvAC9QRs5R/kcfwtycMYG+xZQqbOVm8nuNyDlqN732Fn0v
GXelyOEdU4VNt1bCGEVbr09gbs+YQ1/hN+Nf585vWBX5jyq4HmOM1ZBn0TrJ
t4DP5n33gbuCj+b+dZHvqoKLMgY5K/Mzcjlb5PWQz/m9iBoE+TxtuLlvYyBt
uzGWdkn7NC8+BbcpI2e9JXidKrgm32k91gNV+H5ywHLB5oDNBa+Q+TR9WveJ
+0Vf9zDGHNASPmn7RnA+cj8aHfkh+U25y30z35VoPVrCJ7W+a5Uy4kjjyRMb
wVfq24zKfKbxf8+WyPGY6/mpily4HJxcnOtlnzVly2S+6jHwxMyf3lLFWsqp
ya3dCj6mCJ9WLv+2zHfr88rdTtcH4rcdBN4MvCb9u7WEDtcw6dOalzE/o6/7
bRW1U+YMzR3qY5vXMr+l7/11FdyKMYW5u7vBi7VETdA54HuqqEVYmlYH/wJu
3xIcnlzeWlXkI/QBrVeTE7JW6coiuCJzWta+yDGb65Jjtjbp6iK4Z3N65jo3
LSLXZ47L2iE5aHNf5rCsrZGDM7dljqIlBYcv37kFuJYiRyYfuqX7IUUOrUMz
ckLWKpifMFdkjmyZFDkoc2fm4KzFMadmbs6cnbVS5tTM5WmjrYXoV4TtNue2
dIqclLk4c3rWnkzN318OVy7XGj/rp9ZrRO7UmjXrQeTUre26ogiufVqK3Pnl
ReRyjaHkveS/jK3Msajwji+CvzSn8xV4/rw//L5lS3AcK1SxX9q0BOc6Me8v
dZUcy8l5f3nvOvqE+fvXW4JTk1vrUkVuObVEfaB8+99F1LTJr99eRS2VHKlc
qfy8XL85Cvl8cwpfp5iD+9Uco7U15tjMtU2gTda/oy1C/9b6RClyoB2Rt9Kn
SZHDXBj5vBS58uOK4GPN6VnbtFkRuT5zONaWnVVEbseckLVZk7N+uDhFrZc5
THOZ5lStZZPDNNe6jeud4owu2oz6DrlQawA7I99fRWzpmVyvijk7d2tuhuR+
87k+w2d5Xk4u4jf52xZqRn7753rki41HzdWpU+Vr2jcjX/1TPfLHr1Whu9Xh
5jfvrYLPaub4+FDwwx71MuLrV8GPaP9T5Hdfyf1rpMjnqr9dS8+EZ8Pz7Vq7
xq61/IC5W22AfNKdVZwlz5hnTXswQl9F2+hep40soh7NfLj2Y7i+l99IXyjr
a3WQukh+wlyfe0z+TXvh2fTMenblK8xFuifl/+6o4my75937c6rITy+fIj/8
fBX1gJ5hz/LizYgvjTON59xf7YvQkepK+a0uRXAwb5aRT7HWSBujrbFeV11s
zsDcgRyQtsscldyQnJl7e+si+CnrlzybLxbhD8ghmq8bXARf9UIV+fZeKfLX
5i+sFdKma9ut15JLd47un5eqyGevlCK//XIV9TErp8iPvwi+Hdw7RT7e+i51
v/7VoEb4q/Lzu2X/zXpYc2PaXPlK62HNf3qG5U+fq0L3qcPUZfM3w/dQ56h7
jCGsTZJjNrZQ3w/T1+fasfTdkUJ/qd/N3VujYe2hNRTWbphj1UeVnzL3un8Z
tXbmuOWnzcFbO2sNiPy3NRvWMlrjYS3HpBS1e+aszV1bQ/Jpiv2jfbLmw9pX
c/zWglgzYu2rNQ3WkljzYe2eOdse+fwX2V6oH75JUbs3tIj8mHvYvWyNpfbz
+RRnxzPkWbM+zVjBHK+5Xmsg1EfHZ33imfZseybMp3kGPAuemXbNONOebXWA
+TXPkGfJM28+zTV1bT1DCzaj5nSej12LWlRrclpn/bVVthcLZPuo/bg3hX3T
HlkrYY7aWssBReSun0yxt9xj1k7ImVpLa82OXKo1O9ZyWQNkLY81P4tl+2Qt
kDU+nbN9svbHHLC54Lktke81ZytfIxdifskapDZZH2vP5LSt9ZKzleuWI7c2
Sk5K7lyO09pha4rkPuWorD21Bknu6uEUZ18dYK2KnLm1VnKkculyotbK3lIE
Vypnbq3bPUVw6XLucjDyT3LxcvLWkj1UBFcvp2bt1ewiuLZN8n4YmfefOT9r
ta8qIhdofa+/fVoRuW1rqKydtebK2qpeVdSTG7sYb8mPy6mZUzW3ag2WtWfm
SMyVWJNkba01M9Yq6W9aw6/PoO+gTl8z70drebQJ6+X4YnT+vuvm+MDfq85f
I/8e10uduXxeH8+rOVJzpXJn8pfy+cZg+nD6cv6fBOsL5M7NHxyU9YH+j7Uh
5qf2KyPfYu7HHKz5Q2sczd9a4/VxCn1jft6cijkM6xH8vwjqKGNNY2x1lzl9
c/vW4FkvYE2WtcTWDFmrZb728SJ0vPlZa1zNF8qNDiqjZsta402KqOVyv/TN
39f9YDxgjK/+trbCGgo5QvW7tQj6M/oWf9cjP63N/iOFz6stN57aPAWHazyn
fyMHrT/Qthk29ZcU9nxW9s/kpPXpF2jG+f4+hc/8S14feT35vdbN0G9y+vro
bZoRP6ibvq9Hflx9MjeFfdbWarN/S+Gj3539l79T+Cj6Iuqv/jm+dD9rM7Qd
2iRru7RJvfJ5GpT1h+fFnLW5a30KufsXsv7TJq2Uz5P6xXoH+UF5QtdfG7Vy
1i/Wdhmf6Xu1Uu+Wof+todqjiNynnJi1mP2L4Mrkm26sBycofyIHL68tv62+
1edyrf/Jz5MDlQvVvn1SRY76psy/mLse3wh+tXeO16zx+irbE2u/5IDkglar
RX2O9ubnrJ+1H9ZgaR/2LCK3ak3Yl9m+6L9aE/VRtl+eB3P65vb9PzD+fxl1
trrbGmztszVb/l8Ea86s5bKm653sD1vrZY707ayv1Qd9s35Qn8yr5WxGbas1
YXKDcoTWtloTJtHnepm3M39nLkOOcU7WL3KP1mx9nO2vtVxy0tYWy1HKVcvR
Wgsthyh3aw5XrseYwvrSoxvh2/h/WKwXl/O1tlsOUy7YfmvR1HnqPtffWNmY
2Pov6xdc6/G08xtRQ9y1iJoW43trAq3971FEraA1q7Mzn+fv1/+Xw5GvsZZD
+y1nLd9k7Yk1BzMzvyYfac3hQ5mftBZRf6VntifaM2virY2fnOPny5uR1zK/
9VTmUz5Iwcla2/0/ssuJBw==
           "]], Polygon3DBox[CompressedData["
1:eJwt1XmUjXUYB/B3zDCMpSg7LSdLhXMqpBonhVSWkr2ixRaKJKKaSihKoSyV
spQtps0SOhGVsoTQhmiTLFHGkl19nub+8T1zv5/3+b137r3v+3sv7Pxgqz4F
kiQZIQVlYqEkqeXvF+lJ8ltGkmzTyxdOknscvFcGpSXJZZlJsoEvdLyyTDN/
p17BXE8zveRudkHMyCtmWrLe3miMtRvZInaeTDfXUT/X2mN6W3MDzF3JSrHD
rDXry+qyD2UCa856sNHO9w1bwqrIO87XWX+J93O8jbmj/BznGsGy2dVsPzuL
zWBZPtMe/QFeka2yfoZeVEY7XzP9ZXMDrW1n5jgvba4Wb8muZbtYcfaWuVGs
G9vJirEycsLr9uwxx+pZ9518zmrIfO/RU/9eVug1ZQHrpdeXJ7w+zc5IOeca
7j2udp6rnG8fK8E+MDfO6+tZK8dGmvmK5bKSMt45btP/dLyE11vZj5Jl7Viz
OdZ0cOwkK8s2mV3s9fkyw3wn/WN5TT8lOSxbXy2z47uUsexW/TzrZzvXJVLS
eXOcvw6/3+sW7GD8T2bWsDleny3jrG2pr5V39FIygbXSa0t3a5tZmxfz8Rs5
Z1XXaBWZw2eyH+L/cfxyWWJt37gmzRWy9kIzr0tlc0Vlm5nt8ou5Yea+laV6
VXmXddHXywfxfcgk1rZQ/vvmxueSYt57q/41nxu/jUw2105fJ+/rZeQN1ia6
jNUftTbX/zQ/rhXWPq4B5ypmbo9jhfx/38c1HvcfG2xmUnwH+lJzVdlxc5PZ
fewTVo2dYG+xPhn592/cx2n6m9KbrWA1WaJPlQfY56wG+tfaN1i3+O7ie2XH
2Fh2J3ublWZ/sSnxW7LP2KXsDBvPOsX9x8qyA2wCu4fNYxXYIfYa68IWs8rs
HzYnrnG2mTVmpfVZMohtZNmsuD5N+rLVrHbsV/pR3+ECdrG8zzqwt+VRfZO5
+qyEfnlm/t41wvv97tgfcd1Kjtc/mGtk7tzYq+TeuP9YRXbY/KusM1vIKrEj
bKrfaJm/WeymtPzr6h/vMd9cdXnPXHvr9rLB+m5zbVlZ9gvrwdayuqnf7Qib
x6qlrr+4hg6zWXoFmcKas0Nspl4+da3F3vQHeySuFee7kWWxX1lPto5dyU7G
52b92VZ2AytsbicbEHsBa8KKsN9YL7ae1WOnrP2bPc8Osa6sqrn9bATLY53Z
RWwPe4rtYm1YGXaQvR57YWo/bcD2sSH6XnPtWfnYm9jTbA9rx8qx3ezJ+L1Y
69S1kcdeYEdYd1ad7WKPsx2sJSvF/mLPsYOsC6vCDrCR7DDrxqqx92QU28fu
YJfq0+UhtobViVsm9j5rO/kuOsoz7t+J+pdxXZorIi+au1lfGetjb5VRrKm+
PO5hPU2GsoZ6YdfMZv0W+YkNYc/Jbfqs9P9v02SH91oR9zArKMNZE72ItVv0
W+VnNpS9KO30udYWZbut/YxNYenyDGusfyqT9QIyjDWKZ1HsCXqGPMtu0N+V
4frO1Hcfv29m7LOsReyf7GlWkH2nN4vriD3FlsnEeGZZOzj1m+fK0PisrCmr
qGdY+y1rGtclezL2fxkWn8tcM1ZJL2BuI7sx7lf2OEuP55R+U+wdLCee29JP
/yp1b2XqP/md7mLLUvtk7E0/s7vZclad5bHTbA27Ntannh+n2Eo9W1ax3my0
dNA/tLY422vtGHY7W5Se/3yN5+w41pHNYWXY3+xMPJdZg7j/2UNmZspAfYO5
a1gxvZLPNjD2F2lgf2li3Un51Fzd+Czmups7wZbrdeI5wLqx7eyo67Nx7J3W
f+RcJVmm11fFnh/3R9zPZlvps82pye+Oj2StWS6zLNnJXmBtY39lWWwXS3Nw
PWsoX7P+Zv51krX6dbHvsH5xAZtbp18f+4n6MDtubpleO55nrCs7xj7Rr8jI
f3bH83cHe1jfknouxG/5H222Zf0=
           "]]},
         Annotation[#, "Charting`Private`Tag$120163#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFVn1ol1UUft/38nsvbBijrL9KKSgozIaULGUTtbRoZc35UWYfI0kWuWpk
LS3Xx2qmcy0/pnOZ4OgT6q/QSMHMXM3lH5ukPylTm0tmmFFRI8Kep+eBYGfn
/O5777nnPuc5594r6xpqlmVJkpyFBMi6QpIsgNEPXYIPO9IkwV9SgX+jkP2w
/4KeDJkek2QT5r2B+UcL8sH5p6AX4Nv7sOdDj4d+D3I6kY819nM7vrXDvg36
Tvj4APZd0FWp1g5jTu619bbfhQzBnhcUx/yg2P50TFch5g+hBzFnhm36oY/c
MZyHboV84jgZzy1R86dDKvF7CX6P4vtQniSb8bsZcjPGjjkenqkTZ16E/b+F
3gyZC3sAehp8PIjv4yAfQRo5H75qsL4M+iTm3Io5PcZqvzEn9gcgd8DeAv0l
ZA7sdugJmPs95DrHQrs1kf7RNrGJxmcIeoQxwq6Hj+OwHwvCqdW5exi/u2HX
QZ9NtWYiZCPPg7HvCtrruPfdhrGZiPvtoH3e8V6XZdqbOZoXNV4LfQ/mbYdd
A30vZBvs+6wZwyTIF9hjA8baoCuwZhXGWqDXYawDdnsQTzoZTxS/yMsz2CtG
xTUVejjVGRj/p5DltIkP8vcb9IQo7lWYJ+XmNv0wr8wV88y8MX9NGJ8Je1am
nNE39yiHnE80PgK9AXFvR2wnoFdHrbk0SmjPjcKM+T7ldbO9ljy80Tj8XJDf
xVHc24uxpVF5mmx+l0VxljbP/gN0A/TRXPFOgb4Jvy/AHsC3IuQa83CM92VM
zyDeG2A/G5QvYk7sWStVrpcdxogxl2ayiVVZJnyJ7SGseTwIN3K7x+dtgt7H
mDHnTXzfBXs99B/4vTNVPlgTu2x/VlDdTYF+HfM+Z4+APpnLx/VR6/a4jhjb
x+5LzPNex3Nxpn0rE2HH8RO5MGBOiQMxe8l1wXy2kMew92Hvbuy51rGwFxAH
YjLDPaEqKlclUfs0ea+ia5I1eDgVnos4nqv+mVPazPm1UZwkhnWw+6FXQqqN
yU6f8ckoblwUFe+QY2Y9rTGHmc9Z2f88JX/KjHGjse0w/szDliAedEGvNs7E
u9q9lz2YuBJf9vJa91j22vshv/AsQWfgWdi3WVfcp9o1eEWmGnk6qDcsD8Ik
TcXLNtf71wX1rmb3liHXb7nPNcY1Qv6zVzAO1sv4TLiQE+TGf/ktiKO7oXvN
PfbuPcaTvGsIyv8TQb2eGC6EfiroTmiEfhWyHuOvQR9JVUOMm72NPY49j2cZ
m2l8o3P3dyJ+dbtvrDWXDkF3mE/keKe5QRxWRMVFDgzYD2u3HvIP+00ubtCm
/8XG/wHot9yH2Y8ZG++1enOV9x9ruMc5ZP22uZeypzYHxf0iddD9u8nnbnLN
dpknW4NiuCRTHL/m4nWt+c96GzX/L89UZ5Oi4v0Jc0tdL6wb9o9S9xPmkLlk
L2ONHnD9trrPcZz+ex3PmVw+6ftlxHQQ468ExdXv2iFufan23W0+XF0Qr1g/
E32+PtcsMT/iteegf3cfKMLP8/A9mKqvkhvjzJdR1903vh95T46NesvwnfMI
uYTvS6BTvz0qfSbeO+zf7DfDjoe1Mux9GeNpj3Md1/MNQ06QG4PmSL/59pXf
XXx/EX9ym/cY3ybHzAfmpOi+RM4edl8iT6c5X3w7sA75vmj3e6O3oP5DXEoc
8znHebfvdN7tI65b1uxC3+u85x+FdMFe6rthWdBd8VxQDawIyjU5QH485HcI
3yOzc8XCe22q7/c5Ud9bjA/Pyb5RNC4XjNMq1yd/r3T9Mr8H/TbjGy31OOdw
7QtBOe/zW45vun8BoWN9/A==
          "]], Polygon3DBox[CompressedData["
1:eJwtlF1oz2EUx5/fzv7/n6y0C26tXVA01HKhaSuNtrGoeS0v05jNsJkxZmOM
YY1GXoYobyku3IuLKVEktBTFmIxl8hKSJD7fzu/i2+97nvP8nuec7znnya1q
qKjPCCEsB5mgKA6hMwrhC8iCv0mH8Iv1+9i12EvANXgRGAs/lgqh1EIoAUfh
s1l7H3zPUvgU0Ay/AwY5awH2WXgHmAkf5J8R9l/BrsCeAd5hX8VeDM8HLfCH
YJj/G7Dz4JNBrL2s3YP3gWrsRbH/G4Nv+MoVY+Qx5CX59CW2YnsMDpnnqPj6
sXdgT0OUTngrvJe9//C3wUez9jlyjaSV1uTrx94F328eq2LuNI9Z9j74E/Z3
m2uh+w+b3ym7yzyWNXynYg+BtfANYAC+B2yErzfPXWt18Jf8c4pvD3ZZ7JpK
29eJPuPAHHIpBl3wzewdj68SNMLHsPYj8pwa4c9ArXmNVKsq8JP8voNXxNqE
bwiexr/VvEfUKyvgT+ErwVf8H8GLtOeoXFWDI/Dd5lq1gXb4Cer/lr1ZxDcR
Xm2eu3JYZ16DdulpXptm8/5QfbbDV5nfr3pUwiek/Kxh9gxk+pkXWb+Q3KUz
dbbyqzHXVNqeBpvMa6baHQcHzDWTdudV19hzVu6KYZu0jF2PLfBHscepeNUz
O81jUmznwGrznJX7SdXUPMY038tJ7JqhQnyzMny2dL5q1cIdz9M+g5rF38H7
vYA9c/m3DNxKuf438Ofg/5TyNfk0ozovL5nHm5HXU3fq7kvgNnxh7LOonlHv
TAJNkZ+pemq+9Fa0J/OpeciHT0/6p4A9OZFroniXsXY98jdBb4PqqdpJP826
NFMfKkflqhgUi2qm2ik/aaH/z8DrzWulHm6A7zXX8g/+DvhB89ppnjXXei80
C73YJWnPrxg7O/h784G1B8m86q3JGRXCfPOYFfsI/sLge+qSeZB22cTUGvtM
617dr1nXeeJ/g+/P5bwe8/4vT97Pu/i6k/exNPbZlcbSWjnOM6+pctcMat41
95rNKvNe0huht+I/N8TBLQ==
          "]], Polygon3DBox[CompressedData["
1:eJwlkLsOAVEQhg8nshJReALZV1B4gW0VshERpQeg8BLEZSMsNhLUnkDtfk8o
RCkKhVaj9E1O8eX8/38mM5OxSxW3HFZKJSACR0upBaIJTkipOn6ITqN/kNPU
4K/kB94BpMhjeB/9oUechgF1Z3yBvMG/h95CMmq0ZFPIUrfG76GLnpNVoYU/
QV6buTVo4y8w0maG7Cd7Si7/Yyjwt8IH8GaXGVmGbIPvw1eZGR2yXcTMkXke
+GRLfMYydVL/AJudb7yuNjvLLeQmdyhqM1duILd4woTMYb8XPXr4P6JPM4g=

          "]], Polygon3DBox[{{1864, 234, 1429, 1500, 919, 1865}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jdMVWEYBuD/ggJxMASJk+YGByZjGByIia5IURDsWLHQBOyCqIAioFjA
hgV7wurk6KKICjYkFogxGh2MOEiig4MJz0kcnvt+7/efe3LOzc0oqyuujYUQ
HjAtIYRovudjXH6ZGkKq/MVPczy6ztkf2ZjszPXzzAN235JC+GtOs1sox/V/
coZeIN+7Jka6XqpPOE/WZ+pV+pg5zgL7Br3XPlOfJTv0r+a55Djv0X+Ys5jt
vE//bZ7umeZH97G7b5eqZ+v95nTzIvMcZyN6LHpOvct75SSGsJhc8shnwL5A
LmEp8ZQQntgVmh/LIrmMYt7oJXJILpcrWMlzfZXsl6vlGtbyTi+Vg3LYc60z
r2cDG9nEZsrYwla2sZ1yKnjre5Wyimp2UMNL+1pZx0528cJut9zDXvaxnwPU
M+K8QR6kkUMcZtT+iGyimRaO8tr+mGzlOG2008ErZyfkSTo5xWnOcJYMv+MH
791lfiq75TnO80y/IB/Ji/ISH92vJ0q7y9G7yCvyKtei99V75UM55Nrr5hvc
5LPdLXmbO9wliU9TQvj+//8+CajHYt0=
       "]], Line3DBox[CompressedData["
1:eJwl01lvTGEcgPG3Mx1dZrR2qlWtjq0MilIULV1QS9JLSW/cccEl9yISH6Cf
gIiIiCDiwhZXREKrOu2Mtlxaat/339Fknjz/7T3vOWfeU3vgSPfhghDCczTE
QvALp+MhNKID61CMG4kQtnMbvhpaUBzCmNoL8SivV9+AJozIS/gmz+D+ohBW
8TezebWXnOMatY2oxbC8lG/xPfMzxQ34bvZVtJ94E+qQ10/yLPzQe420eCFy
eimejZ/q41gkfqC+mCdjDn6pv8GQeou8FVvxW+0tEuI/nNV/x0XyMlRgUO2v
2nsskS9FOe6rz+WAD3r1vAxTUInVKMBHveXcjAxqvMus554qvs1VvAYxPJF/
Mj/AK+SbsRKP5dP4Ds/jtYijT/7Z/CMecD/ValswHw/VpvM2tKMQX6Jru+UM
txXaT9zOg9zBWe7kId7Bw7yTc7yL89zFT3k3j/AeHuW9PMb7+Bkn7d/qsKVj
E+ctzi3yOj4xyTlRiw7jUfFd8SG+wj18hru5N7ovPhmt93xp85XWH4v25x55
k/5BeT3v5yru4jJu5gLOcIX1nearxb3i49GZEKe4nC/pjfP16L/na9H54auc
4sucjOa4lC9yCV+Ivhk+zy4bzrEtw1n2CkK/63sl4ZSkL/b/uITGxMT39w+Z
GGVu
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1537, 1698, 2105, 1536, 1697, 2104, 1535, 1696, 2103, 1534, 
       1695, 2102, 1533, 2155, 2018, 1532, 2154, 2017, 1531, 2153, 2016, 1530,
        1694, 2101, 1529, 1693, 2100, 1528, 1692, 2099, 1527, 1691, 1978, 
       1947, 1948, 1949, 2210, 2073, 1840, 1759, 1892, 1819, 1870, 2209, 1869,
        1838, 1758, 1891, 1818, 2077, 2208, 1993}], 
      Line3DBox[{1550, 1704, 2111, 1549, 1703, 2110, 1548, 1702, 2109, 1547, 
       2159, 2022, 1546, 2158, 2021, 1545, 2157, 2020, 1544, 2156, 2019, 1543,
        1701, 2108, 1542, 1700, 2107, 1541, 1699, 2106, 1540, 1951, 1979, 
       1950, 1980, 1539, 1974, 2230, 1766, 1841, 1765, 1897, 1538, 1895, 2219,
        1763, 1839, 1762, 1894, 1916, 2078, 2232, 2011}], 
      Line3DBox[{1564, 1708, 2115, 1563, 1707, 2114, 1562, 2166, 2028, 1561, 
       2165, 2027, 1560, 2164, 2026, 1559, 2163, 2025, 1558, 2162, 2024, 1557,
        1706, 2113, 1556, 1705, 2112, 1555, 2161, 2023, 1554, 1953, 1981, 
       1952, 1982, 1553, 1954, 2060, 2160, 1844, 1772, 1901, 1552, 1900, 2220,
        1770, 1843, 1769, 1899, 1551, 2214, 1992, 2010}], 
      Line3DBox[{1578, 1710, 2117, 1577, 1165, 1576, 2173, 2033, 1575, 2172, 
       2032, 1574, 2171, 2031, 1573, 2170, 2030, 1572, 2169, 2029, 1571, 1709,
        2116, 1570, 1961, 1389, 1569, 1956, 2168, 2074, 1568, 1774, 1955, 660,
        1567, 568, 2167, 1847, 472, 1566, 470, 1846, 469, 1565, 2215, 1996}], 
      Line3DBox[{1592, 1792, 2180, 2070, 1591, 1791, 2179, 2068, 1590, 1790, 
       2178, 2066, 1589, 1788, 2177, 1787, 1588, 2065, 2176, 1785, 1587, 2064,
        2175, 1783, 1586, 1264, 1781, 1585, 1780, 1262, 1584, 1779, 1962, 
       1964, 2227, 1963, 1583, 1959, 1960, 1957, 2075, 2226, 1958, 1582, 1776,
        1821, 1775, 1581, 2061, 2174, 1820, 1773, 1580, 1972, 2229, 1973, 
       1922, 1917, 1579, 1464, 2008}], 
      Line3DBox[{120, 639, 350, 713, 1413, 119, 638, 348, 710, 118, 633, 347, 
       1302, 707, 117, 628, 346, 704, 116, 623, 1362, 345, 701, 115, 618, 344,
        698, 114, 1018, 613, 343, 695, 113, 608, 342, 692, 1406, 112, 603, 
       341, 689, 111, 598, 340, 1301, 688, 110, 597, 339, 687, 109, 596, 1347,
        338, 108, 1017, 107, 1016, 751}], 
      Line3DBox[{1606, 1732, 2132, 1605, 1731, 2131, 1604, 1730, 2130, 1603, 
       1729, 2129, 1602, 1728, 2128, 1601, 1180, 1600, 2181, 2034, 1599, 1727,
        2127, 1598, 1726, 1280, 1597, 1725, 2126, 2072, 1596, 1724, 1829, 
       1794, 1595, 1723, 2217, 1828, 1793, 1796, 409, 1850, 475, 1827, 2231, 
       2006}], Line3DBox[{1618, 1740, 2139, 1617, 1739, 2138, 1616, 1738, 
       2137, 1615, 1737, 2136, 1614, 1192, 1613, 2183, 2036, 1612, 2182, 2035,
        1611, 1736, 2135, 1610, 1735, 2134, 1609, 1734, 2133, 1608, 1733, 
       1983, 1798, 1923, 1924, 1330, 1853, 1797, 1902, 1801, 1873, 2211, 1872,
        1852, 1800, 1904, 1830, 1440, 1994}], 
      Line3DBox[{1629, 1746, 2145, 1628, 1745, 2144, 1627, 1744, 2143, 1626, 
       1205, 1625, 2186, 2039, 1624, 2185, 2038, 1623, 2184, 2037, 1622, 1743,
        2142, 1621, 1742, 2141, 1620, 1741, 2140, 1619, 669, 670, 1392, 305, 
       361, 1308, 303, 360, 1307, 784}], 
      Line3DBox[{1642, 1750, 2149, 1641, 1749, 2148, 1640, 1218, 1639, 2190, 
       2043, 1638, 2189, 2042, 1637, 2188, 2041, 1636, 2187, 2040, 1635, 1748,
        2147, 1634, 1747, 2146, 1633, 1211, 1632, 1966, 1984, 1965, 1985, 
       1631, 1967, 1285, 1856, 1807, 1908, 1630, 1907, 2221, 1805, 1855, 1804,
        1906, 1920, 1459, 2080}], 
      Line3DBox[{1655, 1810, 1809, 2212, 1654, 1231, 1653, 2197, 2049, 1652, 
       2196, 2048, 1651, 2195, 2047, 1650, 2194, 2046, 1649, 2193, 2045, 1648,
        1751, 2150, 1647, 1224, 1646, 2192, 2044, 1645, 1968, 1986, 739, 1644,
        677, 2191, 1859, 509, 1643, 507, 1858, 506, 544, 1324, 829}], 
      Line3DBox[{1669, 1881, 1882, 1811, 2213, 2059, 1668, 2205, 2057, 1667, 
       2204, 2056, 1666, 2203, 2055, 1665, 2202, 2054, 1664, 2201, 2053, 1663,
        2200, 2052, 1662, 1235, 1661, 2199, 2051, 1660, 2198, 2050, 1659, 
       1969, 1987, 1989, 1988, 1658, 1970, 2228, 2076, 1862, 1914, 1913, 1657,
        1911, 2222, 1912, 1861, 1910, 1909, 1656, 1444, 2004}], 
      Line3DBox[{1795, 1722, 2125, 2071, 1939, 1721, 2124, 2069, 1938, 1720, 
       2123, 2067, 1937, 1719, 2122, 1789, 1936, 1718, 2121, 1786, 1935, 1717,
        2120, 1784, 1934, 1173, 1782, 1933, 1716, 1263, 1932, 1715, 1826, 
       2119, 2063, 1928, 1714, 1825, 2118, 2062, 1927, 1713, 1824, 1778, 1931,
        1712, 2216, 1823, 1991, 1990, 1971, 1711, 2224, 1919, 1918, 1593, 
       1170, 2007}], 
      Line3DBox[{1817, 1690, 1756, 2207, 1526, 1689, 2098, 1525, 1688, 2097, 
       1524, 1687, 2096, 1523, 1686, 2095, 1522, 2152, 2015, 1521, 2151, 2014,
        1520, 1685, 2094, 1519, 1684, 2093, 1518, 1683, 2092, 1517, 1682, 
       1977, 1943, 1944, 1946, 1945, 2225, 1835, 1755, 1889, 1816, 1867, 2206,
        1866, 1834, 1754, 1888, 1815, 2223, 2002}], 
      Line3DBox[{1942, 1681, 1975, 1926, 1921, 2091, 2058, 1515, 1680, 2090, 
       1514, 1679, 2089, 1513, 1678, 2088, 1512, 1677, 2087, 1511, 1676, 2086,
        1510, 1108, 1509, 1675, 2085, 1508, 1674, 2084, 1507, 1673, 2083, 
       1506, 1672, 1976, 1940, 1941, 1671, 1371, 1832, 1887, 1886, 1814, 1670,
        2218, 1863, 1831, 1884, 1883, 1930, 2233, 2013, 2082}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{722, 640, 1976, 725, 644, 1977, 727, 647, 1978, 729, 1979, 
       650, 731, 1981, 653, 659, 1955, 260, 337, 1821, 261, 339, 265, 1824, 
       353, 289, 1829, 358, 297, 1983, 734, 669, 736, 1984, 672, 738, 1986, 
       675, 740, 1987, 678, 1094}], 
      Line3DBox[{935, 1105, 2083, 936, 1115, 2092, 956, 1125, 2099, 969, 1136,
        2106, 982, 2161, 1147, 995, 2168, 1385, 1386, 1387, 2226, 1388, 1257, 
       1327, 1258, 1340, 1301, 1341, 1259, 1336, 1260, 2118, 1303, 1277, 1278,
        2126, 1033, 1187, 2133, 1046, 1199, 2140, 1059, 1211, 1071, 2192, 
       1223, 1083, 2198, 1233, 1095}], 
      Line3DBox[{937, 1106, 2084, 938, 1116, 2093, 957, 1126, 2100, 970, 1137,
        2107, 983, 1148, 2112, 996, 1389, 1390, 1391, 2227, 667, 1328, 586, 
       689, 587, 1337, 1261, 2119, 1304, 1279, 1280, 1034, 1188, 2134, 1047, 
       1200, 2141, 1060, 1212, 2146, 1072, 1224, 1084, 2199, 1234, 1096}], 
      Line3DBox[{939, 1107, 2085, 940, 1117, 2094, 958, 1127, 2101, 971, 1138,
        2108, 984, 1149, 2113, 997, 1159, 2116, 1008, 1262, 1348, 1403, 1402, 
       1406, 1404, 1405, 1349, 1263, 1022, 1178, 2127, 1035, 1189, 2135, 1048,
        1201, 2142, 1061, 1213, 2147, 1073, 1225, 2150, 1085, 1235, 1097}], 
      Line3DBox[{8, 1509, 23, 1520, 38, 1530, 53, 1543, 68, 1557, 83, 1571, 
       98, 1585, 604, 113, 606, 1933, 128, 1599, 143, 1611, 158, 1622, 173, 
       1635, 188, 1648, 203, 1662, 218}], 
      Line3DBox[{941, 1108, 942, 2151, 1118, 959, 2153, 1128, 972, 2156, 1139,
        985, 2162, 1150, 998, 2169, 1160, 1009, 1264, 1350, 1351, 1169, 1018, 
       1353, 1354, 1352, 1173, 1023, 2181, 1179, 1036, 2182, 1190, 1049, 2184,
        1202, 1062, 2187, 1214, 1074, 2193, 1226, 1086, 2200, 1236, 1098}], 
      Line3DBox[{943, 1109, 2086, 944, 2152, 1119, 960, 2154, 1129, 973, 2157,
        1140, 986, 2163, 1151, 999, 2170, 1161, 1010, 2175, 1265, 1355, 615, 
       618, 617, 1356, 1174, 2120, 1024, 1180, 1037, 2183, 1191, 1050, 2185, 
       1203, 1063, 2188, 1215, 1075, 2194, 1227, 1087, 2201, 1237, 1099}], 
      Line3DBox[{945, 1110, 2087, 946, 1120, 2095, 961, 2155, 1130, 974, 2158,
        1141, 987, 2164, 1152, 1000, 2171, 1162, 1011, 2176, 1266, 1357, 1358,
        1359, 1362, 1361, 1267, 1360, 1175, 2121, 1025, 1181, 2128, 1038, 
       1192, 1051, 2186, 1204, 1064, 2189, 1216, 1076, 2195, 1228, 1088, 2202,
        1238, 1100}], 
      Line3DBox[{947, 1111, 2088, 948, 1121, 2096, 962, 1131, 2102, 975, 2159,
        1142, 988, 2165, 1153, 1001, 2172, 1163, 1012, 2177, 278, 346, 279, 
       2122, 1026, 1182, 2129, 1039, 1193, 2136, 1052, 1205, 1065, 2190, 1217,
        1077, 2196, 1229, 1089, 2203, 1239, 1101}], 
      Line3DBox[{949, 1112, 2089, 950, 1122, 2097, 963, 1132, 2103, 976, 1143,
        2109, 989, 2166, 1154, 1002, 2173, 1164, 1013, 2178, 1268, 1363, 1269,
        1407, 1302, 1408, 1270, 1364, 1271, 2123, 1027, 1183, 2130, 1040, 
       1194, 2137, 1053, 1206, 2143, 1066, 1218, 1078, 2197, 1230, 1090, 2204,
        1240, 1102}], 
      Line3DBox[{951, 1113, 2090, 952, 1123, 2098, 964, 1133, 2104, 977, 1144,
        2110, 990, 1155, 2114, 1003, 1165, 1014, 2179, 1272, 1365, 708, 710, 
       709, 1366, 1273, 2124, 1028, 1184, 2131, 1041, 1195, 2138, 1054, 1207, 
       2144, 1067, 1219, 2148, 1079, 1231, 1091, 2205, 1241, 1103}], 
      Line3DBox[{953, 1242, 1243, 2091, 1326, 1249, 2207, 1250, 965, 1134, 
       2105, 978, 1145, 2111, 991, 1156, 2115, 1004, 1166, 2117, 1015, 2180, 
       1274, 1367, 1410, 1409, 1413, 1411, 1412, 1368, 1275, 2125, 1029, 1185,
        2132, 1042, 1196, 2139, 1055, 1208, 2145, 1068, 1220, 2149, 1080, 
       1287, 2212, 1288, 1289, 2213, 1244, 1245, 1291}], 
      Line3DBox[{1092, 656, 1311, 512, 2222, 1081, 417, 1310, 507, 1069, 415, 
       1309, 2221, 498, 1057, 413, 1308, 488, 1044, 411, 2211, 1283, 481, 
       1031, 409, 1281, 574, 1020, 2224, 1171, 1401, 1322, 1017, 1168, 1400, 
       714, 2229, 1006, 591, 1300, 470, 993, 406, 1298, 2220, 462, 980, 404, 
       1296, 2219, 452, 967, 402, 2209, 1294, 443, 954, 400, 2206, 1293, 435, 
       933, 2218, 398, 1292, 563, 1333}], Line3DBox[CompressedData["
1:eJwVzrsugwEYxvEXrTR2F6AXIEFCYtAibkBiQJ3qUFNpHboZW4ehi8VqEJYm
TcSguxgtZo3z5gYq8TP883/e5/m+L99Afme22BURc5hJRDzhMBnRhwpuUxHj
ugfsu3tR1x3woO4eZTmJPaTdDezKCZTQ7x7hYQyhGyndje9ccAe/PRHX7nN5
0v7NJzyFaWSRwQS+bEee/fFOVR7VfXJFNya/6gu8hU18/P+PbVt+tm3wOvK4
07/bj+VH2xqv4lK/wm+2Grdsy9zUL3EObVuVr2yLvIB5vOjP+BR/UJEsqw==

       "]], Line3DBox[{1469, 1466, 1339, 2233, 1104, 1503}], 
      Line3DBox[{1470, 1434, 2223, 1312, 1114, 1499}], 
      Line3DBox[{1472, 1442, 1315, 1209, 1493}], 
      Line3DBox[{1473, 1443, 1316, 1221, 1489}], 
      Line3DBox[{1487, 1445, 1325, 1444, 1488}], 
      Line3DBox[{1491, 1461, 1324, 1460, 1492}], 
      Line3DBox[{1495, 1459, 1323, 1458, 1056, 1197, 1314, 1441, 1307, 1457, 
       1456, 1043, 1186, 1440, 1306, 1455, 1454, 1030, 1176, 2231, 1439, 1305,
        1427, 1019, 1170, 1426, 1016, 1167, 1332, 1465, 1464, 1005, 1157, 
       1438, 1299, 1453, 2215, 1452, 992, 1146, 1437, 1297, 1451, 2214, 1450, 
       979, 1135, 1436, 1295, 2232, 1449, 1321, 1448, 966, 1124, 1313, 1435, 
       2208, 1471}], Line3DBox[{1497, 1447, 1320, 1446, 1498}], 
      Line3DBox[{1501, 1463, 1319, 1462, 1502}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvHc41//3P94kKSmkFCWyKhWl3dHeNIxQRimSlSgZhUokhezZIET2XseW
lZm993p6JCOK/B731/9e1/X6Xp/ff+/+vF3nejzuj3O/ndu5nfN0xX/D4PKt
BfPmzUteMm/ewnlz/fsBa/09ZNm/9WFrfjzMrO5ChWufdau5YyBQ7oq+f1Ad
JqsZ31+vzMAvZ73r1VhSYOOqL+O6CkX4vmJblhU/hQE/z5Y92ZwKHxoZBS+G
EHc5FjedcaZwqQtbEuxOhZyovyxfeOLxDRMP97J4CtNz+nL3q6SCc8z1INF3
X/C49veeB1kUtgRUON1rTwWxt7aTaRZB6DV/RGk6l8J+QTvx6pQ0CJYIEY8u
9cfragWXu/Mo1FfYu3SbUTpYDRfuvXPEFU+m1KktLaTw4Nbj4qNi6TCx0G0f
3xFb1NfYbJxXTqGJfGH1oEwq1IdZLzpeZ4wMcSx/X0/hwszu9HcJSbAvI+5R
uLcJyt5cwOzVSOExTj218JVJoO+cO3Wf1xtLPW6VTn6mkC8lwW0rTzZMXhmK
2NoZhZ+nFqoYB1HgNcb2Y+NsJsyV51atyyud9w7gr+LdE9nbO1CHrWptKm8s
JPpbCNroN+Kyxmdvz0QO4V2P+d7zBtJg5/xVzlRJCXJuX3GwbnwYl6jk6655
ng5fJWXsD6VnIueWw/xMLyi0KN9Zz3cuDdayJIvnMuLww8ZQJZ5ECuclyC+V
6koB3Tppq7VmYfjIh78zoohCJZW7Cg+TkoFrnFrR4vMBrzqoa3dXUdh0hFu8
szYJtrMqFbc7eOHwUN/Gn3UUxuuVnF8qkASeDiwtndeccVXUU7ZPTRS+MrVf
baSSCCsrXDfLv7PFlW+vdN5po/CFSXN32qkEcL580qXktxmGJE6/ke6i0IEz
dFR4Og4E5wcb6gfpYG1q4Yx+D4VbOnbePrwzDrQXRBzbzXISQ3wFRNTbKUwO
W3HtJG8CzDROH9684Sak2XXyeD6lcLlZ48yjvflz5tk1kPnJtveDeGeJkpRm
VysO6/oK522Ig+dri6eWNbSg7L7yvZszBvFcXyDb2x2ZsHHdi2DPjjK8Jql+
nTNlGNWd0+IsRDLhuuOHJpGSLBStbEt88IhCrjhP0xKTdHgvunrb28PxWPLM
YKKQzvO+IwkLVhumQOfv8b5x78/44jqL+K4KCh/A1bg/zYmwq0Y74LX0e9x+
+ZTGtWYKU4ZbR7La4uHkwNp1O/66o8dd5ZScTgqDhLb4et6Lg2ujq5uuqr7B
RYNxyjK9FEZuPtETYhoLNU4JyvuznmONWtX7m/0UrspnWBaWxQAHCMcceWGJ
IQ8/yE0P0Plc+QXPHYiB0r1/FwgdMcRPHoHLFjEovFtbetnsZjQU+O+/M8qx
CwSNdG+J/6Bwk8YOa8PSSBgUP8MusdoUcsM6TpwZo3DrkwNs8rvC5szzgyuN
gry/hrDjWKm6VlQDVnZMK99dGQ/xJ9aHn3vRjqLuH6g1GgOo0Ht7V9SpbPD8
JO2G7RW4hEcnyOP2MM7CPeGcyiz4PKArmLslB4N2jeWlaVF48/HvXQcTM0DE
of1RHlMClj1c84KPzvPRK/1ZSX+TofrHDXbOrM+oFjs2lvadQoXD6Sk2RxOg
54WJZeTwO5Rif3nEm87nVuFTUYUvY6HBZiBScpU7Zs63Xa1H56e0Q/7N9ZRo
mP7KPLVK2xFtmKTakuj8tDm32yyJjgJR9QdDo4LPcIChEMhMUegk6xnheTIK
FBs2CQunW2KMpscCexpncYtoe88bBeGNKTskzpshta9vkfQIhRpOy/Nz7CJA
gP8Bl+QBC9TelvV06wSFXaPlLRMVIeD/9G3ibVkzNAmtnC37Q6F4yMztgSXv
5sxzklJxlQvvMBaus+BDqho7/vpbVTbHwyzFmxij2oUSLiUxMuv78NZsjQ21
Mg9G2rQy3aS/o2uSkumjNAZqG+stlk7OBU7G4izJrfloXFzh77OfQrWnyzRi
/mRCFdOgspZjEl42VP+y8AuFX5VLLNNKUuDhdG7J7tBw7Gd9ckKylkJT7foH
e3njIepTU9Waq+8x5EkTvKV56OF/iE+lKgoWxWUv3arshvnlXjtf/KRwkeDU
nj2KYSCYIxZkt/olXsnaHLnlF60Pd62WQcMnSBCZL5t26TFWjkuddJqiEC++
uKFGfQSeOhO7Rd16WFB2wMv6N4Vi1+TOvgn+AEkP40N4vhxH5gUVQbl0vLjL
jy8DEx+B1VOjtqZbBx59uewlQ+f/xMWmTSPeEXC9SGmXToArTBgsUM/Tp2D2
ds/FXY0Fc+ZZPelPoM9yCnPYDns6fy3BeB87jh9PEwA6H9i88ezDmKIT416m
neijwabgcKIQZOuv+a2/14xlFkuW69kOoiTvqudKO0rglIiT55R0OQoJ8V0I
uD6MA2Z23ZbjBXBOxm7Rb+dsPCsmzvFYhkKf0PdTR/qyocPL7Zr1lQRM7N7k
7Uv3F/GdtpIiCulguSVnU99kGFroxzTJ0fp87Viwh2d6AkwkTfq8/vkejXfv
HJKn9cF/+BRvflw02LgMFanSemIvY8PWQedhFSXoJ5IdBkE+vMV8HK8w9J3W
4Vg6/6ypSgUqP4PAhO1gq96gBT5feK35D51nBvfsRLnDe5D7uSzddJcifsxd
EF45TeG49HeZSDNf8HG5kGTlaAjtDYZ/smbofho8UVTm6QEyRhKyPPU2sHxg
yGXlX/r5bYPR+gKuc+ZZtOLMyOMQCs/G3v14yzAdFZ8YLu8eToCAQxMD0DCE
M9JsV+7p1GLZuuxUx2elsPfw+/zlwd0Yvql038W93Sgk0rBW37wahKRq7ohL
NyLXCdamARjEu+wfyu6/rYJ7uRGmIUfK8XSSy8NDDAb2fOg4O/W2DKqnQ4sG
Q3Nw3Fbd0IS+5+VvZT5coPkgFbN5CZdJEqa4BPDfcqTw3OHuJ/nmWVA6X8K5
UTASA+LO7pGhfUW3l9FOljXJkKb+y2k1byC2pAZt20T3r437mvapf44GrXVM
G4dXeuNZgYqXzLR+Psl+dLVDKwRGA2xW+GQ44TYVRTF/Os/yt9RfW755B1n8
D6dvTjxD1M6WCaHzKfMy85MKvzu8fbCm6FqDKR7o2N6wcJbCbNOPfz7tc4Tt
1mJP7kTcxSexJ5U8afyNb4TfSaGnc+Y53KOyIbCFQumzY2e9TstiXRnjfTJH
IvCE2zCMZ4dR+0Xuzw1rPTA+zfmQ+6cyaDyufaO+bAjFfqjFxVckY8PXcYHm
1Y3wt3DVhfrV/bjl0M2vK5MqcLHUwVNLCtrhkwLnnla9TgzRalrN5tmOyjtf
z4BKB/TahqnlraxHXrttpbKh/ej+t1i5sqUJroY7Nx88U4LqR7y9DSsZuPnw
hoHbtyuh9HzMm2JZxPSLy34r0HXBKijr5H8rD1hk83RUpGLQbt7ZgdP5NF+y
e3gvHk2CPsXx9UEdn3DEc4/t7CCFJYxVL+UehYHUqtF1qy4GoPTQ2k9XJinU
1tobzaUcAC2+I+tPHvRA+fUWHr40n5eVeXAncLuA9U0Jp1RzFyxa16m0n+bt
dlPGjwjR56DVba8z3OmI4eaXd07R+NvSAP1DfI/mzPO6YycpwmeWiv5dtw3T
4XSz5yLCZw29pGzC53azGQEjnVoweSDgTfj8UfRdKeHzx172nTSfQfyE6UbC
58+H63cSPvPWHxuh+QwseCeY8Lm7u+MR4fPQ7SOEz3Bw274LhM/Ogme+Ej57
cvsSPkNr790AwmfuW3c6OWk+b7Kr3UTzGUTOvb5D+Lx1dMctwuc3X7sJn4F7
YGY54bP5Ox9jwufCwmHCZ3jCObaR8NmxbFKA8PmeTSnhM1wb2XKN8Dl5zGIl
4fNbLgXCZ9AWlXcifF7WdH2xJs1njbuZhM/Qs0coivD5Y+qdFsJnJV9xwmfw
E/FfHkzzuZvd2IPw2XvmBOEznKk2j/g3PsvqnHEg+nxI6r7i268lcOlnzzyi
z4mJQhZEn1vqz/+l9RlSZjjOEH3mE2k8RfT5mImAKK3PIDorKUn0OZeKPkr0
+UZgvSqtz/DYcfw20Wcd5vzuKVqf5eOtuGh9ht2PLjYQfe7nWKlM9Dn9iBTR
Z5A/u2cH0ed5t/3+0Wfj3n/0Ga6/tvtHn40Wj7sRfU7KOUL0GQyoq9xEnzVq
FPOIPt8Ssyf6DKybtN2JPleOsVQTfdZz+0efYZNJbD7RZ7eBZw1En7kGrxJ9
hqfPsqeJPu/6HVBG9FkuYiaM1mdoZ3t/i+hzAOfK70Sf2SXuEn0Gq1DNPqLP
ddHyD4g+m3V1EX2GLcvSG/9Nn89WDcQTv8FaXlpM+w0Yf8LQIX7DRVPoHfEb
FmusCmi/AWuvc90lfmPROqMg4je8tPwf034D9kys6wLab0xE50cTv6Hv3xVA
+w0IqlKVJ37jRlXYdeI3ljqYEr8BS84LGxO/wR/2NIT4DQvbHuI3wG1G4Brx
G04M7wziN16+5JCm/Qb8dfVnIX7jVeKP31tov5H4Ioj4Dbj+Xm0b8Rs/Vop5
Eb9xqWMb8Rtwv2x6PvEbA1lBJ4nfeGazn/gNePBpyXXiN9a1Uw7EbzjY7Sd+
A/ZnPjlP/EaKeUoK8Rv7BfOJ34CCbwpI/AY/bwxF/Ead2FLiNyAyzlif+I1+
6/xIbdpvnAl1NaH9BjZU3noj8S9+47qZlBDxz+KZL5Rp/wyP+r/eIP55b8WD
LOKf1ddHtdH+Gdwyek8Q//xFPTOc+Gel/LXvaf8M9qebDxP//Nv391AO7Z9z
x/YV0v4ZTEaO9R+g/bPAqtNaxD+787gS/wxvf42HEf98if/QCAftn9dfUxyn
/TPcHKl8R/xzhluiE/HP91h1iX8G7yPKScQ/TxtUJRD/vMTclPhn6ErucCX+
ma/7JjsH7Z8Pj60h/hkUxwWciH+WY+qaJv45eO8B4p9B71xLKvHP55fJyxP/
fDfTivhnMG51GiT+WYf99E7in2/59BL/DPgs+h//nDCdupP45xnzL8Q/g+uZ
8F/EP8vzbEgj/lma8xvxz3CKWmj4b/5ZZb2zKpkHPfieB9PzILzhNV9N5kFF
3lD+5fQ8eNHo11Z6HoT7Pk4CZB4skonwIPPgybbPqvQ8CHrpceFkHtwxFlFM
5sHrhzuT6HkQCtTtr5F5cMOJx0Dmwe7qkXF6HgSW0/5ryTzI2GHbTuZBykuA
zIMgcCv8C5kHN9E2jsyDy35KkHkQnE58/E3mwYfhvDxkHtxSd43Mg8DcdtaH
zIOc1lrtZB4Mtw8n8yBAhHM/mQez3R00yTz4sC+DzIOw4ZS+LZkHTR8qp5F5
8NDwWzIPQpjMVB6ZBw8vVBvbTM+Dfx6+JPMgVG6vVyXz4MNbu++ReVCoSY3M
gyC/tNqRzIMrkq+dJvNgZ3UamQdhNVfvvn+bBw/Hj68i+42QnSmj2ds74OJt
KX6y38j5XLGF7DcchgOdz0QOQdWqtPdkv1E6nORD9hsDsycP1I0Pw6Nb0Q/J
fuPIx6YQst/wfWe0gekFBTrqdmwbzqVBt8LMerLfKLX/SfYbkJRuuYDsN+5/
bfEg+42zwXkdEUW0TlbZ6pL9RihHFTvZb9xSXkf2G5Dbz3Wc7DdmD9b+IPuN
NxeyyX4DnKbZFMl+Q2B6VwXZb8yyJpH9Bnj9PLmY7DcsSvfuIfuNhfs3kf0G
XFQ7+IvsNxgSOkZkvyGXNUn2G6By98o42W8cviJ5mOw3zqglkv0G3GN+qkf2
G0d1L14i+42OwBlh9XYKOKwy7pD9xpf2Eney3/Dm0Vzt+ZQCo6Sem2b/st/Y
95RZlezrhGzSts2s7oI7khIPyb7Oo8X7OdnXBYTw669XZgBDcNUU2ddl7bxU
S/Z1VgO7c6z4KXDWmBdF9nXpO1Mosq+7GhDfeMaZgse1U/VkX3eh4OcCsq+r
2W9N9nWwodYwnOzrNO+diCD7urLPkWRfB82rJb3Ivm46NHCa7OtsZRrIvg7a
bVl2kX3d6+UKGmRfl/KEmezr4Pe9z/vJvu7xzOflZF8X/yxHfSntQ5K3b/3x
UywdSn5dlyT7Or4aIPs6eDIhUkr2dUdHPqQdqzPG59Hvyb4ODDM/FJB93eio
7VOyr4vf087k1UjBLgFVHbKv47N7xGvM6436jeYlk3S/fvX3QQTZ13FqypiR
fV3DtQPXjYMo9Bpcm/pv+zo5l2faBkLuGFSw4Ol1KwqNY59LLlCY+17+K34h
L+wTeX5x1Q4r+vnArClh9G/Plzm5XH6bTQdWupqrnhvsRyan8eTe6qT//F6G
6j7Z296VWGNwDfh0hlHPfwN/rFQasHU7S81w5qJF5/EVx50H0dhaO/p5Xwsk
7PMrdF6YjQdrcx6LMHdDyAaV19oxvXCMtWmxukYX8nI+Yp/R70OO3ucW3edS
53zv6eDHCw+kV2NKhEgt8+JhNFNbfyX9NIL5g0d26WuN4feshR9LP4WXtqgs
H1ofO+dzjma9d9hk3YNrLFq2jRr0oGq9jN3aFRlzxptfUeOr1a3FK3wfxlOM
GWho0nxf1SZrznh30d1aFYl9qG2zX3xVbyemVS49IWQ0N09uv4mz8D/XgE9E
gurdcodwe0lUZIV2ztzzwqoS5zCTQQzb/DTD/20rXtkmfcZeInvOeNsW41Hb
iTZ0LpNTZdUdQBmDWw8vx36dM97OboN2VgsDcav70jcp1Tjd1fjKLH3u83gt
fWwX9rAHF7VmT4ue78aIb+aspZLl8OvN6vRoryHccdyj/ixXNbY8WTtv1dNq
aBs/u3ZqeyMm71JxHysdxGUvXBdeOFYOfcvdLMq9evBqY2HLhGwHtiaZZhwM
b/jP/FxmKFxB3htT536Vfi/UvbdkI++tvN9xkjyfa7nXgV+yHRD52dOEPD+b
acmzBMsWvNmwZcabnlMTOzstUx7Wg6sXm3M8jT+remLms7ofhNb8jEmm8efx
chdK8ivRf/dBTsOuIfRgrV3Qv64ahsqidhB8Xtw+PhqHxXViXX00fteao7/S
KR9vzgu55/d5GKtuBfrV5pXAdjffJoJvVxS9T+OwNwsdCT5T8GXdryupKOPu
Hj9rSOH9jhvS6lY50Ds4sZDgK/S1E2gcVF1eSRI8oFFkQLonCg8qZ7tJ5VF4
IV1UutM2GeZt31NB8Pjb6u40DlZrrTYQfHuhzIkXz4JQvXlAR6CPwtlzHF/5
z0XBKXXjPQS//IHlLo2DQp9bOsFZiv3eydzxRZUnH8QvTVCYGrTp/BKDQPg9
VPIPLqX2Dw7hDsf/wXfwn27d9/Yt9p9ZevPvHwr7B6ZclBW9wDa1vo3gRSf/
wWGzYZUzwWVjg9Myj71CbyOW+mP0vDz/cWvf+LE3wB/ZV0RwtxhmgkN7+8dJ
gp8Umr+jQPM5Bi3c7LRjlsJj4bwdn888hW1P9Q4QfL2QIMHh9VadIYL/V/4k
ZsWeJ3wOvcRyXOx8N/xMut5WQvNZrWznQsJbVUaUH81bqHS4NnGe5u37UQsj
9sNl+DLiXITv+WEYXvyJ/3xFERicWb4j/nE2/rSU21h9gPZFR7TF7pTnQu5e
qz1x9jbIdZXJ0ZA+p4rC7MUfCo+h6/lFA1J32X4LWl+nVIPSwUK3f6u7q+/Y
7BUrB7D6L/v6nqVtkKeWrJFkWQzmrmcGSL27mc1q0vUOScasOqTe12+eL5y6
ohIF91XnREkMQ5dLbnzw2rn7RRQTx1OiM7/t+EdpnaH772P4N51ZpKHl/k6r
B7sDF944u64H6pN1A7dyzz2//M5L1iE62bssXZTWSeBmuXHq33SyVVbemOgk
9a6ikdZJsCuxCf03nXTFLzFE55PW+i2mdR7G7jxI+zedd+2xXkV0Pkjp8iSt
8+DHN6vzbzofPSFYoEb3L8Yu6ZN0/4KGp7Yi/9a/jjz6M7af7l8zP7c10P0L
/q58KUn6F+vD1mDSv06J7ib9C+5LS20h/euR/ztjndsngHPfzbW/KymQ3LN7
tUZpCuQYhdwjffz5BvMzdB+HNR4Kbf8vfbzM4vRZ0sczQvZJ030c/px+v5b0
8dmN7xeSfm0Q1hwhytyNJTr99lp0vy49cDOC9Ped4RtqjjkPwu+/FXds6f7O
xR7mEWvTj3lvQsUDtnViOyenWoB3zJzvDXaYvPvnVz0+bhq7lsvKwDXT1w41
aKeClWDqH5bhAVzf/zf+2Pp2LHNyMh0OiIXr9gOKvsubcfnn9UfvHRlCFsWg
tmSnDHj34Jp6zy8buGUf9Vyni0KrAANpscY4GCq82pQkO4Rnsis5azWa8c2E
5RUnnzhIXFrQeFO3DVNdLbj3bBzExFJBrsTtWaBxQYll9ysGlv34s3j/71ps
y5O8LPUoHsa3Da5Nse9ADq7bTwM+9ONbi2/38o/kQNGrXft/+w+juLzQmH5a
BW455Dp4c08CTP/J8iT8X6BqqkbzHzXy6z8R/ssXmUk33aZQa1FWztn6PNxx
c4f9+6wEEMit1ib1a2eSIkfXL77+mXaK1K+U+Namgbh+1BnddbT1cxu+2KsW
p21WCVl71s7Tu9uOQbopAQV5fThw7JLhmi/VYH+h/FAX1zDux0LWPa6fMfSE
PEftq+8w+V0+7JDoIMrta5Tbr5KP8pumZd/+aIVbwhsWGD3vwRVGL+LLJurx
lEHxQ83QDvCqPRG8YLQVvavWzatb0oPNXzI6i6rbgCn243O1eVW4UOpUWazU
EFoaMRe+M62FpqNqpblTufjo8u5szB1GwQYlBs/+EghSVxw+9yURDc8IHLns
Q6HJ6aZAz42ZMN81fL20SzjecQjTUmuhsNCgVcLucAw4j9hy2qd8wD9r14iX
jFKoMSV8bWNKIORpfZG0SfTGc6bzrs2j+8jXqloXuwIPEPzBYyzi5IqZvEXn
vGcolHuYeyonwAG4H70VI7rKu5GZ6Cq2CtcdILrKvihtl26tE2oUGwp8oPsL
m7WXSvQJq7l11fj4MMm/k3f0Jjr/YDisnkXyv81de0yXzv+iPedD6fzDmfL6
OyT/BhHcHS0rvmPeM9zk0jYE10++VfQvqQA53lm155KFaBrMLiDlMwwSOgmb
f7oVQ9qefCnCB+truYHn6vMgulHYhvBhgaD33QLLTixf/lkqSr0PXhvW5pgd
KIH9tQzm/U3fUXPWS1JVkQF8V0OKxO4WgempHYcJD+cd1KmjeQhWnKbDhIcL
S+4M7aL5PLtc3J3mM8i0HJQifL5yiI+T8PmTwXo7ms9QkVhwm/B51cHMVlIv
iZKezHS9wKHTk/KkXtTLPLNIvVA7dEXoegGOXTiVQNdL99aqEVKnXsqJeXSd
wsZnV++ROnXwvaBB6nT+bjug6xRiLJ8PkDoF81POpE4L7pwmdQrGZQ5apE4z
LxW8IroR7n78EK0bkLdKQJHohuzUVjGiD1o5kbq0PsD16oFf9bQ+SC55sPX1
nU70XrDEYMGBflTh1ot8ypQClv3K5ha+VTgQfmZt+4FhPDxmeZjnS/qc95v6
rfnX8zvdGLaEenDPphdTmFxG3QNp3auHrbPzarAjT67ENoeBAkvsXyq+mLsf
uex87H/sUy+yPXtU6LCzG6W11oaY2iE8EPl90JmpHnkX9Wju5WJgUmYgT4rn
3H1TJKa9W3vtAIZ2FnLdn9eBG6XDF3ZdyQLLqiUuuzKacTxboePIt0E8/S2g
qr0ob87nDNS5vw5LH0JRUZNZZosGZP7RulBvUQ50htw8Rni1WG2JCs0rZJLz
tCe8mus5c+EfE+oNyfMX3ed8tsSiAX49kvihu2ju/rtRWKKBfFeEk4Qw/V1g
yjfwp5P+rr+BWfrku/zqE4fo74KvEVcy/+27lhZUepM8P+2PKKXzDGbVuz6S
PKerh/OTPB875naXzjMUfFRm+rc8l5c9/knuPVx9wpy+d/CJuzFE7n1MnH8z
uXcu0e+l9L2DX/f25/9279H10WyEh/HRWbY0D+H7Z2ULwsOXa9R1CQ9b7NnX
0zyEjUuqhAkP7516kaJW2oqPmoVPlL8ZxP6znzcv3TS3T7ilvX8Y0tuRW6K/
8Mz1AdSueSN1f/vcvqWVykhjYXTipMCJVNkIui8caTe1aZ/7/BeOFq6ppf1t
kkjVh6kzPVhhqlfbPDR33qRnQv9oTPejzVaD/ezN7dhy1E+nPW/u+5oL16x3
/Igpg7io4WSvXU4zeP3d08q+Y25/WDY/f1WIZB8q31sUsUK2C8Q7eceKruTO
vT90nMc2IdyNkg+z5n937wUDRw6ueW1z+7f8Y4lHzAo7MLsjWNjGsx9Akoli
9OKc8fJu4aFGBW3I2/3X4PDCQXh6jGVXmmca+Kq6i17JLscbwcdrY70q4KBm
gLe6N+M/5+fvqKUgec6J8+Fr4rwq8NSZAOf/l+f8/40bf+G/Wdv+Ah/fFtTT
vU9BQaDilLxTASw1PLv/0s0enG5MlaMiaX/xPZn7WHLCf34+96xj5JbHNeit
qjTvWAYD5aqb1vFGpcGNX3ua5LjzMen9S2FOHAL5EO8++cZ6OMCrLPXyVC+a
NQQqJWR1Y33xUNE9v0RYfT0ZyX3pmH7RoO8LCz/7KZH72jYVYPWQ5tUHv1eS
+fFduN9S9QiPXRIE87OOXCyqRdGpNSqLHjLwyMfsWKlTGaAeWtl09FA9rr1l
+muCn4FLYgcDly+au77+K+4o8rGZdXM/rol8dpVh14lFviocTA+ToduOV4Tw
02fC8ADNT5zlG0kl/NTMrD14h9bVK30bY7n3dmD1VQ3FrVopcz6//8uV7zJN
Daiv9MkoNnUI71h7iPBMZ8Kf6dfs1740YW+8Sn01DCGzyrkXcWxz68B/xU/5
z3uWvWwQm/1y3R0z21AvxE7FTS4VOJLF2Emdqp5Kma1278XZ/N7VpE6zy48f
WDcyiBMd5X8nb7SgYQxL4+yOtP/8Xpy0ul2c0ILtRqO9oSGDGG6XUDF2OAe2
jjjXKzm0YdnrX9DfM4BJTIfaVvjPrSf/FW9psduyvmMIzVFr3RuXBjQyMGeV
5UkH5unHvETHomTV39E6hpVnBuYX0zo2Fcbysz+dgTfnLwuavFWDUbcdeXdR
6fAo2mrS9nkHLhWvEU8w7sd7b1pEs8fzYfbLhtCH5V0Y/5fiFLjXi5fMpiV6
Igv/z84v4XjFYq/FMI5ZVux42VGBTyJSdeyDM+BivVM00W2+KwVRtG6jrSU1
8G+6rSJy+6bXrV6U23P5XZxvF3qsYb2VlPvf/Yam/JKr5DzP3otvdeiogN6u
gyfJebr1LlEkP4ZHRKXo/IBVgzkfyc//VR70xGp7yL38Ov6gnb4XCFA4vYrc
y8u26BTSB3MvcPvRfRBsPbbtIn3wWsyf/nX0vdfMpw46uTSAcaJ+oQzP3P7z
/wrfYWzNQuplLDcnaepGCxg7VIeQermau2Yb6e8R+yMc6f4Om9xWdJH+ruTo
EE7qMU7pqBxdjzB56MkzUo//9b3mMTcySB21ljJfpusIXBKFckkdhTfMrCN1
9+Pb57903YFu5uKPpO7+r743V9V5D9E93bPfUmjdg3xgvUx070NHQSjxP+bB
x4tp/wMfBcu1if9ZMzPUQHTV9Rn7NVpXQdzbl53o6lzPv6+zGVVoPVS8uPIH
rYewqZZZjuihdua9HKKflpO6D2n9hCev760h+vl/9V0LHn1yJf1IqihvHd2P
QG9xmDzpR5caePqJDzzt9bSU9oGwgrNuG/GBUpsVr5J+d1wgehfd72AAtBik
3wk0ZP4gfcrkWttPuk+BU+p0OOlTE3vZW0lfKxRco0b3Nch+0OZL+ppvcPRx
0q/1TC+cpfs13Jk+vYn061XMyR+JX631XnKe9qvQuG/3qn/zq0lV7tGkX7N1
Dc0ezWDAyvUmfKRfWz+UUf4TEYu1J1mYZZgobFeYDWApKAUlG3buXaFhmHzU
XJiNdxi6cr87iqt9h+kaO1xyehAruYU01r5sQ5cdAcugLRbO95Y/Nw8cwp37
bJ2n2JpwRZ4J67Vaen5kY/w9coqBKCV7ev/JeuhZ0TdudiYe4tQX39o2NYiT
LW9XToa0wIj+7JEzqnFwOSz6yMO3A9jzxIbna0g7aFlBNrPa3L8TzYW3GBa2
kO+yOB07dYGJgr/KOtpL6e+aK77+ndkp8t7XR1JX0u9F3skH+eS9Pd4peuSc
QW1HR36FtOAypmEZcs65nnNDYdXKo/T3HpPvHt13sh5Vn++dJt/7X88/F877
kGeLvDKFUjd+sZVLZGCeo8v08qi5+yOOPOJT2vUSZRvnJXLPUnhY76N9qMAT
UDM+LU7wlTmzCTQOT6bu+hJcY8xViDyfKdf1WIVEBkQUuk+R53PvWckimTuM
st0LJ4wySqDuNiPi+MVcKFw8JvLjoB26Gzn2H6Kfk+7IfizB3Pw/fxdT4Z5/
+NPvN/2W5g9wqTD9w5+54lm2cwURHnLJH3OkeQgbuQd+HqZ5+GxlqsDb5n7s
tju1Si66AzasHdDY3TT3nlMwPzbhW5YfZgQq1J18yoDVGy392MLqQPDUFD/x
sRaJ1hq0j0UqypeN+NjGO9LXyb43qiGP7Hsx9PrwpHppCjg2Cy0l+Xl3neqg
84OmSYGRJD+trxfop7d24KIz1ZwnV/Zgmvvf7QZd9FzOb8EuUNiLdRWMs06B
zXjxtErN5q4W4Dh4V96Osw67AyyvcF4ZxOQiDaZHC2uBRaHS4tWvNlw6z/vY
qG0PdpQrrGI63AI62RLyf8rqcHF27tf5HUOwZd3zH+FjBXC//LeIwPxGbHE4
Z3nh3hDULdUWNG7Lh0Uqk2KNn9vRUcuidvrpAPDt4M75npAIbPbM/oXlFC64
fPvTxcovqK2tkPl0aeJ/vscumeYj5PnU+dIC+vn4jruynTxfKl50YotdNxbe
dVB1fdqLbFY8DRzN8XD0xPjFZIkWdD10SuYe8xA2eBseFS1MhuKR3L4aen7Z
fuP2PXp+QfbQHn8yvyx+1PJaktalwUWB+2ldQsWVPoJEl26l1P5O5qQw2cKw
Y3JzEcoJhO0VPoCw/LAc6/KcdhQv2WC0/nA/luvLzjJ3lcPZ32u2JD3swHUB
7D0xv/qQRXUL06bWb2DDNHSD3Jfq3o0C9H2B92aJjeS+iu0lMjfR9xUncCbZ
ObAZhmO59Ml9nf/15ji5r7uJnsr0fYFS2IkJU/q++k/rXyX3pRxWYEzfF3yM
f1SxmL4vxcHoGXLOJQ31wfQ5wVZU6hQ5p8rzHuPv5xjIwb5c/mRIDWjxPoiO
M5n7998I0YsrttL5NI0VPEXnE6Y3Bo6SfP7X+5oLl/aNXEPqyNEkip+uIzS9
26T0b3X0X/GY8/7oZNaFbw3itSTqO5BlQ+GbBW6tACJHkwiume/1iMbhVaqo
KcETO/fuZtnRiHfUI/sD7PpxxPLu1YnrjXDzOJ8IwVtF4n/QOLSk7j9HcI1r
sTxElxoVXhNdwp3qvRJEl6J/fq8UEOlHd8OD+4sCO+E0x72HfEoxoBoqlEnw
BNn7l2kcobD5JsE3zd9iQu7lpL7PFfpesPds5D/3cjWjXlh5sh+/6Oda3zjR
hE0qeielH9VBjU+7ulbWEAYnPFNY2VSKfesYDXu/1oJ7xu+jJH5d2CgzHQ/b
xP6qkfipmO/SJD79ZronR1MpmK7RzSTxzybMDB8+ZuDgY8ErFrUx8PaDQ+U9
9ToYez+08IP4AMb/fDu606AE5ZQ2K4lPtoH5N653KizdeOvZkqwGW7pPrZf/
9vdzBwwOX+dfvaEUBZ4f+ssYY+DfwjijzSIVIC/sxdx0+DtO2LVdic8dxC8H
QnOCwmpB6JlAJxcdv2XXCebhMQYs02WVIfFMn9lZSTwbm+ZlOh4EWW0LSHzx
wdT4e/ebUDhbvWPz7144zGLlpKzTCq8cijnEbLNwwW6Ru+abKIzITxMoLSsA
6UOKNb5TX/GCriQXm9wwXvy91PC+UDm0Xdm1msSvvz+gQ8cDNC0QJvE3yi+V
k/h7xsyr6XjI2S2kS+L/qn+DRTrluL7h8sp7fAxIlXb71dFQDa8j3wet0I1H
yRTxKb5ACrtvlvVKhSG8HR04qL8nHYP/HP+JahS+0WFZk26bCxsz3kWR+G/N
ZZN0POwdY58k8SMd6n/16HiT1qkxOh7Wa68dSqPjty7c+khgbTbanr9w7RYH
BXoHBm5Ue32FZc5fLLwbP6PpJxN7mwYKpw1/8eQaxYFAwbZOTfdoXHSh37o1
l8LUjJ1RimLJMLBXSIfE8z4JJfEgzNm0jMTzUFUVJP7eTVUbOh6ylqp6kPh9
v2rqIxPj8ISXbWFvLAWTNVs6iqZSgXVZZYXzrff4xXU8ufwHhdEpO9/U1IeC
ur2zX8+eTxh2JclosJ/CeOaRzg9nI8A140sdiR/27CfxcP79DS8Sb3M0yJfE
M0RTSDw49ER0kPgypaH9YVaheNuhN1Ggh4LGX15rq4IjIXQLV5TAfQ9cuKSm
qHiKwt2793xWWPcOXsdrnuEv9UPmu+kJOr8oPMQTv+AS1wdImJfwhcQr6NSR
eGh+c/UTiX9jonuFxIt9TCTxICZZvITEe+5dwyLF+R4Dv++dvTZBQdxyinV8
0QeYiV7i5GfnhFt+HhC8MUMh310Nl9q+t3DmkthI5xU37Due1601TeFzwb/O
tk5uILrojxuJB/b9JB5EXF56kXgFg7JxEq/2IofEw1uzZA8Sv9v552Vs9MTv
BzwGev9QoOl9Ua001RWebdf0STGywxX6Dm1VfynM8dfZnfnKDuwM6kLnHXXC
OA5r5ks0npQp7ZRdbg/bd2wLJvEx51+SePggJn2ExHO894wh8Zdkn5B4ONoH
fiTesP38txyTt1iwb2TvKH3O6nKHzZSYHTxhyYvnEHLCrEPbhL/Szx/b0znw
/a0FuHBbZ8cM5+KagxTzZ5rPz30eNxuzp8GF09tfrLQqxhOcYkfkl1N4/VmV
lvSZNND+Gah5Q64cRxxv6N5JGUb/Nk2r+sk0cLPpti+l/Q/HXqlVp54yUJ5z
1H457X+e2xxnsvHKxyWBT5r4T1Jo1nx/+9BoOlgW5OrcPfINkzdeGlBtGEZl
1oiO3sYM8Lc+yogRrkRvC56zAbrDOJL+sjF9nO6/JTq/OOK+4grLPaM8ghTu
6NrcsGZZJuyLOF29tbEcO63dJBlvh1FB4EY8y1gm5LhNFk8ZV6PkmIXp1b8M
5DnH98bvaxZY136SXLm1CGd/hReWLqOw1sn/zQe7TEh6mmW13qQS9wTtZ+k4
P4zrl0Dosd3ZEKVX3bDZuhYvbD3Oc1GBgTEcfz6yrc6Fkws2sJG/r3A7PPI1
SmIYu/5e8iB/X8EVp2JFfNRYuUI67aNwmesOni+0j/pTPcm773Yr6qGR8h3u
QXx5JOLzY60iGHnIKUh8S2zygDLtWyDMlG898S0bjxdvmP8yGB9/HBh0S2Jg
y6F9x/Xsa8FX7NDvTbQf+6y+8CXtx7BEYN0i4se0N4WvIL8b/p54v1NVkYHp
Mwurye+Gz+X5/uYtbUIDz1KfiaxBXDawySBz2zc42lXfS/6OxWS14ztf+nsz
D99wJn/HMm9wJ2/riu94UvEku0vbELpHP7cnv28+ffTm5aRqEzopTfa+MxtA
F7bZi8lsNSAiECZyWqQGOzPPnjaRHcIyQwXRJ7+roGOSV5b8PUxhmgJv9QH6
3rcEKJC/h2m8Qb0lv5P2WT5bL+UzjOX+j3XI76R7nrd84dldgeVXWXQz7Bm4
mt/xVqp3xdy/f/k46pN7nHorn0ffI2idqo4j92jE1OhM7vFCxcxi+h7hliZv
CrlHs0rHCHKP8j8yBel7hIEuwcfkHiVY2H8QXkXtSyO8ApVG1e+EV4p+TimE
V8Vj+/fSvAL1Jjc3wiurpYFZhFcnV7mZ0byC9/ICtoRX0qaJ//B80xZTwnOI
2L9sB+H5wXyzXYTnjFCFYZrnYG1wJIHwvP+T3hTh+eNM6hTNc9DwmvhBeJ4x
+eQzqcewUw4sdD3CSmo0mtTjuVEOa1KPB9XSSD3CwxpdRVKP+65euEXq0fKE
LqlHeBXa8ZDUo4v8gVM6KsO4N/1hpNTiIhxfFeH6dFEZyEY+ST14fBgH6o7K
dI1l4wyL5kI/y0rI7ciTIfFGT1ey0/HwdEwmkMR/Ux6NJvEv5/+42j2WDXUp
r2d86fh9m87383sO4IC2TnFm0XccaP6g0C7YBKGhn6IJPiu5Tji76Dt8PoDr
CD50U6mXg2UIAxu8P5pLZEHNwN7c5R+awa/f9cTW1l78UW1vuTPkO+1D1kUk
KHfAuTM9nltS2lFO92dIVHsnKv1KiIlLbYdrnZqdZVfLUeRLHpvERQZ+u23X
FVxUBTePquYS/Mp2w7U0DpfZJzMI7ld7Mqup+ztmvT3ImLdqEJzlohQstzWA
/ojhGLDn4BYNfy6BqWEUtz4mLNpXCNe/5VUSPOa4zFoaB68TNlMiNO4woXD9
j9JXjAsTKTtxbRjMD/CrfdhcDuZnR/KnHBPwkJyC6yd/ClO23tDk35AJV8+x
RBLcOGeZG43D0nANBYLzpCYuG92aijyn7Q20zSjY+E7X551bNqxcyyr4ICcM
WaoiNv9ppLCgrtEv2DEW9jUu4iX4Ae4sgkOVer8nwV/OtGukrY7CS4YHZlir
KSgy2hC/lyUeXuaEmS9e/gEfiR1QlPtJYdaxa/nJOsHw+Ny2JwTfe3wvwaF2
sV8BwT9tyLucGhSI3jF+uvp0H/8o66J8rDEYNE6GaTvM98JxY9N3Nr/pfnRb
VLhp0AdMn64wIPi5TyYEB+bb58UJfn5AMX9Ngy9udsiYV0P35Rt39TTPnfOB
qO5m7UPmLqhoV6ftSvfZQlOLko4wJ+hay6ZPcJ2ttQQHXi+xCoJrShyf3V/u
hvlWT1XFaHz4juLMUe838A0C2LTnO+JDhb83C+n+NcNiq+3M9AyGv2bzEnzF
mhmCg9llTSOCG01fWfXGzxmHePWC7tN4V+e7Jp1XNvBzx7lh96fDGHJTyn9w
vAT1l/TxBxsVwrMmzvMi9o/g1y1NZW7ad0W0zzORepUETdzfzdN2VODNELHT
+e7DaMX6SKjjVgYczkjJnz1YhRrZp/iM9w+jBv/Rz/Y1meB7uTEhrPo73pZh
Li6PZ+DmJil30epsuNPorGTLN4CO2+PS5n9uw0JF1kN/F5TDC97cncnuDNxW
f1K6k/krWBVZyZru+g52F/Wv7omtwFdO/f5XnYdRcsedLRvaU+D0/dsJ4ody
UUci+/7UHQofp/Z9ypNMhaUjHleuGBVg3KmN558fp/DKPg/LyYhUSD230KhO
UQncti/RNsug0LSx9sM34UyQenP4g1ZiHv5Q0GUqvUKhXUy7a97vNPjs1Fe5
xrIQ/SK5JPtpv13YukX+WX06eDpvEDLzKEALPoMpZSkK93yVeX9oJgPeD9Ww
2ywvQZUVSmbm48PI4ecW0b8tE17rHw6587MQge9r6w822k9+mrWU/JgJF+06
5cOOl6FZHL+yQOIwHhMaUeEKyoJv05RvxONvaPV5K+dZGp+/5a2XLJUNPPXF
XH9MqnDkb8bo3oXDGMh1sjlFPQ8+1Q62qbYPYumN+hGDP4340yOyUfxVCZR9
bnAlzzni0kKeA5xnX7uS58R8vyjZHVaOB7muDj5xGIaV/FLq4a+zwT/1yxty
Thtzj3b6nPDkCOiTc2oGSWiWOZdiruZkwve6YVDVfHR2YUcm8D3mX0fyUHp7
2286D8B0scWF5GH+n54laTFFqPlBU36E1udLEZ5HXrEhfIi+6kjybPm0h5nO
M4g2X9Ijef4qnNWD2l9xRvum8uguCg6XLQtXSUmDN7LzL6n7DiGr0umrtrE1
4KlXzuJhVQFXRdotGt0YuEOCerLsejkw/Ardo7kq4RHbUEUnXxl67rwxlVA3
jPO8v8j4fE6FosnB6LSng/ggp+FjvkQbhtlJLffmigYhOd+ZncVD6Ll/1/bI
t43oe0/AsNaWxpvtsk27GTh/3bJ9Heo1KMfauVC4NxoGNm5eP5A1jLvylL71
s1fgoZeCgkriMbBcca+J6C3ar6tqhQ3N5uPqNVKHG27EQApX7UzTVwqVphnh
C8QS0eaYQl2STQwsSK1RfzBAYcsToUT/NEH83NjXz+MYA7ZPQ/6JP6s7k0bH
w37BA//EizMp/PP8h+7DofTz4YNu717y/N3Kb1aQ84g9chEdYK8AK9649eQ8
vTd5s8j5E2S/SNPnh/k3WP45v9iqS+wS9PcqSr9ri3jbCGlXbc3J94YLu4eS
/KzJEo+h8wMHzvQtIPmxOiD8uGzNAL6oi7zIpNUB4xkuxrc9omCmgz05JHQQ
X+Rp9z7va8XPJ1lkrplGQd3IvCD9riH8I3r9V8iORhTVLezWKIkCsbzNcdum
GLio82O42YIa1D6qeV91LAp2RXMqvyihfc8dru9+NeXY75OYxbE8GoQDr7p4
09/7u3pbzMCuAjwdebqXsT4ajqW6RprnUXhJaF6M3slkLPP+mLZDKBq2z9cV
SqXnMeHxz1/fX3BAZ+njH07Q+XzZkLC0roLCPLU9N5qqYyGLsfgXh20MfJUY
XK/3hsKMFfN78+RzQE5W/4IUfzS8WvjzvjgLhZUXI6pqZ0rh8LmJJWkc0XD1
xYsC9dPDKIEPTAQPV8M5kH2tMhsFzEN+a72Agfb10Vs++teD1si+Zv6GKFDI
79d5t2gIhafN4is/toA4FbJqgVMUWNdwLT3kN4BHowqi6z+1g4LKlvN3JaLA
t17nn/MH3ZUbfXfBAfiOhwWT88/l9yxvXXK1pfXrkMJeS8osBTjx/cWQJzHw
wVc2ladyAGNkHYuDrrSjiPUA1VobBVIcOQzrrUNYLKB28CZLC7ImvubhvhgN
PGLW31xVGVjjz1IWsrgejdalO6kkR0ORSdr5FNVhFL3l9uBEcBXazpezzFkR
A02Le/YcXUdhs8uVgs2+JeiV3fOX51wM/A3b/ko4gEKGV1Gy5qUsTOmtLNE3
iYG+TU4OBN9wak0JjcOuApN/8E16FevJc2xaf70T9i0B1fypYfKcysM7PaKU
hnFmyeJ5ZvlVUBW63yx3WQxUN4UXkXNqnuVrp88JDGu91+ScTBKCk+S7XE4u
5KK/C+I2rBci3xVZZ/hPHnQu6ZE8QFZj/wDJw5tvO1/KBw9hXHCWr/z2Jtwu
JyrUnBwFC/W/Ko4UM3DIdpO67GgNjkSKdF8ajoIncewiJpHDuOnZ7j88nyrw
9k/+LYeWRsMhyVH9HLpPSG1sStgW9hXrb9tnKK6Lhu9aFfPU0yh8ZMBq0j6T
ijPPJs8/3EzzlnHsW4gvhZEGy0/7DGdBed1jJvlN0SClur1LeiOFuPAwx5Bx
CehOsGl30HU3lvpU1ExvGCvuHXlyXbkKjnytT51YGA03T843ZHvAwF92+en5
AXUg9CfarqE9CvbxvVs+fn4IP9gnG/u4NkNAf94uxw9R8L3rSQip0y62bfy2
fa3Asm/rcVKnTMFPN59TGESmrZwp9dZtEL6aRSHvRhTcY2HnJXzmSGlbR/MZ
jXZKtRI+xzNv0SDvFdq1eXFBQB0mmuy0Iu+VUq5HUhfWaz99pOsC04Nm7Uld
3G9QFiDnz2kV/0SfHw2mtJLI+U8ce3qP1Ne25ULTdH2h0YcAZlJffy9eHiJ5
eP2359mgcQlytkRqkTzElr0QIXU6s+x0fK58DvpUOV4ldbqzY6iY5POSp8pL
Op9oIrJ/MclnXESVG9GNEH6L27RugJGSeD/RjdtfRW+T+5K+sF9HPOwrqLOn
J5P7upHScIHoz3XuX+L+NeWgX/AzheiPg+eNHeTev1itzKLvHd7GZm4n976n
KT6N6Jj/7hxLWscA9h00JTr2+vml+4Q/klE7ymVGa0Did9QU4c9a3eTXRA9d
XN4ohO5oBMtL3+uIHkoXnvEhPPzd3qpA8xDWJwvsIDwsPRf6eU/BEPbVlA/2
hjWigfcai8qsKFhi/Jx5UycDT7E2xJ19VIO5b1gOnRqJggsLrlpr0HPKnkzh
gi7a3x9O3W/0dn40bFx1domDCgNPOAtOKvPWA248pTvaHAUdnRfnZYoOoeQW
Vx8RnhYodJNqu+MVBWfD+TiJLjHq3n+gdQkFOI0vEF1auOJ1gM30AHboPdAz
5GjHiU1NV8+ei4JWlu9GRN9C5FU8aX3DmiuK3ETf8jzm8RMeOodtEaN5iFoh
otKEh986jnCR9+4JHz1Pvxd9G770kvd2lQZwk3POrFoVRZ8TKe/VJuSckwsW
WZLvYv5S005/F4YxfTMg3xUoNz7DT+dhgmN3H50HEAhNlSB5ULuf/U/e7AO1
SN4gHIT/ydumvBn1DdaDyNl15tzQvjYYkYjXztSLgpUa+dSiDgpFncS7HhwK
xoSJWb33L2PglwmffyHtd5+NjaXEyUbjVztdYUmRaBiJTjzH20ah3ru+xQdl
v+CDsQVVb2ncLu5UAskPk7HOGTo/sKYvQ4PkZ81vji2kvgSEy6Po+kKpalUl
Ul/L+jsdyHlMisUW0OfB8kk5G3Ke712p/ge+DeCmxEPc/SrtELhcvmItRMGw
hHwIwdffkl9C43hTU6iW4P9Xvxf8D/8f/j/8f/j/8P/h/8P/h///jQ8V8jwg
+4Sao1uvMWl14I9iYwOyT0hdWPniQ3AbHn95/94YzyA2B740/uqfCqMZk80b
Llei+3dnMw+DYXTfUrVtR0g6yPH0XLramopCtkvk77yj5+Dm+Ssnj6eCs/3M
39qCNPx+U71I04dCiyyt+e75qdCTKggX7WIxr/xZnl8ShYtrI1y2W6bC+Wv3
dk7wx2LpQ1kbf3puu8d8J7jYKwXujRvw1vqEY5eetN/ibAq7bqWrJE2nAlve
0mAD1c+otMZQbaqYwjzLT6+sfZOhaHVkvp/oO+RZ/0K8Po/CHt8VAZdU0kGV
rUlfZ74P9mYKnlKvo1DrisCN6H1JMMQafvlllzsWrJfkVvhK4a3Q6pHqg+kQ
FGO9Jlz7LTq2v9AvaKSwNP5I1g3HRIh2Gn7dutYRmS6alc+WUth9be1eh/lp
YBLusmlQ1AGnPDvVl7dS+LPuJatYZALYXDrwOEbBCu0nOAwVv1M4IfrpZeeC
FDD/XG3WxWaDdtcrxDRo/zu0Ycr29/t4uLjswYGt/CZoYOrDrU7731HneNl8
0yRwHpNZ/rXRBBV31K7g7qbQ69SbMI6oOGgcWR2/Ruw5vhz8s+dJBYVXuCxH
uNenwoz1JvOIa7fQ6uWJ+D10vE+Qyr3T4XGwSKOBZbNMBJpyPz1gwUWhDjf3
dKdRKUy2hVCfXnbg3eWNm0aL+zFto1xGXUIGfFm05+YP62pkOn6/6OySYRTO
V71sdz8T7Mb4gqP3ZeDY15jF81wp/KS0ceEThTQYjspeXXI0Fl2Wnywcz6DQ
NUj88b6SZPDk+bSx1CAUZW1itHoqKRz++If5gX8i3PLP8PPR90Sq8mPfkk4K
/8Z5mdsHxAGL2eTtMRtn5Kj74WDaQ/PH2il3KCEWAiWkNLdcs8fXrNtiPvRR
eF9nnhn/ilhw/rKWz/CoDUaNSWrsGqDwcemRrY7PY8AsvkzpzytTHN8l8Sh3
kMImnwER9YFoGBCLYeLP0kK2mT2tdQwK2S6XHpVdFA1lidGtFgYXwS3mh0vG
DwqzvTl9lPZHwp4ix3iPdgburpF4VWNcgxUy1TaV49HwbqX87ZHMLlysKXd9
ye9elJO4HV8pkgXiRoNnzp2oxanh+t9e9xk4xjty/JleNow4NimX8GViT81o
ULY9PTcPfOcdHU8DVtnmT83Nsej2TIWzAinM7zs9Y8meDO0fc1JHbUPR8sah
b5Hk/y/9vsojejAekgey3EMcPJAh+TIluJ/CCGHVzgdj0VDXp/nH28EJ88wD
5UaHKFzo7NGpORoF4zFu2QL+L5Dz86r8N8MUCh5YaP9cPwo4E1dk51pbI9+p
rWJnKQovt6tI8dHz5pIHFxpLjSzwwaTzsx10HnYtveir4BkJO3+snc/81Qwn
/nyIe/uTwrPU9JDQui8wwLlzc+2MOYbl+WYv+EXh8puyWsNJweBaVSHknjCM
nPeD7s1cq8A6Rmh704MY0BL5FXjesBcvbLBNSz7UjVXG46Zcqjkgukpm8WR4
I2YMc4RevjqEmcyefM+c84B79/TR2UfZaHXXdM0qXfpewlsqhi8gLLKZZL08
LwEjDIrCtyRTmHswfN/mG8nArXao8DqE0ed5+Km2nsIMkaM9u13jIOHtXVXm
xR7ICrlBjiMU/tiR9v4UfzhIb1/GwX34Nf5JFwjkm6Bw5+xTYZepYMirVuJl
PvoUOZUL7JMnKbwqZMdryRwEkg/CVwh8eIBJ+W7H2X5TKDQz7Wh27iPEVewt
VwvQRO7Hee6Hadzl/OXmK5s/ggW7mdHxr1JQIrN/5yydn03xln5i7z7B1rV1
VTnHLGE+5/ua1zUUcopEnGYJToYLp53Ct1+jsMRA+fnvkAJcoePs4NMYAx1q
CuvkmwYwoiE37fGjNvTvjr7VcCEfelhlFR2UO3B1hu+DR4f6sVZhz4LbMiVQ
xbS7PvxKMUYlbKwWyBvG2Ljk5fN58qHYwN07KzkT765vlJjUpnVPMlh0qCEL
rt5fvWvzmXg0s068aRZF4Z+/69cUPk2Dp7Hmu99IfsT9TTnW4rSeyEeI63Eo
xMA31XWHzu/1RufePsWXNH+ObzlndSr8C9j1HQg3veWM3wMOXEkcp/DEeq40
/Y0hYPXl/oMnx5/jr9Ufnz+Yop9/UvyJKH6EqEgew3XSxnj20PcnGX8otN65
PVpX5h0wtps+OnaAFV0ut1aumaFQLWHVfumjPuDUd7pqrcR9KI28dq6cxvHo
+3IhMQ/Iunv8FpVLIdwcTKxYkIS3WXhSX6+LBfbL1j9zBhho4rhtw9mJSlx8
lGm3/vxCWFHMNR5c0IfLay4rHW5pR30uDbZU1ipQLFu6xys9G70Y8iHrNlLo
n8bTLbeyANStwjpuR0ahukdSIEsOhUFGm0qm5VKgWStoY1brJ6zIjNGhaP3n
mR8fpG0bCwUnGo980AjArLLdJYZ0flYuvFN8zDocJA4m6Vlou2GQWsn+TzQf
9NIuqnebB4K50NCawqJXmD5raNlL52Gmplh+/jw/KBVaWcNXbYP9sSd2L/9L
oe5jC/Oj0q6gKPZD7/ejh5h2/M8inlkKV2u9XH34lwNsK/jC95PWR/N4ed4t
2Tuxd7Gi4r6dsaD17M1M8lkKl2x7lqTq64yNWm/uL4wqAh8frtAeRgc+Tz0S
uOmFE/4qt876/9h782guv+jvm9IgTRQiJEIZK1IoOypS0kSlSBIpRTKkzEMl
cxkjmeeSeeaY52Se53n+FEIi9znf9f3rWavf83yfte617j/uf/e61rmus8/e
7/16X1f5xFeNgeCW/nsknzQSJm04n2Ch1ppJ8jlBa91H8rlFStAd5xPewhgv
ySdb4p510TifA8WDgPMJbT+vsZJ8DswnHib5NNXLI/kE68X6HpLPBEptJcnn
DP+9CJxPKH1vF0XyqS2lTkXyudFgix7OJ7Az8jmRfJav2ShC8ilJr0DyCVtT
abJJPnt745+QfC5sryT5hGTlfVokn7yW2Rwkn8mXDUg+4VdD0S2ST3mNsz0k
n+6Dp0g+oYi13IHk8+KAlO0/+WRYIvkEbz2N/SSfB/adiSX9uDyhkI77EeaC
tr0k/djYLbSe9OOlq929uB+BJ7TgCunHDuGuR6Qf75xg0sb9CAxfgtlIP5Y8
ZdIk/dh1eKIb9yOoTHcnUuF+3LeT057042s+SzHcj8C8J46e9GNGYs8h0o8a
lDLSj+DrKMpI+nHHZrGDpB+t1jSQfoTCNUv3ST9+/jB2hPSjf9MP0o8wFHvG
jPTj16Kpf/rxQ94J0o9As4U3k/Sj1e/s56QfGzVCSD9CYUmOLelHkZEhfdKP
asfrSD+Clvm2TNKPVcy1H2VwP66wtZN+hAr211dIP/6oOz5P+vFq/jXSj9Ce
GEAh/ei3bTcL0f+YluMNWP9B3OdkG9H/lAc/PYn+F9kK1mL9h6lJowdE/0t2
jQ8sYP3XaLichPUflpojNhD9l48dkyD6r13CxIL1H7hUXRHR/+mel7RE/x99
WSH6D8tHywWI/tvVt0cS/XeQaSX6DyURStVE/2ODZM8T/ffRbST6D/yHLngS
/U+z5lpD9P90hCDRf6guX2Ij+i87epyJ6H+PWTXRf4CXfExE/w+Iqm8m+j9X
60P0H36fu+pC9F8kmrGR6H9YUT7Rf9jZJjpE9N9Zj8mR6D91AjfRf7B8aJRL
9N/nxaGhQqz/e6rHWrD+wxNDNLAR6z9zlmAK4Q1GKk9PzBvAV8T5D29sZJp/
THjjwQGDa5g3wIJvKpvwBk1MsyThjfebxf9g3gBqTTEpwhvCd/zECG/8Cf0V
hXkDWge2D89g3hBJp/EmvPEhvJbwBvxovjZMeOP96dFQwhviqy6EN+DZOh1b
whvDLh9DCG+wrr4gvAFr1xwfI7xx1bNvXQDmDYZtzoQ3IMBkcprwxpmaD02E
N3Sez5dg3oBtg/I+hDfomRuaCG+sZ9lBeAMsaZ7IEt4ooru7SHhDqdue8AZc
itsfS3jjdJTXRsIbByo/EN6AJZr4WcIbE0I20oQ3Dj11JrwB65wOWhHeyO1e
+kk49sUfGg7MseAdyFJDOPbB0cFbhGOnmUarMMeC4W1VRcKxk2pZfoRjv97a
tB5zLARU7FyywhzLlxPJTTg2S36uHHMseE+nuRKOdc1TYCEcq/e8lHAsvFY+
sZZw7K5ooQDCsUOm/3AsHJua+odj7VzTdQnH5myYIBwLXQV1pYRjU4xVHxGO
tVlhIxwL59RdbQjHDm14y/MPx9pxEY4FXvFoUcKxIt+TbxKO1Tm2h3AsfDO5
fYhwLEOQ/XdOzLESj/cSjoW92g8vEI4dEXyxQji2xrGXcCxMdvvFEY6tOuzx
nPi7kWifF9jfQcSRbjXi76gK5xuIv9OPPm+B/R3Y59/dQ/zdm/Nje1qxj2M6
almBfRxsL5jYQ3ycXeBOPuLXnNIeEL8Gwhto//Fr+jT12cSXWX1iJr4MUteg
UOLLhtgH3In/GqZfksP+C+yPdz0m/kvVRvYfn/XeP5L4LJCR7UsjPks6YJGb
+KljW1qIn4IqucltxE+p7EgwJ77Jzjqd+CYIU7TyIL7J8x2FUob90cUvX4k/
gradN74Qf5RKw3uN+CAxJ2Hig+CD9ukXxAfRMldKn+XsRnnscoHntk3Cmt4T
PHXLGSDdJ+Ge4VyHZl0OGAn4ToP62UT1hy1Z0Kwm4DPJX4IOr86VCN+hQCR7
9BpZ0Wz4GiCiS/xvo5KHMva/cEidkZ3435bBBUnic52flRGfC+p9enbE5+75
mMdD/OzeODbiZ0F1sVCL+Fn3mdtdxLc23uoUwr4VOpO4K4lv/d1ADcSfBj1K
Jf4UZjg0vxF/Smea+JD4UK3jPcSHgtDXjWzEh5pr8j0gflNflJ74TXjyLNmZ
+M29URIMxFfGelsQXwkSjMOqxFfKZcRUEv+onJlC/CPoxbOv34X9Y2eQrgOd
zwTykpXrNmLsRRdORSh5ByXAKrWOomtNNjpG2ZJ/IoSCMs4moju7smE9FVfg
p1PJ6FiFud2ebArKTuMZZZ3NAuNHI81d8AkF2Rpv2IQ5IqSGqczcJhssfVQF
6zMD0NqlV92ZmHs3rn6WkEzLAM01+3hNM73QJr7LRa+x34msaqx/15cBn+Z8
TyypuCLe8sACPezfd4Wd+uDclQG1PV9Zgnps0fJAqsV+7NM9HpxV2cCbAdmZ
3YdvrX+KipvKHHK6MZca393QSJMO7OmyV64OPkGH1C2fsXZRkNu1RuOPXunw
4ug3fY/kSVT5mlnpxkIHElNlawy4kQh2lrleDMM5qOOlgJZ7AAXZ2/s/mfHP
Bv8jO3YLrE9Gck7zzHrY52a5t9MocWcBtRzPcW7RWMTOGX1B8SvmurjLfpkn
MmEuv+68awn2uQfq+Kmw33/gv+3nqz8psI7TzvoN7zvEO5fFRzdIQY6CHQ7P
wlJAdfPRVxkfnRDNdrqDczi+U+nrLk2HFHj0e7qWO8kOPdxfmb+IOZy6Ic0l
QSYF2p05r1z5aYoqalMO5oxQ0FXrtm/rwpJBgbbhks8tLXTGtSNhF/aJs7Gc
rxBHMhj+yVYKLJhCwRuO6mSwtaAn93Ves08mgpg/7+Brhzx0onjD4eeeFJQY
vqsnQyAHvortHQ2RT0alN/pfH8mnoFsa5uJPtDNhza/ztNHaMSjAt6SisoGC
9HMEvaqupsOxx7xNosG+KIHXT2wJc+hFoGc9A3jun2U4lFDqge4IdnY+xX48
lDNm+/mQRPBKXUr+cNMR+TA8/nER+9aqsgsNz54nAoT0av66aIf1yuixD45H
ygRAmWkiLGckKElctkD5uccHTbF/zw+81FLCkQg6xRsEWsAI/X65T9Ef83YX
iycTNU8C6H3mLR1/JYP43rH778S+1f767SPnmrBPcf/0WDtoGk1OvSuq+1OH
AneIbSrVTYKna50TTX3zEZ2w21fkQEH+rwsZ2GVzQXek5Ewbawrqt/w+xY7z
8LJLfnZ3WQa4PjJ/fsIrBlF/XNJ+h+uzttFfvMMrFaLXn9hfOe6DTichuQXs
oy+p0NWf/fYJgo+3qNj6uyHnxre5dnMUpJPpmXCeOhb46Y1d19s6IEH/Hceb
sG9qKGSk+74UDfH0v7sGP5oj/stldB44bpVjdXFtQAxEpduVJbkZocMB+x8u
zFJQ3GxcM09oHFQIXZAxVnuChB37eK5hn/sxiqfqjms8sN2yWSxjNELg5bAu
r5eCei91putdTINnZmw/ryjiunSpNF4zW46u9Wh8S61OgoeFC93UDcWISzr4
3vpTFLTfNe/FbEoBVK6MWm1YTUe7bxzNd/5EQbrTx7PFDLLh4m5mg4Oen1Bd
7rRSDu7ruKdiGfKXU2FEbS7nZE8IcthZuzsI12fGnw1e7/0S4dfUWrcr3j7I
rnTfEh0+F/34ptpHUXEQUNl2/b6yM9oPX3VtsT+ivtiSfFkhEi5dtNX1/2iJ
zmm4fzuP/bXpV06ngNxQsPr14eUG2vuou+6gnRH2TdomPlXFq8HQIXXv2vn3
MmD++bviEr5e+/vFx7qTIfD84u/aI+ZP4GG4g3UYzluIFJe6waZP0O5Jcyos
h4LaXHd7no/MQlsFjxW4bcVz2XLdNxm5YWRjbXm4XmEIHbEuSG6SrwM2LqrQ
Pt805Jr8o+1IFAVtiz6a/nZTHpzI3df6EMWjTUcajgZWYh14Iy1YWp0Beqv8
OabvwpDIaGrI02EKKtweFvH7UyLo7eS6Ejruh9j3zRyXw8/D2ev0vTQmBgre
l+0/W+6GbqI7bvLYL6fmdEuvngyDC9/NZ7YM26CgmNx7vMv4+h8t+wykPoJu
kf75eU5tdFQ1Ru419sX0K+t7rq99D5zTjSfHbR/A3hfU73dh/0jZe0xSqNUb
vF0barRxf2bFD/b9yHyN5NMNy8cOJoNE6rXsZycoSOh0Sv3u9UnoJNtbWymJ
SpCNytiVdSoPBfecSzpwnYKMqjm3yM4XQ/bl3Yx0WO8eCWhzy+xLhScK1dQy
nMkQEm9HGb8zjXqE89m/wjc4+tudX1SlAhZ7XA4XK06glsCftCNM7bA38W6K
YXMjsDwskGZ/mYQ0wllDBNKxT1ldUi72zgGdVUr2iflYpHxbZOkO5tKKnIM1
Fe9ToZv9nWe/dhh69YKlxAFzUc6p0HXbnONhQjRql6oeBY0EHozqUy+F7sb8
Q+GdSWA29OtHSMYgKindx7myfQRcRfpeHg3/BlxCl7bYshQirRLhR/3CmKPo
r7PMXy6F8uFl3S2NEejVgxNbvmEO+WDcuGrQkwxrfQdmZh4EIy0uB/pbmNMm
pCa/iiQkwCnPKKP8Tl+knqGzXwfz6iOf4WfXF2NB4Gi2e1ykB1ov6+pGi31E
ROq9usNL4fDxZHZqL80rZEED6Z+xz+r6aWD6XjMIGE02q99QMkdj+caHWrCf
Kpa4Jqpi7QMTaswx7RsNUdnYk0jyOxTOhxJiHga4gUG22LVj1dPIl91z4m5+
LdgUMt7Tsk4CR8feN0M0FWiG55eo29I0dOmeWVy7sxhmTB5vdX6O0Df55s0s
L7C/C3NJGGjOh0Mqj/6wBKegpLX2I40pFAjdlu7cVZYNQTWN+n8+v0fhM8ID
KZjb2Q0XrqZ9+Ax+YzPJEoXv0PNnVINb5zAH9m9xLfwTA36ctXYJGU7Imk2f
lRPz+WDNYHl2dySE+gzkny61RcFpS+WA/eb2l9WyWy6Ew/zX8xLn6YzQsVux
VT7YNznnZsStNQ6Fx1vVDU6HiyC2TVe50RLh/F9ToiqhMC+cWqNlYgPtB8s+
MuE8Bw8JJBg6fYYfJWddA5anULuEa8NkXxNo+uWoR9MmAe+CaEHd8VakdFkw
Yb/UFPgWtvg831wEjR/od0dRF6Jaj+LTAYYUaErOvaqyBsGhb31H1IpS0eca
M48RzG/MfDKMHnGZ0B9t/2P34TgUSVcdQIV95bGjXd07J1JAKMX5FnWkL6q8
bhFxD9fDgLRI6OvARHipIvwoXN0DJTj94diO85bk/um4Vc8XaN9msVqp8Qp5
iNnbG+Dnt1oeuao7/glo7B4zUm20Qtx5fJv3YZ++28pG5CtjLEylvV00FjNC
3IdkNN1xPhmWRvfcY4sCV3eBUbY/mqj4jv26RVxXDFu7QvKEIiDBvM3g+c87
kNJwy2L9LAVuijWsbqn4BJ97fljt/zWJ2p36T47XtsP0GofvOS8SgfKAJXLc
uwkxBbxs2F43BR8GGMtOHC6A65I2HTUzCP25n6mo4kSBmpKVpDLOXLjh8Zx+
U1syuh4pP+yN/dEYc9ir888yoVCej4P7bQziUM1xasV+VpTOQlxHPA280tOG
OW/6IQtuhdZq7I9O5qx2limnwIjdTuUF+bdo1tu5nBf7IJ6YJXpO2mTQUfqh
1BHkiITetg8z477evW9NsCJNEphkp1VdNbZFDYozHDuw33E862z/+2QiXHbg
9vwcb4b4dgcPBmG/Kew1HdLimwA0V3UXO3SNML/qJq/Dfj9OMidtsS0eTOz2
9e9MNEFVT0IV1mG/X35j/N5VjhgI6+SNNO+eQIvzuZ0ZAj3wwirjcH819q0H
17U/F2xANaYXfm5QmIaTTwKbS3vyIDRy89Kz3XlofaeXerMnBeRiZgV57HJA
u/u6/fvbyehTCIuuUC4FRAo2nc6WzYInH6+G8gfEINc2qfoozNvrmBs7lFbS
wTZYda9frD/KVx3f/hbXFZ/mD4ea9nTQ0xTWUSh5h55tPjLi0k0B+gOhv+lD
0mCEv1spaeQNKn16P34vzqelpf9+QclUoO7t51APskWPDkSdG8N+01vf4ciG
Ycx76/YcDjB6hphS5wJVsX+fCvcOe7uQBJvSvh13KHyA6H+gR3dw3bLZfMlm
fJcEgq9d6Gpk6tCLkFLeiMBpEDbuSPFZyAbpPYr+ga05iL9I2sjJnwIlJZ9j
989i/+jzXfGjTjJqY2lb5M7Cz1NR2TzMnQ3GHw4+cMyKRQ/fJ/5krsS+I9a5
snNXFhxx72JnCwhCu53qZmvK8H6/WlTR9uTAA70cB2kvb9ThOpClgn2NzhK1
9MmxbFDw4GH3nXZCFuXZ1pbY1zgq/ORrasiE9rZPcYqvbJBeG18fbxcFDMBN
Ut46He7wurd0zpshKVPGBZ4+CjyTa6q8si8NTt05mvd5mx0KyvN5uYR9UOAz
E88PYhlwZ1+RxF3O98i5cqVIGPuakIzb+VEHiuD+TPNZvuNmyOGn2oDVNwra
E5Fz9RX2vwlWto4kzrG1sh/H4UW5lyWJ5w/uvUfWaTwQU4jXAffj4f1knb99
h53ZqZ8uy1SH6BqpF2rDptH6t/QfWmayYXJTQ83mX/XoVYOGidjlaVSpWrn7
U3seaCa4Fcd9kge0SzJTb4CClp1X1supp8Ll9NRn3l3XIXSF+a7jNAWdA4OA
6ykJYHdwLFP2RhNaNLGmPd05hbQXTIP2iRTAmRyDQK+drWg84gCTr+wUsqN/
07aWqwiUz1StDXnVjU42XeKNsZhAzNCpTNNcBrt+sj7OdRpE7fVyrcZHRxAN
j5JXTf43gC+V7GSO/3E6/BjPcZRbNRFO5nhkypLMdOokErozMF32qg7Mza++
4BBshoRg4zdNRl1IQbk/9fHXMdRkYsgeU9YCqruCmZ039CMOv4svvASHkfAd
H8GSyk74c8i+ywnHJe7sqsJxCENnS4pxPGRB9ptpZhcSYvwk6Bo7BiJs6fQx
G1ohCnIpJxzr0Ka9Zbu8DKZgIuI42rZQBxfZrRgS7xUj2qbNnirz04g2kAEk
mCuA2+TtFhI/leRB4sCaMnKMxLfVHFQhHOIrZhCMOQQxGq6aEA75Lcs4QDik
a3v+L8whqJP+zzjhEJsxs0DCIXvPriMcgmz7jHYSDule098h2R2BosyMDm7B
ffewOK/d7MkXUG3tRSzd79DeCzeFkzGvMl9virugEABnY8R/6J7zQfQPb7oo
4PgVUZPB0BB/SI889JPEf+9SJXE45WQ0QuKPY10KyDrZG/5ZB66Pzfyzjsu7
u3TsgY7I8KXL/FrMe/Hmr62T+94B/4t5JhJ3TnAicfhtLOBI4ru+BvYfvGaJ
nOP1HpO/o5IUO/wrPtcJ7ix7LJD4vNNDEofctp+0X3Cc/tFUGOHhOs8abczD
kJbN4E14WCqjke/ax3qk8UTq1d74KbiVk7a1la4GTia/MrV0/4Z4tpw4deHy
NEjYW9RksFZC+dOp6tW3FSj91QrTSPQ0UMeLLYWdqgS5gc4dLxwL0dnmi3e0
zlDA+Emvw4vOImDm3F9AZTuJTl1BD7pc2+G6jpzjBVQGTPWhyVkPepH4etWh
9enjcP6QQHOZTwWoaex69Zx7DL0PcBJPYh0A+Yjcx361xXCWivOB4GgrevhC
svzNtimo4hLx7sgvAqF1ZmUfZ5pQe896/47sKbjDYePYHVkA95j5bnsbNSDJ
ROooD8lpqAkJl9sWguAzfPAjfbfp0R9N3HcQrRMeRfpO4wLnL9Kniz6bSJ+C
elXaLtKnLt29ZhU3xdG0mAXQYj1H2qv5lgrpMOf4aI7PrA49lbx01N9zGt6H
admuf58DAfM3/cj3+iAYFLVgxNyrGmQ0+PQrXErwLT8W2YOm1PsGzT9OoFsl
D71ZTmbBjU0Z7Tvd+5B38s2eOZtxdJv+zYUtu3NB7Xo69ogDqLNqfN3z+VGU
pn1MvEIiH8zS+ylHVaaROXXpUb6eBvRrRnbuu1QSfNB8L1xaN4R+JL+hMVjE
vkfe5arumkJQD6ZsUN1OQWN+c88o8l9Rd/3j9rufk4D5IY0HyfNp+LMf5xmZ
ySwakzy/VHUtKPSjIJbyI1zbBgvQYwHvc35UybDad+QLOUe3zZpZ+ByRxJS8
GTlHSnWyJD3WF9TYPX23sQUZup81bXvZD72FQU6P3EdQfv3yu4EgDVR+WlzT
PmoIc1A0f0doMzpbniS923YSeqptIoZP1QN1zSpjfk81anlyr7/47DTYqb+z
1nn/FfoHlxF5HnauZCX8PHBHwEaBPE/XJ0nKDbyvQ2Ph7D/kv8LviB9VZF/i
fhObNS9NIwduGfWS5QaYsT6zc7tEEgy93PhPfixFT6/D+YGLmpEXSX5ODGpV
kDxvZT7xx2x+FLxHDh8jeZYSGc0i55I4v+8nPheY7hziJufiu7+qjJxjgKTi
ED5HmHDKcCTneLQDzBc8JtEGSkh3qEMnci/tKJqVToRLaw4WdwZPodGY5Cth
RS1I/Y2v1oHWRKj+cf/Nw93TKJNtWW/bkSawMdCxy2ZLAuXVS6uX2KZQXt7l
TevE24Fpq1DiTfdEWKqfuTSyZhL5VPDxSUd1Q2rMBh6jwf/+75lt+/zukXWe
aTH2nIjqRufuXxEk6/D5xWy5jO8bKidUSSPejqY/LmSR+56Prf/nORV6oh/g
50ScKh9syXMGSs/fFzxLQZor7RdHbaNh9/fnjMdkK0GxUCaH7JfzSfgLvF9Q
+Hn2FtnvFmh7RvIz5XtvEucHzp++mE/yE/Egz4rTcALNB33mtVXuhS1X+SN+
vU4AVXq2J6TvmAO/kL5DK3wPvpC++z57UC5HpBdJB8YWXro7ily8SiRQbxts
uKz++6lJE6rze7N1kWcSUQcUbHrl2wR3mjfdKsvsQW11Gk6BrBNwKv+QJ49n
OdxSbdtO5ubVGQkuPDchPtdAncxNlecG6oWanYg+te1d295JuLK1Jufi9VLI
N5mmbe2hIJdgV/pLB6KRtG+I16BAMjh/HThP3kvzzOe+P7dtEmXsVeMl76UH
6OlYLNWHUKXmS1k7tWHkG5B91Ui/FkYuOLU3/e5HL+1FDwd8HkXLl1purrp9
hVpq6/FsvC/hfZv2X747CjV7dofk4X2xVOYNkn19O3SRGe8LPr60mn2J9/W3
82XsL4wi+XzIrd5no9yLjF8H5JJ8/o6ovZQbNIR21knUVVL3IpfQ4CWNq33w
fuwePWfTKGrMovGSY80Gy0wVfcuhAQjY8IXbdu0kmnyel/dFpBmpxzsd8nJr
ghNPtygSTlBYIxWCOQGFOb6xJ5wglDnkFeg6hSpmr10JVSlE/uY31JKLmyEx
MECCrLNuUBrwOnDIuFqWrKP9clr3dM4UWvtUSSbMNB0meE1Vw0eb4ZtAyMcn
HVNojcDJl5qyr+CUjXvszNoWGPwudb7Wqgol6uTsn+eZRtaiAnS1ZrWwxfsQ
C4nnNoSK4DhE1DhOfcPxPbtn73wdTkMBdq53tLF+WJWFUDry84Gx5fW78KuZ
qE6Lofy8A+ax4ZVfjiKFwD8qpUWuNw3QJ9cDm67VDLne/FFpaFNWP2otC4yN
cTGB55ZqVRtmxiA2x8+MrNPJubkCrwNhposjZB1R//3ng5Tj0eOj9VXGtRS0
XUvqi8xKGqTwTO8n8V5z8Woch5htTb4kbu20tDJiEY5+rt/9wXKcgrT0qxNU
RuKh0/XMAOGQGCMtwiHoqF3XEOGQz8eYFK5ox6BdDrWGxoMUJCvCfJApKQES
rRR/knVaNYTIOiBb5x9G1nGfMbah3B5AH64eexMTaAvVA5bHD5qNQX3k0w7a
wQF0i0uaiaPDFJzPeXlT0Y8Bx4HOBilnLxQl4//QEvNMx5nSfRLbAqDA3rCR
xIUK/oljTlraS+Ixve+T7GPdEOXklzVtKxS0g3vY/1HJW1BP+IRInOrxZxIH
5W96oSQ+NqNLC19eo4GwtPJJzDm/n4txL0u9hpEqVkYSv+aVSuIgWhwlTOK6
8yFwR6cO7XXg+GTgi/UyX8rXFnIgNtxrnsxf8esD4nj+Iq4nD9+Q+atG9W2O
aakOPSpyDZq1nEZHvgkvflLJhWHDhc0rqg3ITDgw1PDkNOLYROmvFkUgvfah
BuEE6cH0SMwJqEW+6zzhBO3OJbefTI0ooGF4YRnr30l/jXvHTuXDHp9obr+a
JrRrKbhrtngKecrs7E3RKoDNvZ71hENMJCN8MYcgsx0GbwmHXKiWt2UtbEY1
/hU9uu5TSOMaTx+XWCGctHz3k/9OK1rLU3O27fAUKncdiZ7gLgI1h7P2hHOU
0hILMOegrZ+2xRHOoQ0ayhyKaUeqNvkTJwPxnDlwhMVusRhWbE8YEX3b78Br
h/UNpT5ViyL6Ni/PHjGn0ouyVFVmfIrGUbWQbLKIewXkL0fze4T3oWk2ZrZS
zPMRZQOMF+5VgbqWwA2iex/izb2w7qFCpbg0onu3jKx/EQ40WLYRwxyIsop/
yGRiDrSsYbpLuHE/s5Up5kbEwbnzGeHGyPyN2mS+X4m0FMDzHbWKbWsi8/2Q
NLVdYUUrmkt4l8xVOIFoJan5TPB8HnhcfphwI1VxrDrmRhSYHRlLuNGmqb+d
cCaV3AFGzJnoxIeyreGYM7X5nwoTTuBcN9WNOQG1fjYLJpxwcOD8LMmnp4qS
As4nPHsp908+w63435G8bTa6NI/zBqJK8cu2OG/xjg93knNk0ZvtxecIfMrO
deQcb8dc0ifnpWZMPYjPC9xt79WT82I9pPp7GdfPSMRKBK4f+GMmmU/qZ626
zltSJ9/pHpA6AZMnizqkTvQP8UmRurVxHSJ1C1/fW7mSuq1Z4z1F6vN6c3sw
rk94am0xSupTJoSa3XJsGnntpbu7+X0x+qD0KeD1cAX8ihhiI/ES8we3cRw0
fkYEk3ifhXz+cEsjCnbe5JoYO4GYGu0V71u2guUqF7PYRA0S3tPKfT5iCm1S
5bJiNa8H3ufPJ4QCBlG46M1YKYZcqPZdpmwVHwXFq/Otovj6pX1fhPD14HWU
SpVcfzMx1n1XwSDaNEnrrDwZBr7xjHzHro7CFfGdXU6d79GV8XG70iUKEqsx
1Utrew97lKea2kOGkSFrnjOb3Xk0fVWk/U7QMNRthz4JKw9kz9Uy9hL3e9On
3lIuPwfwvbbTYkeWEzpbunikDscHP9n7xyq8goy3W4Z6900ge6O+FbHH6iC/
cd+a+zO9wBzk9IZcr/t+gVwPdP7qEeT66fQji620kyiOBg+Yk3Jwt+rDrgOt
3XCjTP7P6/v1aC5Hb7L14TR6zx4Q9mdTHrCwNkRoBDeiZ2ue5K5Q4Xxv/vZq
S0I+UKktPC0zaEHrPOoMJHWnECUk0UEgoxBMXKrFeA9OobaX+u4FPytBQMN/
s7VtM3RLpj1Q8axFJx77117MnEayqyXXYn5mgcSG2neLIbUIYuMdxNOmEb3X
C9Zxuf/+93L/d8djLJDso1EKEnJh/RAr+BridoXHTx1MBlM5X5XabAoKU2Ed
eNyTBWc4DEW4mP773zv93x3PoZrSufZ4EinnnZRyYehCAiuDH734EqFFTGgx
2XoKKTpdiNO834omVzLY6IsToVct54G17jR6wx5SoXC/AS2bsE6ekkuCrnxR
s+9cFLSFvo3pLE01qv3QcHskMQmWBfUXJcMpyPeFo+x3z3wU1jzK6/onCRgs
5YJCXCjoe5xL9d7DRVAskpqoOZME6jWPuuuXp9HjyKOsR9xqoOcNb9/zj0kQ
emiPYcvRaTTHYnhrxL0RDNOszu4WToK3tuP5vDCFlB6GgbBfGzxWeCRMFU7+
vy3b5nN8kyh0077nk3u6wVbJ9hvjcgJc/ZVtTL7vfwy98MuIsRcitn4+Q77v
e8nL3BZVnEDlwiWflN71QqvpzRiHJwmwkXn+FXlv3GOynWO8th2JC9bNkffG
Env/JJP71sFGc3xfRPN0mJfc95l/2SvyHl7wmsXCZF8TOsqgdIO8h0+i/vKU
PP9D7s1X8POjKX81RfL8JmWnb5HvF16KW0rv5tciFfeLuuT7xYbTzgMkD0Yl
Z8rE3GrQhQzNXpKH/HaB/eT7jpxZiHyveilimpmQJt93rLmuBJN8Jt0rT8D5
RAf/1CaRfLa0FHwn3zdpdAaq18yWQ+ajkCryffNZo8xTcl4Ze3fY4vOC7fW5
t8h5Jb7eoU6+C8ulSR6p/1MHrVvfr5boJgHL4eV/zn23m3Q5PnfYwLBzjJw7
8+CoCvmervxw+WQGWwvY7N/tSr6nd5/235aC64exFCRw/UCmM5UwqR/9/j/X
yL83MLC/k3BjoQNKGVxLyb83CDnfZEzqUL7XgwbXIUh31kWSOty3We0zeS/N
By2FGQI96LPnfXHyXjpP15uDnC/L12RRfL6owvlVOzlfz2M1is7VFMThtfTZ
Ty0VcYxZ6xbgvovf/7vSrAPnLWxQ6aX5Z3SkbdMjB85kqBqY0iLnzph5Owyf
O4r3q/hEzv2/9lE9v5/JoMIE0nDWKtrn04u4HSvaBfQTIOzA+oZtGpPIdGf3
teZzXWjBVf7Q/A7s10xj4zR0ptCNXeEe7n2t6GHkeMbHuEQ4WJqQcP/OFOKW
m1rbsNIKtgeT1xZHJ0Jb+9zLdKlJdFqGN/VnfRdos8wo8Kz+3/+H+/83Pq7o
+oScl4hkbhU+L2hcK99Czqs0yuLz56AJdLhojWUrTS80Z8w3rwtNgIK6ZWTd
NIF+5Y2V7FHsgQonm62ShX/P/0S5VC8590Ktc9z43GFI/fRxcu6baf7kv63D
cRHrmx0vOiCbxvbpZlz/OTZXrN8NTaJj3Fdf/+TpgPnM7ppjmol/XX/XGv5Y
Uj/mpsW+uH7ghIT8P/Xzt+strbclk7pa/J2+WL/SivJl+deRupKKKzYk91Xg
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     GraphicsBox[{
       Thickness[0.13175230566534915`], 
       StyleBox[{
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJnIGYC4r6Ibn/GAAmHCE6xduP1yg4wfuAt6ZrEIhWH
NgV21TNXxBymtLdGXZZRdTAxBoJiETi/8v6PW8bdQnD+TBCIFHB4krjwmsl6
FYj6zTwQddbKDi3itayZbDwOpw47rc2sU3G4zntbLNWMA64/DQxY4PyXtY+z
z69hgPNZ9H9xXer5aw9Rp+JgkaRrx+rw254BBB4oO/wHg+/2tzVl1/xnVnaY
d2Lykmy1r/Z782vezpyqCOfzxwbcNypH8MNB/o9XdNggvU331Juv9iu/vaw4
46AINf87nN8Mcv+xH3D+Nq8NFnN+/rBPBTnHTdFhBsj/kr/sQd42vqzosBUs
/weqXtnhDAj4MDj8fPv6gOViFQe7Esfa0zIscD7EX2xwfuHykg3/+NkdLlwN
e6NvjeC7TGgWSutShvNh/oWYx+aQDjJGTAkaX6wOHxatVzgbAXM/k0MFON5k
HWQ2is1nesDgcKB7X5PJYkkHsLuNGRyEKyeVnE2RgLr3n/2OYKuI/+picL7G
J5WXs16Kwvng8HcQhesHp4OdIg4HweYywvmQ+GSC82NUI2TO1bA4KOxasC+V
TxTqH1aIPmYxaHpidRABu0cM6l4OB/c1R5czzJCF2FfM6dALSrcb5BxegMx/
wwkxd4+8A9hdDVwOa4V0+NLjFBy2g+ODC+K/Jwrw9FgNCo/Xig4FIPv9eRw6
bTx3pSkpQcLlMZ9D+eFtrjN9laH+EYDYe1nZoRWUP0wEHXQV5b/kiKlA3SOE
Fp8icD443DRF4Xywv9+JOkjNi9M8PUEFEp49MH+rODxwjXecJSjq4HOC3Xa2
KVS9nwg8v8L44PjVQPDB8T9NyeHLvo9b081EHcDpP1XJIeTt5Y8zHiL4HqBw
tBCH82H5Hxy+PxB8mH0A27jEmQ==
          "]]}, 
        Thickness[0.13175230566534915`], StripOnInput -> False]}, {
      ImageSize -> {7.593006226650062, 16.338709838107096`}, BaselinePosition -> 
       Scaled[0.32439307852814453`], ImageSize -> {8., 17.}, 
       PlotRange -> {{0., 7.59}, {0., 16.34}}, AspectRatio -> Automatic}], 
     TraditionalForm], 
    FormBox[
     GraphicsBox[{
       Thickness[0.1287001287001287], 
       StyleBox[{
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2,
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
           3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{6.281249999999999, 
           11.2953}, {6.281249999999999, 12.512499999999998`}, {
           5.8999999999999995`, 13.6922}, {4.921880000000001, 13.6922}, {
           3.2531300000000005`, 13.6922}, {1.47656, 10.2}, {1.47656, 
           7.57656}, {1.47656, 7.028130000000001}, {1.59531, 
           5.1812499999999995`}, {2.84844, 5.1812499999999995`}, {
           4.468749999999999, 5.1812499999999995`}, {6.281249999999999, 
           8.590629999999999}, {6.281249999999999, 11.2953}}, {{
           5.184379999999999, 9.615629999999998}, {2.6687499999999997`, 
           9.615629999999998}, {2.84844, 10.318799999999998`}, {
           3.0984399999999996`, 11.3203}, {3.5749999999999993`, 
           12.165599999999998`}, {3.9687499999999996`, 12.881299999999996`}, {
           4.385939999999999, 13.4531}, {4.90938, 13.4531}, {
           5.3031299999999995`, 13.4531}, {5.56563, 13.120299999999999`}, {
           5.56563, 11.975000000000001`}, {5.56563, 11.5469}, {5.52969, 
           10.95}, {5.184379999999999, 9.615629999999998}}, {{5.1, 
           9.257809999999997}, {4.8031299999999995`, 8.089060000000002}, {
           4.551559999999999, 7.33906}, {4.1234399999999996`, 
           6.587499999999998}, {3.7781299999999995`, 5.9796900000000015`}, {
           3.3609399999999994`, 5.418749999999999}, {2.85938, 
           5.418749999999999}, {2.4906299999999995`, 5.418749999999999}, {
           2.1921899999999996`, 5.704689999999999}, {2.1921899999999996`, 
           6.885939999999998}, {2.1921899999999996`, 7.66094}, {
           2.3828099999999997`, 8.47031}, {2.5734399999999997`, 
           9.257809999999997}, {5.1, 9.257809999999997}}}]}, 
        Thickness[0.1287001287001287], StripOnInput -> False]}, {
      ImageSize -> {7.772871731008717, 16.338709838107096`}, BaselinePosition -> 
       Scaled[0.32439307852814453`], ImageSize -> {8., 17.}, 
       PlotRange -> {{0., 7.7700000000000005`}, {0., 16.34}}, AspectRatio -> 
       Automatic}], TraditionalForm], 
    FormBox[
     GraphicsBox[{
       Thickness[0.08928571428571429], 
       StyleBox[{
         FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGJ1IAaxQYAJSjNCxZjR2DA5fGoGm15c5tDCTGq5gVpu
AwBUHQK3
          "], CompressedData["
1:eJx11XtIU1EYAPD5mkS12ZabbOrm5p1sGT1mpmH1RZhZUkuDzAxLslUW/tPL
0uylEitLC52mqRVZYKGEWVZqhdkf9rT8QyKHBikqaJTZrGznHPddaHTgcvlx
zzmc7zvfOTcoNSM+zUMgELg5nlTH4+54bNEpK8pmacF6QXwkfLoOzkTFNu0s
0sJxz7bzCxYb0Ns2xodUxRrgtiRUZL6iBVO3Mmt70f8d98J76eUPBvDZaupZ
aOZtLXW0nxp0mNHR7orQrZbmk2F9M9D92X3pr4emu7j8qvbBLzPveYZb0jfB
U/OXzkA3rKmLKI8UoVm8Ehdnfa0zpdv1aBp/I+9GONnbbtWDNLNo/0tPCUyS
lqNn755ZcDE/N6kzSg/+9bJKd5sQhvL2WRY+9IPr3TV9CzyEUJBoWe/mIwfT
59h3izq9IFftzXVckkEHaXF/ljs9ROKptaNPybO9dj8fdzEN84EvmubR6Du1
Ljvatm5g2+/KCXRE6txlXjCJDvkaPFB2xg2O9Ix3G9f6Ap13sweaztciRh8l
70EftDM/zvm2cIn+r/yl6EzSz8L7DqmPwNkuVjdVNaeJZGhnvPnk/V6Kvp+w
JHGyXYI+TeIXitDfm0cbzF0zIYuuk/fG4c5Ra7UcTev0kxzHC0gDP6yXb6Rf
sR/Lj14Cm6bJ8o0pGkgi8T2SoZOJkxXoHTsd7YYCxKTufwSh08h7VdA/39Wg
InEXKKCH5LFaDedJnZgULM9KNcTUttUIIhRA0+WhhtekXkIVcI70q1P917T+
tqhwfSwOFduvet50H6RKNN1vlRLH0/4blCw+sZrleXYg9O+ZM1ZSwaHp+Wzg
2DpGAth56ubYPJd5v6Tr420i+xIUAOFRj+OLnzjH+7PvSRzLx4gSbo4NHO64
oGXzTSjYOsVayKP1IUPTfT0mQa8i+bP64vncRfIvlLH7SmKYqjcZ3gc0z1I/
NK2Dg4FoMxkfrkF/1AfUTl7TgH14sDVypR79e+yArbwwBE3P+V7eq1uyAyK+
6Fh+CzXsPovRgbarN0FwVgMvmu6fE87XsbznaKA3Ud741sahaf923ifIfVXC
wYFn96JLKzQwn6zvNAcWcn8/5X2IfB/m/Sgja7jUS4v7+e//4C9x+3zH
          "]]}, 
        Thickness[0.08928571428571429], StripOnInput -> False]}, {
      ImageSize -> {11.196144458281445`, 16.338709838107096`}, 
       BaselinePosition -> Scaled[0.32439307852814453`], 
       ImageSize -> {12., 17.}, PlotRange -> {{0., 11.2}, {0., 16.34}}, 
       AspectRatio -> Automatic}], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 99.999993}, {0., 
   3.1415924291903177`}, {-171.25684373588564`, 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.748779774548297*^9, 3.7487797819921627`*^9}, 
   3.748780023826087*^9, 3.748780223905555*^9, 3.748780452724588*^9, {
   3.749163073818712*^9, 3.749163086333209*^9}, {3.74916333527463*^9, 
   3.7491633638923063`*^9}, 3.749164000224654*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"20f8f82a-312e-4cbc-a24c-11e108b558a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"efe", "[", "l", "]"}], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "2", ",", "rf"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"MaTeX", " ", "/@", 
     RowBox[{"{", 
      RowBox[{"\"\<r\>\"", ",", "\"\<\\\\theta\>\"", ",", "\"\<F\>\""}], 
      "}"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.742561076035097*^9, 3.7425610762894077`*^9}, {
   3.7425612869269037`*^9, 3.7425613270253572`*^9}, {3.742645553117029*^9, 
   3.742645645183384*^9}, {3.7426770617824507`*^9, 3.742677065919427*^9}, {
   3.7426771427922792`*^9, 3.742677151496401*^9}, {3.742677255524744*^9, 
   3.742677350437166*^9}, {3.742677414385844*^9, 3.742677439611882*^9}, {
   3.7427282637396917`*^9, 3.742728284376671*^9}, {3.747141451462644*^9, 
   3.74714146106082*^9}, {3.747141499567677*^9, 3.747141505822156*^9}, {
   3.7471419762780724`*^9, 3.7471419764573603`*^9}, {3.747148000939734*^9, 
   3.7471480012209873`*^9}, {3.7473987264313*^9, 3.747398732727559*^9}, {
   3.7474028728429728`*^9, 3.747402873086837*^9}, {3.747403049877603*^9, 
   3.747403052838109*^9}, {3.748351564845777*^9, 3.748351597755999*^9}, {
   3.748779535699278*^9, 3.748779550172996*^9}, 3.7487796237361927`*^9, {
   3.748779749644827*^9, 3.748779751156385*^9}, 3.748779785632835*^9, 
   3.748780010165715*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"16730207-9217-4d4a-af25-6a0b2939de55"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
Olx/3Z3kbwmdf+dC8EgWb8f4vCnVKYHkb0F/w3u3zO5meL48f0t5/pby/C08
ncvzt5Tnb5GV528pz99Snr+lPH+LrDx/S3n+lvL8LeX5W8rzt4jnwfL8LeX5
Wzidy/O3cDqX52/h/o/y/C2y8vwt5flbyvO3lOdvkZXnbynP31Kev6U8f0t5
/pby/C3l+VvK87eU528pz99Snr+lPH9Lef4W8XqkPH9Lef4Wzr48fwvHy/O3
cPWW52/h9CzP3yIrz9/Ca395/hZOh/L8LZx9ef4W7nnL87dw5ZTnb+GeS90v
yvO3lOdvkZXnbynP31Kev6U8f0t5/pby/C3l+VvK87eU528pz99Snr+lPH9L
ef6W8vwt5flbyvO3lOdvKc/f8r+Wv8V7lrlzzWWGitWFt18Y8s7jZXevkOLa
31DhviQpjX9OZnrILWNdW0OFmfPe4/xzLx21f4zxbmKoOOTefxz/HMvOtxP6
XK1sqNhotmwj/1xKcz2rNu9/GiieHxo+mX/OZOC1zlaHMw1KneuurLYPijW0
4Z/Lmq4u/0FkUTj/XMoPLa49Wcmjp/HPn5iq26/V5NVw/nmSHernteznEsA/
H1JZrY/HtrOO/PMeB24difKNN1SMSzXpwI97P+gT2crfxFBxWmN+I6evt2k7
rb5b99F/aqBYsPRnwtv1L9lzVXJdlzjeQBGpe1K+IPgj5U3zC8xeNDNQHE12
21Nzxldmf3vEmQ1f9RUjWk8dnOvO9HwpuxpjeVtfEbDbqGj5Gxa/fVTV1sI6
y0CR3st6o30Ui9P+8/JY3CXXQDF9/qRtlu2Ynls1+qz3TNFXTFIG9lkRzeKo
03OUjglaBop1XS27LdrN9JzfMOlZPT8DxY8woxcH/mN6GjZbOvzFCQPFrXVD
rnRzYHo+OmSon13XUOFtVT/cuwHT879aL4xa9jFUHK0ZG//hK4sX3VW336WK
f52T0aw/vFfr7/hw7QFP/ZV24IVNH9hG/zZQnMptHzO3G/MDB1/pW99wn6Gi
UdqRC8a8eyuRepb2jScaKu7O12v5gnevZEPhmdjtLoaKtBu3nvDvfWQ3MA05
bmaoGHk3bDV/f7lu672dNXQMFVPSmkbz71nMCXzazaTYQHFmZMEi/v0IVzWf
kb3SmH9+O9WSK6f/+dNh/HPUm9X1zv7TbDx/381e3c5tXdYG888tu6qf69Is
mRf/vLGhWofUS2Pt+Od+m/q905yQYaCwvhP12HDPc9qeEbLCyrXnGSg2F5z0
SW3M9h0yUn/2vNbaQPFzcp+l3Qew/YXzNmF7An/oK+L6aX2u+JDp8LenRceD
9/QVackVY/RCWf+c3LlLs57P9RUV3/5tW7M16281J5883lTTQNEgvOX26GCm
w65z1U9ddDJQHGor0/1pyvpbVGijBh47DBR9tvy8kp7JdLi7d9tIQ9X4cDC4
29g5x5kOQ9XfaVWtw+8d17F+GJz8wX9De0NFlZTWv0ZqMH2y1f257t3C/ZlZ
qbSdw0dx9Zq52fm4JrLzFd6NuO8i+FhEtsulz5T/d55rf0ZWrYKmmezcgukP
7vtKj+/b78W/LMoPqXWwWD/shWe175QXqr/T2M1tPEdGsX32B2o9bWcsn5JR
n/W3lbe4cSNzQ/jueTPZONle/b5OzOkWUnCB8cDf3PhzvsOEVtPsWX+rq37v
K1Zl5YRGMN6tIjeOzRkesLBxdab/luK/Jf1nT+vnV+z7Mj7oGzce5m7V7Bz8
iI0P7r5cP/ywzqrzJkv2vuJspmn7pBooamj+qVrIOy905W69p1umGSiqVulw
lb8v5v/i1p0mngaKGxHFX/n7Pn/+NU06fMBA8enemFf8/R2r3X9k12oaKjS1
Uu7y92ET1ePSlNarXe/U2ErLr9i+oraFk6HiXKviDT0PnGbzYAw3vl39NDXE
3+8x5W33cf0wYVQHq7QFT9n4o653qay72ylevPpWEdfOmwuDPvDP7Rgmc8/l
vLTOLv65l593OB38Ys584O9fZ1lzuk3ObP6Uv+98b51C2dxSNS9brrvKP991
vMfsZhe+GSjyvz4bwr8/9d+fpxHBSn1F92UGzY07sn2ZL2Hx93td1ldsrHR8
9KuDjG9vx+lz02Z9i/OT2Hd0Q/19mev45dSvdpXps55rj3Z+rSbJvDj/zJfN
erl7GypMPV0v8PcR3qh5q7ipc0x5+0HVGtdtReZr8f2CDQme18j8Lj73GxW6
X4v4A+JzvMnvI/sS/0F8Lnf35PquxN8Qn7NNXJWsQ/wT8bnZjvOP1ynLnzmr
thefM5+lLl98zna9uj3i87Su6vaLz8f2VD+v+LxrfCNOH/H51bwbQ2aQ+VS8
j3/6aD0bMk4a73ttxvdn7EYoJpLv919qJ413PH+mW793p8g48LlTXCjfn1kW
udiHjCf1TvZ+x/dnju0Z/5GMSw0L7yzj+zORla69Jv7M6kdr2qzg+TN3I0Zp
E3+g0UONm3x/pkL1ayOIP+M+Ju0Z35+Rb69/h4yTzwNy9/H9maP3208n423v
vcbD+f5M3ys+leqrxu2aLZtVPsjzZ9ytB6wm439knn8O3585/d/d1uR7N3yZ
fInvz7g2emxJxo2Fui3+8v2Z6+r2N1y++P0Jnj9jdZPTH+s1Oj5rNGtE/JlX
B+wW8v2Zftk3fhnsM6RxV3DnzoPMyLwvvid7IPVzJPETxPdYs/bN8yB+hfi8
3LTvg8yJHyK+NzovZI4+8VvE9z3d1Vx8H81BXY74XtgWdb3ic0T+6naK72EV
duKeS3x/qqFaB/E9prA5bVuReeTbh11tDXj+TKrNG2syHw27G7fmNc+fCd+z
fwqZ19zW909W8PyZlfU9npP5scYX+418f2ZO5tjRxJ/ZE7pvMN+fUTQe35vM
vwss6mny/Rnzx5avyTx+75rPcr4/M+WiTzLxB67FvKzK92eu39zWjvgVlzK3
nuX7M3Yrz04k88jXmvdC+f6Ml/o7fdrrzDu+P/NFp/dQMt5ebJhgEcrzZ5rY
cP1548mRDb7y/JmVt7h6d2rs+o/vz7RUct9FQY2Ftnx/pkcc1/6lmvst9Xj+
TNAD7vv6Yrz41HOeP3NNrUOffXcMvHj+zE71d+pRYUMFvj8TqdbznOWkPXx/
poN63KjXJngl35+ppn5fEbbGS/n+zM1N3PgzUPG9Cd+fObube+/5tzL1RvH8
mcl9uXEsRn/DdL4/o6PuPxP+JH7n+zPjhnPjoWNO03Z8fyZ2NtcPV2TXGsv3
Z44ajLYk87L4/PO57K0FZB4Xn/O5un5SLpn3xedY3ljWLiB+gvi8SnhaN23i
V4jPlcWox6Vc+2UrD/P8mfMpx+uQ+bpQe8AQvj/TdCI3vgVs6nXSl+fP7FX3
w2cad9z4/sx3db3i/fcjrbl2is8hr9jAPZf4HG/md04H8Xm8VH1ON/E5ush4
3XvEfxCfVz/06Yom8WfE98FPje6oJP5M/4HV3xnx/JkTPSxlvVX+jFvrbbv5
/oyvWp8jXY3M+f6Md23u+/rr0HZqHZ4/U6xuj/jcQqV4/z7EbxGfixiu5uLz
LeX+TLk/U+7PlPsz5f5MuT9T7s+U+zP/6/6M1L6JVPxfKv4jFV+Sim9LxXWl
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
xw3wBX2E4wZ4QT3huAG+t5pw3AC/31Q4buAczpUY4TwIHiqaB8FrieZB8HfO
wnkQPOG8cB4Erx8unAfB3eKE8yD44uKWgnkQ/JeGcB4ErxgonAfBk0cK50Hw
B+OE8yB4cz3hPAge8VQ4D4If/i6cB3Euq7fIrwPf+EDo14Hvny/068C9vwn9
OnDPm0K/DrzaNqFfB37mu9CvA19URejXgSesFfp14Jv+jRH4deBtFwr9OvAX
i4V+HfixtUK/DrzwrtCvAz87j/ProCfO7336T7geATcUrUfAZzsL1yPg7XOE
6xHwp1uF6xHwhsXLBesR8DNxwvUI5VeF6xHwHIVwPQI+K1q4HgE37SRcj4Dv
6SFcj4A7/xauR8CDMrj1CPTEec4aovgAePg7YXwAPKGGMD4AvvCvMA4AvrY4
X7DeB3cJEq7rwY+cFa7TwSdOEK7Twb+fEq7HwSs1E667wddlC9fX4H/yheto
cO0b3HoZuuEcb5V+1q8tfjHdwG3a+M8alMF0A7cc3a3mwMdMN/Aun7i4CnQD
d77NxU+gG7h70a+SOAl0Ax+VL4yHgEc94+Ih0A3cqisX34Bu4BmxXBwDuoGP
vcLFK6Ab+Ks+XFwCuoG32MLFHzBO5t+u3vCf0R35ocZLX5n7sHEyZIN7ADnv
lJaUaEbyq0O3fv12xjQ7Hyd/1avCbZLnDboZ/mrWMiXitDx+XkwdrRim26sm
Xj7m5w/Lw6uutVOMYLp92XI4qt35KPla69Et+4Yz3SImNS26sHGjXa6FsxNf
t7Z2/6oWqdrpdfXOCP081t82VZc7v1S1M+rTJL+4Q6y//UoKW3ImN17+/emK
e4emMd0OOC5aYaJq/98gg761+zPdhrypWjNV1f7wxPmdb/kx3XpkN6xvqWq/
keNmZWIQ0y1szNQqK7Neyhcs6n+mtT7T7VTvhi3IObf583wSJmX3p7o1Mewz
jJxn856dOZHk2aNxmMp/FzleeSqfMjg50tiU6TY3c+s+cp7tYsqqtVtS2bh3
4knXG8Zmj+VJj1a99P7Hxr27Ey7eMTp/Xx5hHRbE/06bHsieS9rpkDR+otyX
6ea9cs0O0s5GI2aMzqzMdJszyfpKqP9zuXu3kOha0WzcO9rnaSpp/8fUDEOT
kV5UtxTFpCLSfqd64XPPeLLvtGaL+vqnVe23bNIodqC/F9XN/uKkeO19H+X9
659bM/nnEKpb/9Y9E0j8vG3VgFHk9xGg26p6n7NJnHy3jl9HkucQuh1Yckb2
Veud/GuzkAZ797D5Iv7PYh1js7fyDfXP7Az1ZrqdeXVUcWJhqtz+nL2ebBjT
7Uu810DD8ynya3MaB/Hni9WBx/+Rdo5XvN4ysA2bfw/dm6flqGqnLG6Og+FS
Nv/G2/XSm538Xn7As+L3f/qeVLfk48aWp1Tt31Dc6GbDN2z+zW6e25W032/R
67k7LnhQ3apGXnMn7V/tWvH9gMMedL7ormt2nrS/nWx9n4U3PaieN65YzvV/
+lUeM8Fk0+enTM831kUrSf7PV4qx//ydmZ61G+04SvZNNM/UrkPyT0LPlsvH
Xbbumi6vntju9CNjpqd9sfwh2Te5237L7bpxzJ/p/59O6s7xn+Wt0/MDVimZ
PzP109ssEv/pktqyJ9+fqdM/9CJp54ldR8dv9WJ+o8XjzvdIO5fa3bppMJ/5
jfb2NV5dr5IhD8vWcT5a1Z3q2ffMqwzS/s5/NM2zn7lRPf8zP/yHtL+Zj830
jSoOPSOiZlUPVbX/9vamDZ+muVE9d9fyaLxL1f5Zn0O8TF6zOFWzQRP1H4Xl
yMPD7ng5xzE9j23tu5/kQV0Rs1Kf/K4K9LyrbXGG7Iu5pO4+SPKpQs/Dq81m
zQj9Lt9uWmHE3ljmh9+oWLCM5IWrP9LdcWgrpuebKXe2pm/Pkv8KXHMyUpvp
WfBlcwyJ82jobNzO98PvHlvTlbTTt7m27fgZbL0TkDH9Omnn0Pzno3p7ulI9
PzQb5F55a7Y8uJ/5x4+zXaieY/u7JpL2208yWROu7UL1/Gk59Bxp/4Gm45vb
a7qw73pX+9uk/c2nbtDWHuBC9Wxer/IL0v4pfaa5tSp0oXoO+ej170eDX/LI
230/HjjC9MzWs11E8uBdrWMTXTejH52vZwcYarW0/ilfct/Lqusutt6pvqbq
BrIfurbZ8Vnkd42h2/Fu8RaRw37I/8294VQpn63Hu009eIrEbWrGTRvDXyfW
sBnbJFfVnq6hA7W367pS3SJH++8h7Vl+bPq2hZPZerz5frtWpD3bgpvO+lPP
ieoW+8b0JGnPxGn7/+4s7kl169KoVpcQ91x50M24o1GePalut3r9vkry2cbV
ME1d2aYn1a338jeupP0ZO4d++pzVk+q2b5hFim5svjzu8BDtg7w4ifXOekNI
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
P0frjj21i/4Cj33wjOD6tO649dFtF0C3ez+1xTpad/zTzXIm8Iia+t1eQNc7
t4vy+4C+yTXqXGtadxy9ZdUf4Jk/8BqzktYdh/fplgS8o7Hhz+/TumPb50+m
w/1Jg23HRtN5e3sLC1MYv3q/iGa07rjkxav/YPyWxQt70brj+wuXH4PxV96c
N5DWHe/l88MqCuUJp6607jjizqMOMP44vcRjtO7YXtQdnzNM16V1x8K5rKXY
bXkhjOa59RrhEwd86e4+xodo3XFN/rzWUujtfPqYrq+fH9vTCXS7Md6R1VMo
3fEpD4fPwMNfd9G8E607XvT983HgWeVU+2FP6479+Hy4quJXn/hRDO/ix09D
0B0vntvSiNYd6+6IyYPxT3v1YxatO37N9d8N46928NIXWnd89uXHQTzva9WM
dFp3vGzxBgMY//jQDb9p3XFQu94vYPzJG1xdaN3xaT2oZ3dwGQeb+9O646Wi
7nj/Ha/JtL7YVNQdd7nO4h/vvdOFee3eJ/SDfi7/LoDE/zx/Nihz2WnO7XvS
Llp3vK7E8bRNaZ276dprf1p3/DsOzq973Pritpdp/d3r5M/mUHe/eTwmjtYd
N3q7wQTqvsxONeJo3XHYvfk/zErrF+1unfbSuuNzZ8OvTyvNw/fqDNxJ6xQW
3ut0C3THZ86qF9K646M2B0+CXnWHLE97tuSlI+SrjTYLeQ7iVf76dwHe2hUx
f8N+ss622AY8LuN6ZozuuOOE9MaQj3X7EszoDg50qlQTdKy5V3+9pHXHg07X
jAc+XkRQNqMvvrs3sgj652T4UpOF2yEPdB8R25nWHTtPdVsBfLCkmSMZ3fH5
McqukN92rPKa0RcL9eMvro4Mf/miR1PIPzu4H8yhdcdfRd3xQh8bRnfcV9Qd
x3vbMLrjrVXfL4P3zVk1zYbReeAuUXf8Wcx7sf1mj6hmkDfuqyG0x/3167Gu
G8yr8VU2H/Zef+0erOOeSUI+jPjMqhZnwW5VdU/NoHXHJxynucM6/hTzZMQf
8X74i0s7MfAEzQP/y8fD75x6/LrXtO64umb7dFiv0++Nd9L6YiOfwAfwu34y
vMvUPedgvUacEvrBfb2bj5/fuUjbzvtp3fHwpGcesF4ZTbUilBQv8WbUIW9Y
Ly8ZvqqTTy9Yr2gboR/cX/35ePuN++Xx+bU7pTsuEP+f0kR3AUd//tt+81zI
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
NhJ1xxFz3zK64/U/7ZzhHNGNZ+8TsP8/Yh2H+IFTmpZw37JhZUJWebrjw48E
vgfOF+u1UbL1KgqwzYH3l62ydcnXHxAIdVxbPYGHg+2xvvuhxfqVVn31e/C+
0F/mP7/5+64qiqYiD0r6v2RiPegq8/+m95JS4P4hqz/r5zp83NZS5AUJPDRs
j/VjhGyfdlo2NQHuh+MOC/uR5VsWc33Wf3OhdccYH4xFHM9BvdYTT0N8Xv/q
HqMjrhrpVwLxPOPKj+e0jrhJV72vEJ8jZO1Nnnc8BOfUFFl7jHsDG4YwuuNx
ou7YT6YjPnpp/ywY/4M7k+/Q5+8lUXcsbz9/ywsTmNc0WfuKdMd1+Pv/H9zk
WX8P0brjFhfzr8K8zEUc4/AZ/v7/B+fLeXel7/EiI7b1g/PxkYWAYxy+NGlt
BvT/oO7Tcz0pHXEA/y5QzFU6OfuwB6UjHvf6eyb87hxZ+6yOztfBnsPj2PY4
r/5LhvnRumPPFd/MYL80b/DfU1p3vCs6eDvgh5P+e0Lrjv8tHegNvLvAr9/f
07rjnf59vgIva9fNcRG07jhab+UN4Bfl9H4TReuODasZuoAdahivZHTHmM/3
fpxhSeuOEW/rZXSQ1h0L+66Ia3byvzg6z3y8sfrUdqX1Xa0z0/+pdMcq3bFK
d6zSHat0xyrdsUp3rNIdq3THKt2xSnes0h2rdMcq3bFKd6zSHat0xyrdsUp3
rNIdq3THKt2xSnes0h2rdMcq3bFKd6zSHat0xyrdsUp3rNIdq3THKt2xSnes
0h2rdMcq3bFKd6zSHat0xyrdsUp3rNIdq3THKt2xSnes0h2rdMcq3bFKd6zS
Hat0xyrdsUp3rNIdq3THKt2xSnes0h2D7hjz4TV/bjwCfqA8T3Za/CAf+G9y
vEOgvS+8r8lx56iEfnC/J8cF/9Qug3f73ejXkrdl8/PlXwNuwzomHhla61AD
gt+ebB4LvIVO2wKG9m1G8Eb5RxOBdyrv5+a8Zm2BVynH869eT4fzTo7j99nl
OH5vXY7j99Pl+KYdM6rBuTyp3cDGhm0Jfsej+DKcp5mTT4zX/0fqWVffE3Pg
HDRteuTbgCcELzjatQWcX131Jm6bcIngJp3q/IPzZVR/4yZLTxD845n92+D+
2e7phouPThF8845LSVBXxsf93Fx8jeBnnpoegff6S9s3Jdd5SfCHzXduh/fl
SK1fL020yPi/B9dYDu+h+svztBZ0J/iiOSnzIH56NF76BHjCiO99PFgD7nUv
VV53ZVgwwRvs6nYD9oXmiojK8F4vvbv13JIH71/3ZL9bKytjF+yXV2+rBwKP
AvH5fd1jgNfXZAc7/jXZK4LhvF5+f+1o4LEgXoXn/3ziimR20P60uxbUsyb5
rrOBL4S49Z4XNeF8HymzZ9UZ1a4C38NvTqor8AARb/XgkA3cz/+px65XmwtT
4+HcDJhgtBl4mBLfpkHDrnAPn9WEXfd+/97sgfNRS+/sWuDBIj5kwKKWcD8/
W+Y/wznv9XAOtl8YdAb4xogv2FpUF+7tW8j8sN6WFCeIV0ZeI47DOz7i/0Iv
2gPfOEK2vg7ie8rPbn/GTIolv7vQ6OIHeCfStWp+6ewhyg5t9JpD3luvCrvu
rV0cEiG/ku+XdklTZrU+d6TMfsR7m/LxsnEJdRNyHN8d5Di+L8jxDS20Oy8t
Jy4Z2CVugbikEHl3iNsnmc2BuFR92VwHOi5hXVD+OMvGJczD5TjmUXIc8yI5
jnmOHNc12jcrtDQufVr1piXtD48jLWtBXHoc+WQq7VcmQzo9TSmNS83HHPlD
++eFfToPKpfGpXs1J8XQfv660eILEJdaHvPSp+NSYMTHiRCX4ixtLtP7yGry
yaMQlwa3m7Od3o8+pmN3QVx6Odcghd7XIwtMNkJcOlHpRD4dH2bveb0E4lJV
7y81aL9dIsalxaJ+QbontGpnDnGpT/jeu7R/Dqm5wflEaVz6KvKIEE+oFfYH
4lJlTfZ31T+d/RZdGpf2ivwuKT4U+96CuNRrHjt+94cHruSXxqUFIr9Our/N
7bcN4tIumR3uB99K3VwalzQtBB4j4hkvt3WFuJQhs2fPLZmnIC5tFPnJiPfy
7xMGcWmLbL2cPdYcgLikJ/LDEXep9yMQ4tL10ey6h9Rw2g5xKTtU4OdL97Rp
p9wgLi2U+c/ka1VXQ1wKE3UQiEcsGWcDcWmbzA+v9DlzXL80LqWJ/CLE05yK
/CEuBcnW92eGVRzEJZOBaeF0XPrtW7cp8A1ifQ2u0nEp/+CqS3GlcWmtbN3X
W3g/LC8uCftXFZdUcUkVl1Rx6f/9uOSZ/nROz7hLZfAdtZZcXjr0Qdl3vTdX
p4Rq5ZWtj1r5Hjh7uOy+/r4l5le11WX39dKLRopt71LL9BNWL+BYSMey8XDl
18X1TaaXjYc69554HuxYNh42duuelF+lrB3+3bM84T6/bHs1/fhT1Z6WjVd7
77z4uLb70zL4xlMe3V9El53vmHZfm4z0Ljtfv5tTLUx3lB3/ouimd+ZtzizT
f3H6wiqdut0tgy8ee2p3ee1Pz7kaVd74F0+y8ylvnOsqz7Mub5xWi96/L89u
njpTnDuUM57TzQfdW1OOfaK9S6zLm69xNZ3T5dl/Vt86i5aU428Oia3nlecP
3/L+Kx5Rjh+ev51+pDw/HK1t3qs8/2mU/LGkPP90TBo9uzy/Khi3bGH3cvZL
nfYeX7eW48+q9frftV7/07hRUfypKO79T+NDRXGvonhbUVyqKG7/T+NeRfG5
ovPifxrfKjoXKjqnKvL/ivy2Ij+pyK8q2ncV7ZeK/LYiP69ov1e0XyqKGxXt
64r2Y0X7t6J4VVE8qWgfVbTvVOv1v2O9jNvBQ4uaWFeS9q/eeHVWU7OQ8GFX
l1QJqe6t3F18rbbaHCsJf958+1lloKcyffoQLTW1fhJ+7u/sjPa9PZQa8Agh
vROlctMWadk3CHdXdl6wo7ikxEnCO/ZcnzPzlZvSDHDOTcI/nxlW+G6Om9L+
2sivJSXuEt55mNZxvz5uykFaPT+VJHtKuI3NpsxpOm7KaQ5V35fM9pbwkeFT
V1cpcFWuXZH1poTzlXD7dYWfOqW6yuyQXYEdsrng6g3XqUV5yeyQzZn46PtP
fu0hs0M219p0cY2x591ldsjmmjzIHaX23k1mh2xupUfW6e6+cjtkc70M8/fm
PHGV2SGb2z/3S7/vtq4yO2Rzd0e4zE/LcZHZIZvTPvHq4Z8tLjI7ZHPz/j68
FzPLRZqv8M6bx0VedFNs6kzmi/jIrENBYaPJfBHv99bLxaMLmS/ieaHblXe8
yHwRH31s5fNxI12l+SKeueFUyLZFLtJ8EY9Jbjpx/Gtnab6I51ee/OlJuLM0
X8T/BbUcfaupszRfxLs2WPcqMN1JeSBtT15JyQAJr6qhmbd4gZOy1YM8TzW1
ThI/4f7QUYOMpgcoFzxrYq2m1kPCbQbpzcze5iPzkwKu5LVF3xq3PWV+UsBd
GrXVadtnd5mfFHB6Q7cPiIl2k/lJATf1YsBFMzdXmZ8UcA3V52Y8fu4s85MC
rtXKNcc+ZTjJ/KSAWzXi+dZr9Z1kflLAfZvlNaPWdkeZnxRwJoNW+nb0cJT5
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
Pzfh/o3iOSzYs3PQpNihFb7nVvQ+WBFeEX+gIh5FRbyIit7NK3rvruid+v9W
P09SBhrDeYr4nH2a3c6GeSlP9D3VCvwKcbdhnq8d6nkqFyZUNYC4hPjv8dnB
VUvjvz98f5z6v3BOGkNtQO+vaVS5PslLU7nOQTNc5291U46+214b8gfETXQC
G4/xdlP61PCtSvLDVM6zw7nOrY3clAr7uZXh/EV8gp361yaV3ZRtF8VWgnMN
8fxht260f+mqrJeSpU7H/+xKHvy7ADvfbG7AdrWFzYo9ZfPN5h4H6KbbbPOQ
zTeb23980+u6u9xl883mzKoWD4f/F8HOK5v7bhG/+PN0V9m8sjntXo7DPHVc
ZfPK5hxujSlIu+Qim1c2t+qvv7L1Ohdp/Li+p6f2bhC1kIwf8U3mHzUcmpLx
SzzGE0P27apPxi/p3Nebnof/E4LjRNx41svFqw47S+OU9O9H5gaMcnWWxon4
mfsDd7eo5CzZH/HCDF9X02Qnmf0LuLROR56Oqye3fwFnvK7Pjj5b3GX2L+Ce
F56qN26Wm8z+Bdztqfpx8P9hWHsWcC9ySz4+WOwos2fp73omTWnl6yjzkwJu
u+43nbqdHaXxYBzeo39kz/emZDyIn2vY8lhuuqs0HsT1O68xgP/bg7+LeJv7
m+Ys/mQn/S7iAwq0G09sZS9br0KuZOOHkra5LrL1KuTsvh9IgP+bxNq5kJsz
dPfQPoa2kp0l3m/ssuzMVh7SvKTz9+uPos1T3KTfRXx0uy29Id/A/Yt44y01
54wo6i/5OeIWTiPzL7XpJ/kP4rkW0RPXDbeR1gXx9+4xf0fut5Lsg/hQwxEd
FE8V0rwQr7VU2RTej3BemA+MutbjwQ9/D9l6lXDP0jIbwjnIrlcJV1Q9bF1I
votsvUq4Ky+WJYI9cV6Ie1S6n23e3k6aF+Id1lZvUKl2f2leUj216H7CEbN+
snUv4Rzmpl5NibaVrXsJZ/7V+v3dCWS9MH84dHVL3+nnyLyk/x913Mncyoj4
IeKltYNHzafEDxFP805qBX6I40dcNzPlQbsoe2n8iC//1Nqmrr69NH7p/019
NXbp/I74LeJZHxZPG1LNXhaXNBRh0Sb1dFvI45KG4u6dnC+RMe4yP9dQeLY9
fPzTPDeZn2soAmovOEXva8QVBoPeRk1xlMUfDcWrezdWzjN3lO0LDUXjTnsn
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
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJw1mwm8FtP/x+cZ2u7MlO7M4HluyBpZKiR72aKIEpF2+9ImsqUsIe2RPVTI
nqwhqSxR9n3f+dn3fYv/5+1z/q/XnXs+z5nvnHPmzDnf/ax/+IgDh8dRFA1p
FEWrqWzcLIp2r0TRG011FVH0s+r+UJk0RFGcRtE51ShqJhwJnyVcJ1wRPlu4
ifA/SRSNFW4uPE71twgvUnsnV9xWU9X/K5pxqh+rdn9UXUeVS3R/tK5f9ftN
/f5d5XiV/9Si6AfRnyb6f4V/FD5dOFI7PwmfIfy76j8RPln4rcJtPCJ8ido7
o+K2/hbN16I5RfWN9OweWRQtF15duLPw48IV4Z9FM0b4K9EfoPGfqva+EN5H
eLRwvWguFL5DNO2F+wlfJdxO+DDhK4UXa0L7qt9S15aqP1Dtn1HqPdTOCrU/
XDSbq/5g0V8uvLXwIOGrhX8SzauiGSn8s/BrwicK/yH8P+HRwv8T7iz6URpP
W/V1kPqp0/W56vdW/cmq/1J4f+FThD8V7iJ8kvApou8n2rV1faP6/qo/TfW/
CX+s9k9S+0tFc5jur6UrZk5Es6/G/7bo/tRcXqDyBNWtI/ypysNFsx6l6ocI
P692thMeLPyo8JbCg4TvE95QuFBb3dX2ziqPUP1WevZ41f/UKoqur4+iKRrL
t8JNVd9d9WuKbl/RX51r3ML7Cd8iXBXuIXyr8AMadzfhx0TfXOO/W3gvXffp
6qpLzUaLVP+ArkP1ew/1e7Tav07PLSl8f32VX6vcs+K9wJqkzfWFW8Rex/vo
+kPvMVB1u6t8XM+sprpprGWN+Uo1NFnjv0j043Vtq+td3ftb9JNUXibasRX/
7qHnT1B5rp55Rfe+E/5N5V26P4/vE/k9Tqz4Hu8yStcPwi/GHivj3ELv0kfv
coXeZbmebySa6SrvEE1v4Wa6DhDehI0uvKHmbZzKD/lGKlvrGqNbL+j+7boO
1O/1So/zA9G8xz7U/akqe6uvZqwH1oLGP0j1e6g8TvQz9ewxKrcRzWDRXKPx
bCs8RPha4Y7ChwvPFn5Hz3TWsxuqbKz6VSrPVP1zKturvlD5tq5dhTdQ+ayu
dsK5ygO0nyZpbFOEN1Kf1/Eu7PnE36oRpdr6Vjysp8q/odW1XPf+UTlV1xPC
O2ks96ucLPruqeuuFF49tPkZbC72t2gh/J2+6yLdH6o2v1DZQ3UdVH6pa3/h
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
h58TdBd0mB9EPz9yjugHwpdGznX8H7lNkXMXJ+XWP9sLvyc8M3Ke5PvoLpHz
JKcLbx5ZL/1Q+LLIeZIzcufu4l9aWbVNgW3xnepvi5wbPE24rfDWwo10PRb5
LNInqr86ci7lxbnzgcntfCmMH71rhN6/UWSfEjlj+DDIB+iaOMeMHDJ8U+SF
tdQ8PJ47d4v857G57R1yJslf5t2H6rm3VD89cj7n64FvwD8mcz4n8vkm9GX0
ZnRE/Ghg9Od3Y9ve2Bv315wnzXkHzj3shR6o8lK10ybyGShympmfoan5C3wG
Xkb867nY+aDElZ6NrcPDs+Bd16W2WeBVx2TO+SF+cYTKcbn1bXJEsU859wJP
wU+Mbxe/7u/EsSKfI+gb9Fv03F8F7o6cY/mb8D2R8zwn5rYv2hXOMeQd0fsv
y63/cIYLPsgY0AsX1Gy3kFePXbUy8El89vjQvwjjZvyMGf8955LQlclBfSq2
f/O63HuQc1sfqM2tU/vtL8y9T7cK+wX/R/8G20x8u6MS55hfTHvC34r+1sjn
sPbJrNfhP3my6vq/dH+Wrp0j5yRz/oz1eU7is2W3C5+bOJ99Fu+LbZJavqDP
EGfHR70wdY7qdaI5PfFZjRuExyTOk6WvsxPnz16PXpA47xc+z/mzOl1PRT7X
Rg4APvNZ6Eq58+fJiyaPm9z1I/Fr5c57J3d6br1jB/elzqNnnx6PTaZ7b0U+
B0du8hT0w8R5zehC/RPnNSNzBwgvCrEofM4f535fzr4lup6OfGbwity56+Rd
z663H/7e1PnOU/mmiX33+PCJke2Wms+MT5z7zL4elTg/HT5zEjIrt11Jjjd6
M/rz5oXzu+GxLRKf52N+rk3sF2E8s4XH57apyTn/Kvfcco7g3Nz2LHnUX+b+
Lpw7OCe3rUoe+3d19gXh+52ZO5+fHPVvhOdFPtfwfe41QM7217m/KWcc2Pev
BD7wbu71Rk44OezwtDWwQ3Pn2HMWgzOh7PXtNdiJGthkzd0O4awe8SLyqznr
h42yI77/3Hns5M+z9q9FBqGfp9aL0Ks/zV1Pbj85S+RnEZu5IfWewg6am9uf
zzmLObnzMMkbx7a6IHZeMedNsJM6qd8bc58R4CwJefHIzcPQ33Of+yD3njjQ
0MhnDTjzgSw4IXEuP7KgpcpbavYpwNs5b4qMm5HYHv5vr6c+T9BM+E99h480
lo9j5wv1TC3vLtL9her3sMjnXMh/byz8Y53XHGsP/fvM3N+RM5jk76OD9Uuc
p49t0lf4Go3nwcRn3O5JHc+dXu9zDvhOpwnPJFdAemaeO/+NOWQu+V7E6YjX
XYzOKpp60dyXO8eYuEk7tdsy9zdtWthnzjkpzqugr07VcyuqjktsLJqbUuvS
U1Q/SdcnanMNPT+JM5b63bnBmH1NbPDh3HnInOVBpj8b5D78GNmDzwU7+p2g
+91cs18G/eSG4PeEZ95Ys18GmU4uB3EnYqTzavYDwueX5vafc5YZXzF+ZPzk
yHFiCFs1mH/iS15X+APd+zB2bhbnFZqo/FnfaFnuGAHnqUcm5ifEbqYHvyj+
0a9r/t7kInKOAZn+fZ1tB9YD/ue4cO4ZZ8TIE/tf7HgG/mnsDvT+SuF8Ns5h
cZYRef1HnX38jB9fN4uEPDfOl2Gz0A52DetC0x/9KvolGvNBkc96/5w7F45z
avhL3o5tY96ZW6Zzdvuu3DEIzm4vCjpMPXOe2z7iXPPDNcfVyKN4pOYzM5wJ
/Sl3fh3n+Gj7ndA+ZzeID/wl2n9z+2w5a8a5Z3S86YnXEmuMtYb/E1uQHF7O
SSPHJyb2ZT4RdO/rc/vWOEu+IPeZHc5zkWOBfo3vlPjAR2EPksfyTGw/NjE4
vi8xCM6LoxtMUvt35/ZtcladfpaHvlYFHQxdjLM7KXOv8p7cfj/OoeOPQpfG
B8UZFfwbnGEnJv8weyexvvp50PfuyH3miPNon9UsV4jdn5Xbr8gZGc7N6BNG
f+tfWrgdzh5eJ/qliWUKuaufBb2IHFh8CHMS57nw3XdIfA7ivxyAzM+piOLE
OhXP4ve/qWafJmf3OPOkv+ifOuv2zwRbgLN96HtpYruAd4Hv/R+HfD0N
            "]], 
           Polygon3DBox[CompressedData["
1:eJw1mwm8FeP/x+ecLOc2c6Q7c3DuzVJE1pCtJEpKkbRRERWyZV+ypVSKVilp
X+072aMkURHJVsq+r2nxI1v/z7vP83+97rzu85nnmTnPzDzzXT6f79TtfVnH
S/NRFB24TRTpLzoki6J99X+HOIoeqIqiy4WfFh4u/JXwHWkU7Sp8cRJFR1VH
0ZhyFD0uPFT9dYWHq39n4deF79f4S3X8U8K3CX8hvJ9wHeGc8CzhK4RfFB4t
/LXwJcKPCg8S/kz4oFIUXZjTvLQ9rL6DtO2l/oL671H/Lfr9rsLNhGP9/v6Z
51dDeLb6DxXeT7iW8IPCtXW+E3WuTdo3QH2HaTtA7drqf1j9BwvvLVxT+D7h
HTT+BI1fp303qq+htvpqV6j/XvWv1/VOFz5U9+Nz4Voa30rj12vfTRo7TPMb
q/YFGl/W/Bpp3/7COwo/pPEXCz8sPFD4E+GhGn+H8PnCu2h8X/U/InyL8Kfq
P0Dnv0Dnb6jtIfXN1f7a6n+hEEVdNJepOv4t4Vnaf6iOr68xOwlvrBlFU3T8
tepvLry3+v8RHqGtrc51v+a/QQ9movoXqv9u9R+g4/fU8fqL1un4s4XvVv8r
whPUv7/wZcxB+HbhL3WumepfIXyv8BHqP6yoPi2wQ7SvpH17abwuIVqv803W
+L0zr5ffhacKT9DxC4Tv0tj9dPw84ZM0vwc0v5OFFwr/j/ut8x4tfLD+D9X5
62nfdjpmgfov0fjnNf5U9R/FM1bfLup7lOep8b01fkeNKap9pPobqX9n9T+i
/jt1/AthPe6t4++t1DPQ2C91f9vo/o5V/5NhPe+p/qY6xxidr732NdK+uzT+
Mo3/SuNP0PgDdf491be9+npq/BHChwrvJNyL+en4kTr+OO3bS/tm6PzvqH2P
2oerf7rw28JzhA8Tniy8VHia8MHCQ4RvEe4qvJPwzcJdhI8WLgi3L3l9sE5+
1/MdoP7ThJsKV6h/oPDpwscI1xS+TvgE4f2F/9P9mCa8XHi2cCP13yH8hPAw
4XrC++p69C/aouc3U+OvV38r4QPUv0W4v3Bn4SbC22vg1cJHCu8q/Kf6rxE+
Sng34c3CLwm3Y23r+bXT+PHCL6t/nPobCN8lPF94vPC+wsfo/t2h+9dUx7yg
Y1Lh84UrhSvVvkHjW2PfNJ6J3ih8opoHCeeE++j+3Bnu/8N6Xp1Kvp+JznWM
+q/S+COE62j8H1U+fx+Nv4pnqjGT1L9E7anqb6jxk3Q/zhU+UXhH5p/anrwn
/LiOP0nnP0rHX65j89xP4W+FC5rvGzp2ubY+ao/gHVb7LW3nCQ8Xnqn2osTr
+3Xhtmq/qu1i4ed45mq/rTETub9qr9fzvljnr6n+a4W7V9s+PStcV2Ne0dj/
tL+zcKztOrUv1fXsor6/9TzXa75FjX9CfT9r30qNf1Pb7dgvjf1N56+p/kfV
/4P2vau+gvAjwt8JzxPupG2I2t11/Ut0vsd0/j7MXbhS8xmg+1PAfglPq/Jv
8Fv76z53Vf8HmW1pQ+Fuwtvof0edvwZb0e/fzWr/x/WrfbLG36R2J52vlcb3
13zeDvZnWur5XpHzO1Gh9k3alqm/pK2l2vvo+HK4/umaz92V9hcfa5LtdXw7
9fdXf2edv7XO/6PuQyf1b8s9ULur5jBX56olXFPtJRrfK+c5jVV7H9ZXzvdw
75Lf/xuF/xI+Uu0e2p7V8bW1Lyl6fV+u9gfqPz3xeukpfKPwGLW7Zl4rPTWf
EzWfzsK3Cp8hvBT/rYvZR7govLHK62eWjj8y2EjsYS/93pXYT+E22harvVjX
21rX20T4WeHXhE9Kvd5m6NhGrDm176+0f1yt/k7q35LZNz2rvuM0nwW8I8L1
tU1U+/TMa/lszeck9XcQHhTs1+vcb+FzhFsL11L/fB0zQcf+E9kmnKr+gWp3
Uf9ijf8Xf6r+KeprpvEP6np7qb+l+nfAMOn6umDreQYaU2YdqZ1p24W1pOMH
a1g3jX9D56srrEuKftHzb6vjK3WPF2jswdq3SH2X65hPdL96CP+pY4ap/3Ph
B4WvUnuotk+FJ+MDNb6nxp+h48u8w/r9KbzP6muD39b5n9B8zxc+STgV3kPj
u2vsTtp2V/s0Ygj191D/m5rfH5ljkXt1riM1vrfGnKmx1dpGa9+L2kaH9/Ee
tZ/S+S9Q+2Qdn2n8K/q/h/CLel4d9Lxe1pjxGv9nZB+7OXNsdJ/aTTS+i/BQ
4TN13DL9/mW6vol52xRsC/bhypzvWaJ2N40fqXYvjW+j4z9jjeW9Rlgra4QL
ea8p1tbH2rYXvp93nndJ1/OgcF/hbYVHaP4z1e6n89XR+Vro/G2xB8IvaD69
hacIXy7cW/1rdUxF3muYtXyFjm8QOZ7dpPHNNb5NsP/PCx8vfJLwwcIvCq/S
MdvmfY+4Vx00n/uFP2SNqu86XeO9ws9j/3Xs59pXK28bga34TvsaqP2L9nfR
fG7Q+AfUP1v4QOGW6u+oY4/Quefp91Zr/3bqb6h9y7Wvj37vJuF+wucFe3CW
8BU8g6Lt69E6/0p+X+355WD/dZ721bY/3fAv2Au1SxWyWcLvC7+vZ/6mnnlv
tQdqfFPsr87xgfpT3gG1czqmPQmBzvmIxpyh+Y4WPEdzW675noBNx1YJvyQ8
Ur8/S/g64V11vp30e6fo+BY6fju1R6v/MfXfyrojPxCeIXytcLVwd51vlHBv
4bd0vsbChwuXhR8TbiLcOMQHTwg3FT5aeA/hp4SPFm4ivLvwk8LH6hqq9Ps3
aF8ztU/KbCs7qr+Tfu8SXd+KvH3Idmq3Un+3yPnDfB3/JTZC/Rdr3ynad3XJ
7/aB2t9cx7fW+O7CxxJravxoPfNTdK4zte8P7ftG4+rmHQMSC16r42cH+/BX
eN+IZ48VXosN1BxmhfXUVH0tSo43iTvXyb+OrHR83kz9a2LbQ+KjU4R/FB6l
/pOF2wn/ENbPEp1vV+1roPZG7ITwWerfrP6LNP+H1B6g9jnVfp8nqL+n9l2q
9rHqP17tfdT/jK7vOOGWwg2EnxVuJtwicv7wtPCs1M/rC+HnhI8iuA/x2AaN
vVn4feH62tqofYz2NdWQuho/l/xN+1YH/9xL7VM053uE38Am8v5q3+S8bfqd
OvY1rZ9T1T5cx2+j+f+qMQcEe3sZMVbq+a5T+2Wdf6CO/yjkBz3UXqzjO4T3
b1sdf2XJ134Cdlp4nc53UHj+26h9oX7zXrVv1Pi1VfZp+DZy0hex3eqfo/7r
1f+x+ienzic/Dtc3M3X+8Xm4fzNS5xufhfs7MXV+uiqs30mp88PVYX3fnTof
/yisf8aw1nknOHZj6vz7sMTv0/TU+cWn4flsSh2vH57Yfg5MHd+9qP516v89
dT5zROL3d2Tq+Gdp7Px/dOr4/s2Qr44S1r9oWex8+qXU9uxv4VeEW+o+Tsr7
mXFP700912+DvX009fr5Jdi/+1K/v98Fe35b8Kesz930w8+ktvf/C+/b06nt
9+/hfR2Tmk94K3b+fpx+866813RztcelztdXBnsyNnU+tuL/873UfMK7IT98
LPX6/zXYt3zmfPeExPnOhtT2rJFwVbXfv+9kV9dqexBfoP5VBdu/hyptH74X
/kTbw+o/QnMakXfOR7x3Tsn5caOQz/K+f6uxawrOyYer/0v1j9J86qt/h8z5
YKfE+U8THTc67xyU+LdW5vyxc+L8eXd8FPY7cT6+q/CnvGuJ88kdU8du+Ofh
+u39dI5bdK5Becfg2+h3f9H4r7Sdq2Mm87s55yj4+EmJ/R05CjHoltT5Wgvt
313nz2XO51sm5ocgE8jfjk/sD2pk5htaJc6nv0vtH/YS3hl7qzlMyzumwsdX
ZM5/2yXOz6cm5oaGaGujsb8RX6rdXu291P996vihfmI+5YfU/mrvxHxMMXN+
2zFxfnl7ar5kcWz+57nU9n0aca76d9H4Zfhijf+F95s4KWefPIt4OHasfmzO
8cL5iXOh5sJzsBuJ85t38ema477aBqq9Ep+h9j+p+aBjNe6b8H7Oxt8m5s8e
iB2L3Kfx3bTvf6ntz1GJ+Ze/U9v3Zon5tD+E7xFunJi/m6j5p8TDiePtqfAv
wrUS52eT4WeEd0gcD49ineccY/aCy+E+5hzTns391vmn6fyHJObruL934j+E
Vwv/KDwO/5HYPv6bms86Tvhb4Rv1P8k5Rt+S2Odie8nHiP9Wa/wAlg25rcb3
Sxx7krP+q/Yy8gW1n1L7NfUvFe4t/KTwIvKd1P69Brmy8OBKxwbnaszcxOsJ
/vEUtX9U/zaBzzpR+AfsUWq+6rXYfB/2U2FNNC92fjhIGGrh5dj8x4RKx47E
hMSG4wJ/RExKbPpgan89Rftbaj3dqf8X5RwTExvPrHT+Dsc3S+1byFmFX9L5
Z+j80yudO56v/hlq31fpXJYYm1h7Qeb4lTi2o84/WMerGc2PzbdOrHSsWVtj
vlDHsNT83qLYfCo2C9vVUv3/qD/NHM8Q13QmH6pwbENMSWxZI/C7rdX/vY7f
tmKr+98aAxIL1lT/POH26v9J/Tfp97YVfjY2/3dPpXOBPTT+a405vuRY4Vu1
56h/dqVzg9207yvtG5JuTemiBbH53f7C2wk/F5vfvFl4e+HnY/OJPwmPF95X
x64RTjLzox2E99H11BZ+V/i0xHwnOfOIxPkaufRCYt7YMfPLqWOKo2LHwMQa
5GRjE8db5GrkpAMS5//kqqxB1iKcwf1lr1HW6s3CDwgv0zlOz/sdIL4hxxqT
OJ8j9yJGwxfiE8k1iSGJJb8Qvl34mpLb9OM7iaHvwlflHFsTs9+Nbc05loej
HhybY4e7HlVyrPW1jh9dMqcDt/OOfELnsnMcYtOv1D9C/SNLtj3fhPHEqMSq
W8gnic20r6P6KnLmO+CU8WP4s27q3yT8gMbvqLVxmvAqzefq2Bz6t6k5oD9r
mhOGG3pH+Dz1jyGmEu5X8lzwifhGYs59Y8d8s8L1MDdytlJm/pO1DEcF33Oa
7uegxBxCR7h9bfvn7dPI14m/WYt/CR+mdvOS1956OIAwnliTmLN1yesV33hY
iG+XEq/lnSMTTx9Tcm6wd+CXmBNzIye8XnhjZl+RF24iXC+z78UHd2cu8Md5
c2rke+yjD59BvnZBZvt+Q+z1TY5DrkMORC7UuORzwyFlGttF+JK8bT62vzPn
yNvmY/tXaP7X5G3jpwmfrvPdkpiTeSvwo+fk7UPwJeSTZwrvIDyOd0n4hrx9
xnThAzLfm8HazizZJmGbMKJN4NpT5ydwom3V37Rk27SI+ar9Xmp/QE7WLNxP
fAMx+mL17ZhZb+iSWI+4uGyuGy1kXJU516rYOQpc7CEyHsPyzgng5Gen5ru/
VPt/GjsnNX/9VWy+96LE/CMcx0U69kBtQ/LOmdFELkmsR1wDH1J0/AzfsCQ2
f8o94d7cnJiPIh6Gf/4mNt89RNezhvxI+G9sT2q+7g3h34Q/zcwPNtO5/8Je
puazv47Nnw8K+RN6wu+8+6n56veFNwjvpuM/E+6dWE+oEl4jfBZxk3Ad4U+E
eybm91mPo/R7HYvmK6qF16r/7MR60mvCp6q/hc6fhHhotfrPSKxH7Cy8Srh7
Yj58Qmq+/4PY/CP2A1szRfigauc38P8fBn5mbWq9bOfEesaa1HrYTsIl8j3Z
jw7kGuhdetaL9XsdNJ/jta9Y7TXH2huZmE+bn3rt/qv+7eC/UvNvW2LrIwtS
8/X/xdYnLi85fzm+6PzwfOFxwoepv4bwRSXnF8cWnX+So8FFkMOQu+Gz8F1o
kLM0vy8y89ObEvP9aKJxbE0ArZQckVwYToPckZyN3Lp55FyOfIl89efYet0T
qfWU34T/DfkQ+uem2HrGsMTvNhzinprjNYltMRz1H8QjxOE5c9Jw2DM0vzpq
35GYH7yTuDxnjhkOHRuALbgtMV9/a2JbAYdarfO/mpq/zCXWj+am1pM2EhRV
O/6Cf8wn1mefSq0/bYitDy1MrQcQpKBHPZlav1ofW39aJzxV+ODE+uevqfm+
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
Mu6e
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt1wm4T+UWx/FNN5dzDsU5knMIlSmFQtIkJWSIZEilFFERUVKSknkmQ5kV
FZEUDchckRINt0EDrqSnK2Rqou5ntc/znN9z9vru33rfd++93rX3v8KdvVr3
LJgkyUd0Kv1SJknKZiXJ9sJJ8hOVL50kr9EErHLRJOnP/HF2ktyUkyQlsKdo
gLzPscf5EvF1mUlyl8N1WAe+bGwSPYZ9gT3BV0DclK8rth47G5tRIkkW4t+Y
9ybxXXLPFnfhG8/3A18t7ANxAbLUZDxWLy9Jivu/Q16TAkkyMjdJtvH921p3
yJ9o3FHYIGMWFDeT203uBjkb+ArxfYWPLpHmzuS7XbyE72u+XJ6l2BisonvQ
l3+73CXYCOws7H5sW3Z6fXGdk/EptJyntfxijnP57uNrWzJJbsROwypgfbB2
2A1YUSwHuxtrg3XFKmP3WMsk4/5k/G5YFexebDL2P+we7DysBzYV+xl7ALsK
exJ7GfsLm2E9t2EvY4vpgOu9j+9C7AHx7KgBvoF8f4ubUBdsLfY01pZvPrYN
O03eM1g77HlsO3Y69iA1xkZiy7B/5aTP95jnc5Smu88NPbO+eBO+UXzLo/7E
3akG1hubiR00bw+sJtYHm4Udwm7HcrFbsKHYTqwjdibWARuMfYt1wSpgnbFx
2F5slrV0wl7BvsHyeO6mqlh3bAq2n68zVh67ExuLfY/dgZXBOmLDsd3YrVgO
1hZ7AtuBTTHHjdhz2FasKE8nysNuxYZhu/im8rXB5mWme7AYz21UGrsZG4J9
F9erFmqoi+o0VG10Em+M+xJ7l+9t/reMtR1bgJ0vXk8rsclRg46f5fswtmjU
Be0Sl6Y62LPmuAb7UVyBLscWYHPldpb7GrYTO4tnDnYn9ir2HVYWq0hvig9n
2HfYQLmNseNYTWqGvYFVwt4SH+VTCsnj2LnYG9ghrBD2GFYf24mdSbWxudhW
6uraS7gHg82/yDoa8P3AU44u5XuBp43a2ut8sSLq2yQV+Pq7X63lTefbxPeI
+Dq5p/DVx27G3pH7MD7fHNfzznbuDbnv4Quxe2Jf0hbsJr4BWBXxRL5l2Ga+
yti+2Ev0AtbIHMeMX4OamuN1niux78SlqBY2B2uC/SmuSzdiq7GrsX3i8nQZ
9iI225h3GHsp9i1WhqertYwz76XW0itqqXTai6InlcWGxX7H1sVeiH4rdxX2
JvYQdr3j8cGcyxD3o5bYhKgrLDPyaLl4Jd5Qj10jXhG1IH4G38i3UnyDtXQw
b4Z5H3fuJXMswKdF7YjX0QqsPVbc8dp4rxhvXvSIeFfwHVAH58u/xVibgFbG
KyjuHb1H7kdYd6wUNgRbjFWWu8o6/pDrLxnE01x+Pb7jPI/Qi3zn8a3JjIuy
J/0bwteerx9fJWB81DVfM+yo41p8Lfmalkx7dPTqs/lGR//gu9Z4B3iqUEO+
V6KGsFudn419gJUWt5B7mdzf4j1IC+Q2xH/mqUzX8C2RWwV7W3wi458lJk9i
k3hvkDMXmEP79ewvo0c7PxV/ml6PPSm3nOPpNMa5PTy9sSvFT8hbhJ3A1vL+
B/ssagArxHM5fcVTnM7HpvMN5ivJ0w5rTyXtqzXYp9gnWWmf+T36M7bS+d+t
+TealZvmnsHTNb4F4n2BjcEuxoaLl8o9KvcS834sLkIVsUnxPsc+EWdQpXiX
YldgO8Ql6AJsBtbPeIfE9egSWm2OHL771dMX5vk86o1nFb3veHNW2i9nyu2P
HYk+R+2w17AB2ElxI7qW1huvF/aZ4zzKpVewh7Ffot9QG7lL5b6NfWD8LdFP
sJey09xPeTIpK3qj3JrYTj1peeyvEun31djoY+LB0e+jl7nPj2CHY99TW+O9
GjWPbZKbo6+d4D/mA6iRuvrZ8X6qpr4ai3vzfS6vbPSTqBG5o7E6PMPiGrAj
2CisNjYUW4Idxi5y/7aI//YcLSMZhz3F14JvJr4ZK8wzFC/muAt+V7xbeCZG
v3M8lW+dcwX5hmClsG7YBOxreeOj9rHJ2Bos4RuHXRPfifEcob+z0/tydXxj
YhNpn/s3IfZcfFuJ1/IViG8Xel980ppZkrFyn+PrGvPSLqwczxgn71Ubu93D
FjxH3L/a+IdyT4n7xTcBHyr3nKy0bqN+S+Wl300ds9L9F/vwQqyu3O2OC9O5
cp+SO5KvVlb6HON57jLnW3hL827FP6TVPDXlvuv8MWsuJXcUzzC8ovMPxT7H
9mHDsUpYv5gX+zG/H7TKSu9J3JvKeemaz8X6ih+kL81bwxzvOD5ijjPkjpTb
B6vPNwhfjJ2M90T0A3EZuhibEj5sd37NR+0fz033x4n8vRZ7rpB5R2AXGG+g
eLhr3G/8M+gL43TAW+mV7/NUw9byFMxM6ybq52vsYTk9eHpGXxD35d0be5wa
883PTust6q45TwvezTwP0vfRq2K/Ojcvvx8cFFel86IerPkx7K8YizrzreGr
arzV4r8y/vm5kgzOTmtjnv24J77n7aMG9tFobBq2GyuOXR57LSe9zubWMSu+
i8QLzTHQcRGsPd8W49XJSftU9Kse0fPFzaiI4zZ8i/geNd6fvCv4rsCb4puM
1ZOvbryz5M5z7ng8I6we9ij2PPYbNp33lnjHxvPGSvE0pcLxzW/d3bFP+abx
3YwtzEyfSzyfXnQJ1h+bj/3KVx3bKP7FfbG0ZAR2AbYhnkfRf7ZpMhw7x8Hr
cZ+Lpr8ZB2A94/sn3qlRj9hobHG8u+P3SdQL70aey+R+KT6dqjk3jedR/Kj4
injPYMuwd7D6cq6i2+PbIv89syJq0fp+pYO5KY/zf+B94ncIT3NzZDg+VW5r
97mVi2mBZUbPzEq/CeLb4AHePbGO6PfGeC7mKJmO10Du1fF7TXxffANmpu+2
eMcdMu9D2H6sTmZ6jXGtl0bdi0+L+sOeye8HF2WlezL2Zm5eurf+m1+jUatv
Gu/duP/WtdBzW0Bjg0VPtIaG1Ml4q7LTtWzKf5/Ee+VFvvXRc3hqF0330w7r
uJeqm7cxNiO+qeRejG2L3oWdg02M7wPXlyWnP28j/D1jzcYbxO+nuD5sA/Z/
yawslQ==
            "]], 
           
           Polygon3DBox[{{6530, 3084, 2903, 2902, 3202, 5270}, {5268, 3200, 
            2885, 2886, 3201, 5269}}]}, 
          Annotation[#, "Charting`Private`Tag$120958#1"]& ]]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1:eJxFm3ncFtP7xx/NfSOaGT255/Ys2UpZU1ESkSyRqGTfRdlLKkt2ISJL2rTQ
vsgSkq19IdoslQpR9iRFUrL8Pm+f8339/pjX+cw115w5c5brXNvZr0OXszpX
KSkpuT5fUhKp3Ke8pOTCXEnJh1lJSSEtKckJv6Byva7J4vkpNc8rKisrS0pu
VVkh+i0qq+uqIv7nVca6SoRHqyzLm+cjfaCxaHsLnyR8alF1CB+vb/UVvabw
wshlZcDv6v27hd9T+ZP4eojvQH1/P9H213WueBrkfQ8+WM/Lw7fuTM3zZyKs
ch9diwslJX10/7f4Vup5knd7fhD/46LvJLxK9H1V/q77vfSP/VX+q+fjRH80
Lim5RO++LrxR5RhdRT17RG37XOXyzM/H6apK2wJeI9xQ5SRdXwlfRr8GfGZq
fIbKDtStq47oR6h8RVdd4dvz7pcVwkPUhstFf0v8E4WvFJ4u/KZwJ+HZwsfp
Ol94Dv+ofj5HuExta6370cKnq6yq+r4XPk/XU3r2nepepbI5Y6Lr/NDOSeEf
+2T+jxUqLysrKTm0aknJOpVPqa5TxL9O5RO6ThD+QuXzFRpj9d0J4p8kfJpw
C+HRws2EjxYeJXyscBPhF4RbCZ8ofKDqKOiapu+9JPqZop8k+gThE4WbCU8W
bit8inB18Zbq+lX8I0U/RvSjRB8k/Jnwn2rnc8LfC1fR/HlW+DvGW3i48LfC
JcKDhb8U3iH+YcLfMPbCzwh/JfyX8BDhtcwh4RHCPwhHeneg8Grh7WWeP0dF
nm8TRT9J9OPUnvHCLYSPFV5V8DooaHw6q79+Fr5B5Yd6vp/6/BPhz8XTUvSm
4qmtbywUrVal1xTzfL0Wbw/WRhWvwX3F15FxU/1fqJ66qmeF6GP13ea6byp6
M723R1gvlGnA9B/9eJ7wF/ruqSqbq75xevcEvXuM3n1VZZnqXKw6D1J7flZZ
UHte07Oaon+rcnZi/GHqtZWE9T5N5Wu6Yl0vq8424js58/xlnq8Lc35ywLXV
j6dqjrVQ2ZE5rquR6Iel5muhshHrQFdj0cvVnpORPWpPpHa/KfqTmdcEPMzv
A1TX/FK1STzNUq+LU1XOUNkOGSb62Srf1317ldfmjGvoOl/3q1kvKjep/EzX
s6qza8AVrDG14QQ9r6Z6uuh+ec79VVO0VOVJKndV21YJv6y2HR7+4USVnXOm
P6E6J2eu75vQP28GOdA49APy6hX134PCp+jdpcKPhH/5XPi2vNd+NZV9+Afx
fy350FXlUv3/3NT1Ij/m5vyfPJsfe6xWiWeW6uktesvU/f8G7UHGRZbXyOe5
4b2Famcb4QWhr2aENn4m+rF6v32o5yiVs3St17NjdN8utH+C+PZg3DO3ZUGo
t1Pgbxy+Fev6Ujzn1ZC81Nx4V+28i7WOvA71LQt9/qf4tmtd1FJ/H6hx7yz+
y1X+Jfqfos9UebH4RunaVfVv0/3bzEGVh4k2RNenur8gYOrqoPfbq546Klvp
e0NFP01lPZXDGT/xX6m21RHPyWrXlpz76g+9e5Hol4i+otTym3m+V9gXXgwy
H95nAn9/zaWLxF+3zO1EbrPHdAj87B31Q/s/D+tltureVul+YO49KfqzoV2f
ZF6zJwuv1vo+F1mjZ+cwvmpbJ31rpd6/Pmd6UdeRYdxZd1eIp414FgSepbru
Fb1twPDfEPr/PtEnZZ4LazO3gf1wVuZ5/lHgfzzznFqZuZ+Hhj5/UW26Kugb
F4a+Zcx+Ce+yRoYF3o/17s853zOOj+qdY9gLVLbVNVX0NugmRe+tfcX/iuRP
O41PS+H+wiuF/1D/VWf+6t1ukf+pbfjH/dWnC5C95Z6bbcL83F3l6bquFq5a
9DyvlnmNn8X4qqym62zmpMrd9H4VZECl+6ld6KvdVLbS1QkZpe+3Fu6ALiS+
lmpbc9VZRXiMcDfhxWrzcOHOwl8KTxe+B5khnqbCjVlPRe/vqcpvY//T3uhv
4nmTvUJt2Rt5J/7TxL+f8Dx0JtG/Up0zRL9X9Kq6/0d4Fz3fjAxg/qmuOplL
6r9ZtDU5y/32AT8XZOO6ICeRQ8ijg3LWq24Petb+uj8357XHXlQ/7Ef3p8Z/
Ja7/21Dnith9M0XzcFXs/W6vIMu/0/VSZJ0H/rfUxu6hzfvoWin+q/S8mFqX
hJ+9dne152h950jx7yb8aWo9k7Gj/VNFfyNzHd+r/Je1obZdrrrWqK+m6d27
0aFUf3fR9kEvLlrPZH9Hh9qeC3qUeM9mPYr3b707SPfX6t2tFdY1Owr/UWEd
eg+1YUeFdfE9Wbs5fxu9fHuFde5S0U/RfYnak1f5j+iDVc91mdu+a979/4vo
kfh3LzdvpKuanvfn/4UPVLlFPE/r3av07qfolnrvbr3zq+j9RL+StSb8ZGId
Y4PwE8KXZt67ds57ba4Tfb7o94u+Xvgn4by+u0L4BeFbRf9WeLHwA+jOwlOF
7xL+TPh1dHbh1cJThO9ATggvEu6F3FabftD3LlL5nejL2AtFXys8T/i+zHot
87826zPvfmO8PhTPCPF0Fc9S4eeEb8rcHyVhTFeK/pLot9MPwi+ypwp/JDyS
+Si8THi88C3CHwuPFe6O7qrxvi5yX60S/WXRewovEX5WuIvw4LztFub536L9
pvIO/UumuXczehO6nvif0bMbxf8wOp54eqfe75Dh72p8ulRYxlWI/2nhT/Vs
q+TYO8JXCrfTuwOEVwlvE326cEfh9qJPE75K+Cz2PeHLhNtm1isbB92yq+hd
RV+hd28UvlZ4mfANwtcIfyJ8rHiP1nWO2tRZ9OtEXy56D+HbhFcL3yJ8u/Bn
wt2FbxVeJdxN+BbhlcK3Cz8gvEa4dtHrlHn1luiXit6GNSh8sfAZwscFnR99
tWbRcrtS5REqawU6Ze2A39W7d+jdC5F1Rcvay4XniH6z6OcJzxfuKXyB8Fzh
bsLnC78pfInwmcLvCz8sfDG6Tc71M35TRD9X9NMz90eT0CeviX6O6K1Ef0/4
XuGLmOfag0/R86eFZ4p+PXJB+HXh84Rbo0sL3yh8rvAs4RuEzxEeqLqbhvp3
aM40EX1hmfuDfqFdd4q/t+hry7yfsK+gP90j+jDRvxW9St505Cm4TuBplLcN
hv3VsKrL2iof1Ltv6d31ZbbP4GF9PST626L/JPo9qetBbtwn+vOif48NlffY
MBYP6FlD1ltqm6NhoN8v/kni/6HMuvhZQTcvFb4Q3Z5xrrStfglzW88Ozdvu
386eWmp9qbfqeUc8G4SfEF4o/Kvw48IfCG8Wvlb4IuGPhK8RvlD4wzL/E/+P
/LhN9F6ifyH6Y/p+U9EeCfrFsaH/O4nnDPEsKbO/oVlY133hE38XlT3F86B4
vizzuB0T3v011LVdz54Uz8fIAmxq4U/QH4V3Es/v4r1L5R2iPyT6V6L3FX5f
eJPwwxW2TyolB/oIzxX9Z9Fzul8vvKf65jHRFwj/Uua9F90anwH64x9Bd8JO
go6+jd7XMeh+F6mNF+u6RLiX6nkNeav7iaqnhXjGosOn5qum8lJ4dV0q/jG6
/0flqNR1XBDqOYd+ol5sE62FMyPvdwdpjK+PvAddmHed8B8s+g2R98e64lvO
Hq3/elTPF2FTUqd4FgufXQzfz9sP9YDa/Kba/KP+vb9oT+e9By/N+36T8PN5
f49v4f/AD7JF+CzVtVD4RJXj8243beY/zg/8nVReqesy4UOx51VenXk/uTrs
Kf+GfYi9ukPgx1/2Iu+FvjqRPUp4p5zbfkXeNJ5fHnhGpO633dDb8/423z0p
5/tI5a363/v1v5+Xmfe80OaR+GfQx1J/n3d572bx9xD/p2X+5qXhW99oXNpE
1jEO0X/dyL9m1s07hu/2DnvTVr1fR3wf676uxuVu1TlUtG9U57vifU/X/eL7
XXOul8pF4ntDtPl524VHhj0aHeehwM8cu0R2R33JnpnIZeEGwkvwkehbM1TH
AfrWXPHNQx6p3pvzvgefUTS9kcrvUv9rI5XXq21Xq46Py9yGJjnvqTuX+z/y
le6bjqF/rhN/h8R141vAZp9RsM2J7flQ6n67PIwXNjq2+kLxPCzaB7pGqP6b
VM7S1UXXY+qH3UWbmnpelIS5cW7RetcpKrdio4m+MfE8XRrm7ivM98DfVnzv
C5+g8om85//juu5Vmyfqve/K/P2FoQ1XiX686ItEXxLqZP4vyLuep4SHqm3l
Kt/W97uJNifvf58Z2r+bnl2bd9s2SE+YHXjKsF/Uh0vZAyo9fgtCnRtFeypv
v+tA8RxQ1XsW9j3jv0h99a2utpF13cvD/Gce7kjs27uR8S7a3rpC8/CD1H6q
91WeGNYsfstjxHNP3n4z/JEtAv3Yovnxb/2beH3flPr5iYGnTdFjRn/er/I+
XadF7udHhOPM9jPzpV/mf+oX5An7A5j1MEf1j2TtoK8xj5B9uj8ws6xCRmFn
PCl6XZXv5N2n9OfJRfPAu0bvzxQ+jD1GfL3Fs1/q9fFQWFNr1Z7WKoeL/1F0
HOFlGsOB4mstngEqvxLP6YyteB5DBxFeLp42en4WfZfzPfQh4h8jWtu873nW
TnhH5G/2Dt8dqfL0vL/XSuUZuo7PuW3vhvXbPPRts5wv+pr9DD7atj3yftJP
ZU5lPf37DvVBo8xrgLXAXs//8J0Boa/e1nVN3voOOhg6D/KfvaC9yo/E10d4
f5XDdf2ld4el9n31FH0LNq3m2R8q9610DAQ/Oz72HirvyNuHy7zuFub2tNS+
yXfw14l2o64G+lb3wIPMWad+PkPlc5nruDPUUzPUT2wDuXQL66lgOdwhyNJZ
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
AYqqvqY=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtm3m8VdMbxq/uOXRw1uZeex/3npskKkMSP0NCMheaDZmFzCIJmTNkFiXJ
LCRRiZCQ5plCkXkuJA0UiX7P17P+2J+znr3W3mcPa73v8z7vuxv16NXlknoV
FRXrKysqcvodlFRUtM9XVPwp/IDau2UVFa+o/W2oqPipXFHxi/adrf7Tte9n
tU/TtkIHloS7aMy3wkeov7vwN2pfoK0gfILGzKiqqJil87VT+2z1P6j2XG2X
0dax6+q0X+PXqr+5tk80vrP6d1H/qGJFxUT9/83CLwjXafz3wqdr/G8ae5/2
jdW+fdS/QTfUR+PLOl9P9f+l/j21zdH5blH/KI1toLE/6PguwrsKv6jxbwlf
ItxP+Ffh+cLzhI/Vsb217xm1d4z/v6POu0z9vYSvEV6h8e8JXyx8pfBPwnOF
f00rKs4THqb/myd8g/ofEQ7CXwm3Fy4LP6rxrwgv1PjWwjepf5bw9eofJlwU
/lJ4qvp3E+4jPE24olRR0VLX96X23amxR2urU/sxne9V9b+g8UH4RI1/TXhb
je+i8R/pWfyl53OyxrdX/2yNn6n+Y4QbCD8uPL7s+dBO7+8k7btL56jR8d10
/GIdv17HH6vxjdQ3XONf1/iS+utpfA/ty9Q+Tv17qv2q+t9V/wnC+wtPFJ4i
fKTO31Xne0L73tX5u6m/pdqvqH+S+k/M/DzeEp4qfJTGH6fxo7XvfY3/UP1L
OL/2/6L+w4S3Fh6k8aOFjxfeS3i88GThjcJ76PjPte8Otb9Kff95HV+j++ma
+fm+pPFva/z41M+jp/7rHeHnhPPCK4XHCb+t487S+b7lGtVuq+O3VPseHf+C
+g/N/PzvE35R+Ekdv1Hz82gd/5LwIeovqv9e9Y8SPkLn6KzzDdS+lzXmC86p
53mi8Odqn6BnepT6zxI+Xu0jdfw2ag/R8S9zvHA160l4rPC5OmYTHd9V+z7U
vpPUf4ja09Seof4Owjswt4XfEH5P+Ebhp/Xff+p5zBfuoP+7XPueVfsmbcPV
3kb932h8f+FnhFPWvvCpma/tY52vWsd3F24rPFV4uvqLuubvdL7uuq4q9Z+p
31XCL2nMezpHvraiYoLaTbT/Z40/Q78r1f+49k1S/+E6X5Xag3W+MeqfrP6e
6v+R+aP21up/UO0ZGvud+u/Qvv3V/4v23U6//n+Z8I7aftbYc7RvXc5zYpbm
dCfWuMY+p/O/qeM7Cjfm3oUnCN8o/KhwovN/Lbyf8L96n1ep/2nhxjr/X8L7
qf9v3d+GGr0Xjd9B+OG4Xkfov7blmejYjep/lftV/6PqP0/7emFvdb4Nwo8J
HyM8X3iN8N8aP1a4kcYPFd5Gz6uT8EL1/y3cU+MvFv5a+E/GC3fP+ZrWq/0E
9oxnrf4/1H+28IXCXwr/LryVzteBtSW8Tvhx5p+O34BNUfsfjT9JeL3Ot0Ht
H7TvUOFNtCVqP6vtELX/ZU7x7piPwturXdTz+EfXP059jXX9w8p+p7zbHQqa
O9U6l8Zdr/Hfa18LtW/WdoDwGuF/NLafzneP2hVqL9HxbdTfV/0LtW/nxPZk
gHBZ2wFqL9V2mNqV2qoT24871G6o7cDE6+1W/Je21ozVdpPaRW0N1D5X/3cJ
vkzPYz3+T9d/u/AG4duEq/S8OgovEP5L+CyNv0D4C+HVZc9p5nZj3V933V8r
vf/Vwn9r/wr1n6PxFwl/pfFrhQ/KbF9uFx4pvKnGz8l5TbI299e2ido3qv9Z
9Vfq/98Q3kXne1J4E+HXhJvxXIXram1feRa34490/Q9g79R/Z9l+AH/QRtd3
uq5vrfqfVf+26h+k/p+FB3C9+r9bhR+U/Vqpd3+Q+p8R3lfX849wX/U/JVxP
//c670L9TwgfoP5K4VvUP0K4tXA94f7Czwn/qfOPEK7V+AeF1wuPjP79IeG/
hJ8XLgsPEV4ufAdzQccPYD3p/8YLN1X/Y2XPz6H4N96J2qs1/uHoP+/DPuk5
/Kr++tp3eLAfw58drPs/Wfe/RuOfUl+1+gaWzVngLm3Vf0K119ODcb69r/Yq
jR+q9pYaf6/G5/S+pqn/JjiF+tep/zm1a9Q/mPvRvsHqfx9/ofYUXc+Jwm9j
3zXmN40fovbmat+t8b8LPx3t7f3Cl+qYa4V/0/2/L9xM938F81n9m2t9HaLz
XSv8tcY0h39pfB+1f9T4fzX+ct3H3vIHb2nfnmr3Uf8taq9V/wfqv0L4VuF1
wh8KH637mazxNYxXu4O2GcL9hUdiq/QfrfV/vwpfovYf2qar/3Dh63RNk/T8
9lH/YcLXCr9dZS7WRPgMfKrw/4T35vjg9b+38D7CvYRPy8wVP9H1LNf1nCLc
Odq72cIXCl8hvFR4Y9n3v5eOb6p9Z+r43uq/Xu1V6l+o/u2iv1qkvqXCVwnf
Jfyv+j8WvlL4zji/Fsf11zFnGzYKrqrtOvy/+heUbeexrSU9y3Or7Z/f0/2v
1JiZjI3+aDON+1zjrxa+W3ijjv9EuK/wbcJ/Cn8kfGvk29jHH5lPsf91uECc
X6muZSttz8M9tQ2K6/lT9V/L/BLeVPgz5ltqPvq88CLh/2W23b31f1tovrTX
+SbpejfXmD3U7qP72Ed4Fzi62ltofrWrND/8Tcc/AscUnie8SrhHZn77qfBK
+JnO8ZaOL2prqPb5mbnDD+r/J8YPY9WXx+fDLTXmbeG/dU3N4TPaxgn/gw1X
+3R8tI5fouN/1fErMnO3XXXslnVew6zlbXWtZ+n5/6D1cn60vzdo/MEad5XO
9TE2kra2hjr/EcLX69hbhQ9U/x/Cm6h9m7Z91b9MuKXaq7W9kTeHuEvty/X/
N6vvD52/nv6/VWY+1094uP7vQOGc+m8Tfl74XeGC8BH6r0qNv0i4r/Ay9VfU
2R401rnfZA6ovTQ1d75H49eqv4/+M4v87Y4YXz0u/Jfw/XC7zPb8FfXdrP8b
kTlWGSK8SZ354yMav0777uP6tW0T1+/vuoZlel5XVzre6c/6qPXcuoz/1fFL
1X+V+per/yb1rxR+SHgLnf8e4S+ED4Cbqf8q4aYlP//71V+r49/Q/bQQPl/4
4rLvuU7n3iLnZ8E14nOTnK+dNVwrvHnOaxsOlCWeL3AjOM1WifkGXAefvE1i
/46vZo7/VfSaYe4Ts7bUf0+pdCxLzLZTYo5JLAcH2iIxX4EbrSFO0vO5XNtE
bJnOcaD6+mr/5WXP8Vzi58ncJwbCh5yq+XdKjTlaIYl8KfMaqZ84vmbt4PNn
wnHy5gITdP491HeBzn9J2TYb2/2i7qdDjGnG6/fUnGMdbNaOwTYCW/a6jt9d
7fO076KyOW8WbOO2jtd3vo6vn3fsBie9ibg+H7mq8HnCm+YdG8L5J1fZ5sE3
ZupZ7gdXjuulmfq3D+agTWsds7+r8cfkHMszZ1+p8nxlLs/S8a3Ut1z4Bh13
sp7RiVqn0zVmJ7V31PiP9P/38P86X2PhufA+4YN1PdsLT+AasKFwG52zudrn
6lwXlm0T6wfbWGxlnca/jN/T8XsLN9c2VX3facwjGrtQ/7lVpePD84VbqH86
9inyhzeJh3KeI8yV3YWnqf/7yM9n6P8PEr5SuE+cz6xlfFCp1nOUubqltufi
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
2EU=
            "]], 
           Polygon3DBox[CompressedData["
1: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
afa787ZSN1zdePYYq6Tu/zFTKFM=
            "]], 
           
           Polygon3DBox[{{6627, 3729, 3548, 3547, 3847, 5786}, {5784, 3845, 
            3530, 3531, 3846, 5785}}]}, 
          Annotation[#, "Charting`Private`Tag$120958#2"]& ]]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[
         TagBox[{
           Polygon3DBox[CompressedData["
1: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
X/H7lH3+E+Mu2T9Yr+xx9hJ9mMZ5qmSfL7wmmpXsc+8imY5l74PpFfvf67K3
9M02Zs9k9uGxQWczz4n9rIvV1yHq83i1zxS2TZuV7EP/rKOD6H1r7cNjr86J
tbEwvvNz4XucF3ttfuyv5hW3W6ndV7wvS56HwYnf4zPxm+r8Ah2Na20zzwm7
3CPof7Uv+uGHMee5bTi2nHPuPT/8PeTPjXux7ecFfU3J8QcxS8+Qrwn+63rf
1ws/F/n1xX81dT+vqH06t12eo/ftHePkWdCXx5hfk9yloleG/CUl+439w4fE
l+SZTeO5MzTPH0r2hcLfYWmMj+dcpmPjWsdS0NzPd7uCbxbvdUmMs2/w0bN8
X8ZDjNYn+qSfQ/WsE/SsZwvHH/j7xBdJxXRa8Tv1jndhP0K3Iz5NzOO9vtP7
Lxb9Vm5fcveS/ckf1b5Ysg+B30ssRxyHr4s/P030eernVLXvq59TE19/V3St
/I975Xcc0cR2hHuJL+Ymvm9t8VujUyQzWu1revZukvlQY3lVdCdo1nXiNfKH
+tgk8Rzz7X7X+Q2692j1M0ey3fC7GtimdxedJI438e1fVZ9tEs/rX7p+Zslr
hb5WN7bv+kJqPwH+pontbxfRv+v6gpLXH+M4L3zL/32jZfHtBkp+UMl+L343
vi6+d72K46+K2oYVx6fEqaWKY0ziV2Ix/MBxkt9K37FR2deIrYg1Dqt1nEe8
R1/bqt0m7BF2aVbQrdmvZT8D+3ZK2Lh5YSvRGzugZ4JP7MOY+X6HJY7D3tR4
piUeS33NbafE78deYs32ibV3bOJxvZ3aNhEDHifeDSXTXEP39gt9uGvi+/6R
7D+p52438V7MHa99kHu99435vK3k+JRx9JJcG7XraDzjEvdX08TPuT+exXpk
XRJ/vRE06+xwbIba+4hHIu64H99W9E2i7xV9sOgLRV+bOC7H/8HHHiD+BeiS
xLEP6wG7PlX8b7UWfkitw3qELhoR6/ACvcvFOh4T787csQtY00Osmdy+GzHL
JaH3TtQ+fqHk9U+8h75l/RPrTQs/jnjvED3vOrV3aDzDRV8u+ibRIyK+u1l0
Z/Z6yT7ZUHSX2hv4VqJvEH236DGil4m+XfR+os8SfTk4j+jrGTP2UPQlfEPR
40XfyL4XPYx1IPpG0UnZuqFR6OzuobdHhm+Hj3d4bjt7i/bgSNELdP+Z0ldT
q7a5t4o/ObcN/0TtMeIP5fuL30yyI0UfiY9aMQ53unijc2Nl36mdkHvdHqG2
fsX4GLaT+IE44jxsn67tL/p7tYfqOED0D7njS74X36mP5BZigxLHoPV03EO/
4r+vb72++Gsyz/MYjfHz3L74R2pPVjsVHalrM6teJ0vE78u7incpuic1Xgdu
Rzydsvd1vmod6TP1v0K6rJLabmI/D1c/Z+j8P5qrK8qOt4m19xVvEXYHn0vH
z+Ltqnf9qOS1iK17NOJx4vK3JH9ryfuavQgNltI9vhnxMj7LLcE/KjAfsJ9+
wWe/7RfrmXXNnM2PeauXem+yR18vWVeiJ1uk3rvokqapvxE6ppq6P/bxDqn3
KDZhUuBL4EzL45ln597XK2IvTwv8BBylY9gk7E3H0AP1QmfcHXpg09DPr4h+
T896pGTbNCDuRZ5n4RuCdaCLeBb4DP3cFfrnndR9vh3x+l3R/wrJfaR3/Vrt
jqnHgg38JXQmuhPMYlbs/T2D5p65Mfen5sY45sV8dgsaW/Zy6nl+KfX6Yp19
IP7KktcQ6+eh3Lb6D63NX4J/a63XIvfcrvbA1Pb9Ko3n3Vir9NMyte5El88N
3XYh8yD+7JJt4ufhJ+AvvBn2Fzv8Rthl7PPPodvR8c8mfq/GibGiU6Lfz8L+
Yoe7p7Y5+A5dQua/Nrhk/GpxzNXsmLc50aJXXyv5nPkhXlkWMSNxNLjDgRGj
XB9x6GN6xpdg/on9jd+0V17Vnnoktb59Xu2K1H7Cc6ltEjZor4rjmEERy+BH
4ePhHxLPEud0UXuY+nqUvqv2DaphC77l/dXuoLad+p2Enhd9R2qf7ym1W2s8
12jf76P2ytT459Mx52BYT6b2J5kPfDRiWGwTeBC+Pv1M1/WDE/t9qxi/rg2U
zO5q+1QcAxJL4gPxjsdXjfE+I9lXCq/VsTGeh1PvpWeJJyV/kfrcJ7cOZB1N
AieR/F+az2NEH6S+dwEfKuwb4OPi0xKvTdC1/XRtQtWxxarccQ2xzpeijxZ9
kOifRU8GRxL9Y27sl7jostQ6v5X6GYXu13NL+EeJMVXilitSx9H76PrtGsN6
aptJfn21d2a2Ed3wx3VPWXSLxLkG7Cl42Zrca4SYd5b4dWXnES5UX2113l33
/pbZho6oGiMZGjEpvgrzj3++OrNNHCmZo3T0F/2T+vxNz2smeg+1k1PvVzDP
XzPb1uGS/T2zHR8l+nvJ5aJ3QjdqHPvrWTuq/U7nmfg7qp2ZeR464PuLrhW9
negTM7/j9qLvEj2Ktacx3CN6DH2KvjA1dtUejFP80fQp/uLUea1txJ+o+3dA
D2fGr8C2Jqu9T+dj0bWSb5Ua/ydevlf8Q0TvLP6Dog9HD4h+SPREdKDoh0Uf
IXo3/PnU+D/xNT46dog1tEgyrcTfDLssegv0t+jTRW+OzomcFPEweAc+Or46
6/z8zHm3zcHOda0D9ipxnEO8wz49Q9+0ln1etW3dHhuXGQfjm3at2PdgTT0u
2dN1rNG1HcU7S3JbS76Z+t9M10eInpxYf04oeS9h9/lWHxXWb5NCn5yaGRvZ
oWo9fGTonJtT68fHwRkqxnnAhfAP2VvT1M+CzDpkZ3yBzGugY9W2ZmLsU/A3
sPse4FS65xuNq71k/lC7peS7ql2FHWJtgLFwv+jr1d/LOl+tvbwRPonufQk/
u+qc11SwBe2t48V/j7kU7w7dM5x+2C8RK55MDJ06fwPOAD7/hNqXdd/7iddn
c7ULM6/tXXT9ttS6FP12U+o8wmP4C5l1dVvJTBH9u+ht2VOZx7lN1dgjOCb6
+Sw9Y1Pd11X8n4kJ1c8vzE1mHbU+eQfRa+m5qejDRf8p/nr4gaJ/E72O6OGi
vxZdP/QSGNIK9T1S/FXir42vLrql+ums628ltjn4XSPE/wb7IpmLRG8lmd0l
c7HoFuz9qn1d9Nlj6nNU5tihQW5dAUb1kPiHYL/FL7O/wDyJ5SrOp5Cj6U98
KZnPJPNP5jwv+vVL3TtZ52vrWRXdO5Y1LZmGufN6+Dj7S26Y+F+JXw/cIrGd
3En8h4gBRHeoGJ8HVwdnPji3biM/PEH3/qF7G5GHEt1A/Caht/GvH8CfF7+h
+BuI3xj7gS2v2Ocnv92l6j3J3pyfGosDZ/tC15vo/CvJDwt7gY9/p/p8JfEa
yNQeo/7XkfyGkp8mel3RG0UejZjpYN17rPiNxM/EfzR1LNQjdNpCfLjC+QXy
COQaZku+qeQ3xocXXSe6qejjRTcRXUdejPmpddwyXfyK6Jx4RfQajW1d0dMj
j0Y+bZb4VckUomeI3kB0Fd0rujk6UGMZkRvbHq72gsz7tFPVeTv8n1OrzvER
xw2u2AfZA+y4MI4HFnhlZjwZjBj7N0TnX2g8NepjmeR66/4+VecIepWt81/L
jLXuI/47mfOh+1WNI4Mnn6z23cw5037i76PzM9jXmoO3xJ8pum/VGHgL9dmE
eCt3zHJTZnwWnPaU1LYEm0JepmXFtRXkUMDY2+jeDcFDUtua/cFiRV+MXhLd
CD9bdH/R64reCR8WvzqzzDCNYS46pOxc/4rMOnkv8T/JnAs+oGpMjJw9eXmw
E3Lt5M1v0PwM0v0HSuafktcqsdnnmd+3v/jrpNaTB+i5H2fGw/cXf7DozzXP
/2bGVMhDkI8AK9018PDnMvt7e0v+y8wx4ADRz2fOF/cS/UXmePMg/LvMfsIs
cIDMOejeor/OHJsPFL1b6vlfGDp8EbYXm1Y2zgjGOD+znt9J16/UtU6S6Sn6
q8wx48FVY7fURpAPBQfeNOIjchDYVtbWn4nXajd8vcQ6rTs+VGq72U/025lz
4vuqz0cyx+k90AeZ80onM7eJdWYPYoLMWMpg8X/InIsZRK1BYj25l9qfMuMw
Q8S/SeM/VM8bKnqc2uXi35U4riC+ICYC/ySfclXmnDW+8xOF/VywLWKMQUGz
P8HknikZlwNjhCbPPjM31kLu/a2S8RewbuKDFyIeoRYD/5B6jKHBR+/Q//Px
LDBMaPL1Q6If+iXnDo76em68BLpRxGrEcuTWZ+j4OehvMz8feWSI68ALGrLe
YwzgitAnpsa6wLyITdF5r5SsO7j31YgHiZmInYhHqRNABrz39Ig/n0BPq6+X
SsavZ8TY8FnBM6knAKcbkjifuFbFWD+YP3mXbmXbLPKbu6Ovys4rwescfOwa
+6NFxf4H+2tS1bgoNTroDWIAYoE2aruW3S/3bhW5hi3AZcu+Bh9d3iXodpGX
wW6So0HmrNTxBnEHdVBrSn4WtUDgJeAmxLHfxLv0rHUu44ugWSM/xJrhOnK/
1Bon+K5kXILYgTqrmorzPdyLn833Zz2B5X2cW8+8mzv+Jg4n74mtJHYjhgMb
oNYBfAAM4IOIc0dXHXu9VVjnrRvjZz02jPVweWYchv7/SI0V/Zkao6Ou4+pa
x2vEyb/njpWXRrzMuBk/uTFqL+oH9gUGtlbQ+Pt/lozlNQhsj5iwcZ3pWvX5
V2p5nsu99AO2BaZNTRVjptbiqrJ9DuLrSyNO3wzcrdZ2bmnE8uTEB0csjw08
qWo//evC58sjNr8y+qR+Y01j6bYG9m3IcaHj0G/kzK8uO+dO7Qc1UuTKj8Mu
NrD/Q70G8uTFqAMBdzu24jwXa/pMvddpVef83y7cH/2CA56gY4Oy5+/rkvN5
2MXVJddy8Y0WNfR3mNXQ+D98bO72IQ8OBe4P/s/3IP+JXj43s5+Ev7RV7u/f
KNZAWe109fFe4Vo87MFLwSdO5V54XGN9sBZYE41inOvHc5uX7T8zTvYI3+vt
0K3oWPLUXF8dMp/mXg9gtmtX3A86gbwy+eVSnX1y7O2PYB5lP5f3p+81sR42
iTEzNvZFg1hXYMjQ7BHy17uHPiGHQQ6U+r3NKqY3rXj+eB/ehToI6iGo7RmS
Owf6Te68CXWZ1BN8m9uva5UbmwCjoK4yS933JuqzqNhWbqw2q9jW52pfxv/G
Zkk+SV0DCv8l8WdhK8VPU9d6cu8r4s/BDorfruzcDWNgLG2Cpg9yM+Rlmlac
o6mC5SSucYCmpoz6Rc6RQwbfuk28FzUM9L1t9ElOiHNwc/JC5Ic6x3OR4Tr4
ytbBbxky5I844IOnX5vZbx+l8T8peip6XfTjoqewZ0Wflvr5+ITUD1AzQG3Q
Bqn3WWPsRZ1zOO8WzpUQ+z5FnJi5/q2X+vlPap+EvPab4i/AjxJ/tfh/if+7
2gfJQ5QcM9alrmtoLfk3JD9fdM+w6c9iw9Q+If7R4nfOjWGOKjlG/UD8c/C1
kBV9AnYsd60LNSKHskdT13RsKfrs1H4s/uxjkj8KW5c773VgjO0Z8WeI3zV3
jQL1Uz0L1499K/pp0U9L5njJdMldT4t++jt1zQm1JuBdG6au2fxX7WWS7yh6
i1hvfH/WRf3Uuqq36N9y6zb0MNgR+YLtK9aL/UI3Ql8Zupd6ZmoRqEPoEzS1
Sr/m1rt/6Zn7lH0NPrUP1EL8tzYr7qHGApwLvKut2h5ly1C/RBzZI2jqq6ml
aB22EfuK7wBvr5DpVLb/zB4HeyIuGKs+ByWu32GPU19DnQ3n7C3qIVqG3aZP
7DX1LLtFP+R4yPW0Vrs8cxxxZNXP7B7PJSdEbmhrtZtX7Bc3q9h/6RT9sCda
xh7pGe/CvWCXYJjtcmOPxBmNKn7HIsazZdmYJDW6+GvNwxZ8E3qpeW5dvlXo
c+Ia9hy5LPQlehOfkT42i36oZW4a8i1ibMRd2FtqKLG5xIf48tSE8617xXdE
tkW8C3qY52JzesWaIGZDdzHHzP0NmWOxKdWYs7L3QN+Qp8+lmeuMxleNqREj
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFm3n8VVP3xy/53vu9Qufc4u7vccs8FKEoSZQMGRJJpTQoldI8F0WTSJmH
ClHGPGUeH89jJvM8Zk5EyJwK6fd599nP6/fHft29zh7OuefsvdZnfdbau/Qd
fsqwLXO53J+1crmt9Fu/lMs1r87ljszncmmay31XUV3Xeupa3Zpcbl/JOyS5
3LqqXG5UOZcbr/p5xVxujspe6t9Yfarq5nIjVeZmudzNurZWc22n8Vtpnv1U
jmJ+lcaq19f48Rp7gcoHqqcaf6raXlX9S92rtvrsJPlNzfGw5rpI17sWcrkt
VA6WXKP2FWo7SH12VP0AjdlDffK6Nrns/3Ow2r6UXFH9ULVN1L0uVPlN9b+D
/1svlXq699Yqo1Ufo1KjegONWamxh0jeWfXvNf+p+h0heQe1P65nuE5zXaXy
ta7/oPauJc8R1L5C86/Vs/6sfsvV1ldtDdXWRnP2UX2gnmGyxs5WydRnY8W/
yAM0/m39NlD/kuZ4RvXL9J9qNHaTxl2sviMkr9W3+ETyOZI/1P16qO8tkl+X
PFztv6v9Y/635KB7NtV8X2iOsuo/qn9H1XfQPT+P7U3U3lbXEl3bX9da69qW
kidqritSf7u2KvvoenWN38VIlbLqt+o+PXX/okpn9T1fZWu1FVU2qX48z6n/
cZHKFpKvlXyR5h6r9m6abxvNMUH1Hqq/oXsfVfK36a1ydMn9u2vuKpVjNP4y
lcPVdpjK7mp/S/PWV/1WzXl50fdfrvpurBnevebcQnMs1zvpqf+zr+oT1G8m
30/1+1RuU/866t9XY/vpeV5S248pmyOXW6AxB6u9tuQ2mms3zdlK92utsqfq
X+r6f9V/ocoPrPXM77ev5j1K/bfUtdqsVZWZ8fm/VntD3W8PtY2U/Ah7T/Jd
PLvud4nk9qqfrPEX6PcTyXvwjtV/rtp3lVyl63PU/qzkkZIPkNxO8muSz5d8
OO9ectvM+4V9w/cer+//jOb6VO0nSr6j7O/P2mgreXv9/w08n9pfkJzX9Tf1
395Q2UZ7vKfkrzX+Oo0ZrXo3/c9m1V5jrJ+s5L3JNdqu1/zNNF+R76b5bpDc
XPLWkltLvlFyC8nbSD5C8nzJB0ouSG4l+TrJB0mulnyY5Kn6/Ujy7nqGgu6V
K3mt1ahMU9s6yUv0rC+r/CT5Fv3fDur7j+qfavzdmu94jS9J/lvyX/qtpbFb
qPxJXeNPUPu6vPXXL8yp8etVflP9K833t+rrVP9Y4z9lj6jvyZJPlfyR5Esl
nyi5o+S9NEcbzX2ESkPVP1b7ZWrvoPZT4v3f0dqspzn/5lur/XK1n6R6J7X3
Dt6722vsZ+hmfYOri9YPfI9ijfdiZ7V3UPt2GjdL7a+obFD9Vc13nsYfpvpx
an9Kv5skP6rxH6v+vtovlnys6iepfRd0ZrXX+K6q/6Vyj+Z6QeV79fkX+1tj
a6ssUf0EfeM/CtbZW0reRv13Vn0XlW1Vv13Xhqs+TOUUyedJ/lD3Wyh5vOTf
U7/bPdB5krcreezuKqnqJf2/rqov131W8r70Prqx/9X2VcXrDd11YLQHL6vf
jKL3JHsTG4OteVxlpeSjVC5V/Un2v+q36/831fiLU7/fhyX3kbxL6v3bTL+X
qO8TKl+pfhY2je+pPgNKtinYlltYbyXrjIK+y3+K1iVbqv5w0TYT27lBfe5S
fZnKd5pvmNqnoI80X171Rtqvj6O7VZ+veqOS1w42FFvaCR2i/k+prFL9IT3v
GRq7M3paz/uM5BGS95d8jOSzNc9U9b1G1/5gb6p05FuwR+P32I1vrVJHcguV
zqp3UTmkZP3/jcY2Kth+z9SznV/0O+HdFDX/c6o/r7Ja8m0qf6n/feq/XPWn
9TzDJe+n+tF6nlv0e7rkv9T+h+qJ3tHJuteTmvcLtf/Avlf7udjoknU0uvpm
dLLkSzTfnmr/W9cPqdhm3qa2X0q2pW+ofara22ie9pIPV78zq23z16o+W+27
q/1P1Q9W++uSp0huzVqWfI5+q9W3oLJR9X807/1FYwiwxP4qS9TWXeUb1XP6
/w8WbdOx7X+r/71F2xhszZ+S7y4a84B9xqj/ONV/1p5fD9YpGWu0ZM7EMlis
RcQfF+n5duHbqa25nq+RSi3Vv9X4gWrrqvq5Re959v4EzT9W9RVqr65r/LC3
xv+jfodq7KWS95K8UXLLim0ytvlWnqlkzAX2ul3f5wPVt9Icjxb9zfn2bdTn
dOw1e4A9yBop+hl4Fv4D/wUMBp4cwJ6to356nm5lYyaw0ySV09V3i/q2MfXU
/zvt7Ym6dnbeOqOTro/TmL80diW4k/Wsa1eq7SqVf2v+BsH2sA37UO0vqf8Q
yS3VtjDax76Sm0i+XvIyyf3Bj5JvlHyA5munua5Rmadrz6n9TLU3Vf0Gtc8F
E0veV+9jMM8u+VvJ+0geJHnfkrERz3S12oYyn9qPR+epvmuwfumQ2F6/qPkH
gy/V9ybJF0uuJ3mD2mdJ3kn9d5N8BDhJ8pM8h97VIyq19C2GlPys16o8prbx
KsvU/2g9z1i1Pa/5+qEPdX0B9jJYX6O375L8stqHqv1QyYskH1jy/rtZZSLY
uWQ8fpvKBn23eWU/Tx49WLFPwPpnH+Ar9C4Z2+6la2dgO0rW13fw/dVnF92/
kdqPY++pf0e1D1Xb3SrnJMbU96o+KzHW3ln9G2KPIt6doP7v6vs/qj7nloyx
71d9bmLsnUl+kOeVvCbu/1G8P2y/5DHoIMlt9Q7GgF+D8XFJ/YerfTT4Te2L
4vx8v7mqzwfjgn0032jGq9+tFV+jbZ7KcNU3qX2V5tuod3VWxAPT1L+j+t8p
uVNm+zpf9+vC3tX9v1f/ouQh4EnJh6i9i+RLJb+l8WMkH4kuBT+q/Tv1L6h9
sOR/2ENV3lPsrTM0/43qfxd6TnIfyTdJvltyP8n1NL4oeW/Jk3h+jf9D4z9F
b0g+kW+kd/MueEf3rKv+VeDn6F88oP4nSW6gtsvRF2pfrfFV7FP0SbA9r6f2
+/B3dP+Fku9Re//oS6Ar70Sf6VoPzfehxj+r+iDWj/ovUP+lkvtKPl3yfMl3
SO4l+QP1n8R+0vx3SO6u9nnoJ/yOivHLuawvbLnkKj3PGs2/rdqHsX50/WXW
k/7jOD3LVmr/Qe211T60YrzYWm03aX8N0v7qlhnPLeJZ1d45Mx5fIPk0yb0k
3yB5ieQ+kntIvk7yYsm9JX+m55ku+RSwkuTTMuO5hWo/HV8xM/67CV0pOafn
+UbPs0nfc6DkrzR+ttq7afwSyV0y48kb1b+b5FMkz5I8T3Jnyb9GfHqW3u8U
1au0HwapfqL+1zdqn6L5gvr/pP4HSj4ps39weWL8ic+8veQfEvvS/9UcB4J1
eWYwbGZ7emVifHue+u8geY3kJpLPl1yW/KPkppIPUv/quN64X9PMvvmesf+B
kgvoi9gf/bVAz3samLNkfXs1vh86pmRuoaWeZ0HRHEOHzHj2ssT4ugk+eN57
Fn1bXbIvMEXlkdTf/8Zq2yxsVzHYf66r8SM0/l50vsbP1j3ewufKjAeuSIy/
79fv7ZLHafyZ4L+yv9ebuj6qYlwOPr9A7f1Vb6/x54AnE+PpoWWvx7Ho6op9
6jRv7ICvfWYw31DGDwS/41+o/45qHyd56+D9Wk/ySMnbBtvDTPLYivUe+g/+
oYvmuF/lRc13tf7PO6nt1RXV9kH2xhfV+A0aHzRutMZvI/lPyTVgE8n3BPvb
+OaruX/JvutUlUfRD/ghmn9a1Pdg3Vbqf6O+z1DV22uenSW/rT611P8elSdV
n65rb6T299Dv26bWd+hx9DmcQju+ve7/i9rrq/5sxf4D3M+pBeOBs4LxaI2u
/wd/Tr//ztuHw38aU/b6+0Lz7hftLd+jhdqOldwuM74fldhfxr/OsHWaf21q
jov1+lli7qtDyfvpbJWTVD9epb/qA1ROQP8Hy8epvqpijgFs9lxi7qFX8Pu6
SHM/WPE9uNdgjZmR2p8N1d7D7OWBwfjiSuwS+j4Yv4Jjv2a96nej+p6ha33U
Z3TZ++lzXW+s9mMy+wMjE+N/MCLc3VuJseOgYDxzrcY+Ifkh/c7Xt3tAZVPJ
PiO+42sqtfU9nwA3qf4Q/I3k+yTPLdonxDccpPnXa/63Nf8+mu8qzf+z5q+o
3zPgteD9eZ3kpyq289h7MADfpH8wHxL4jmr/j36b8i7QeWDyzPzGtMR4/vjM
/s3UxHgd+w02wKfBtzkus78xJTH/gf2/odo+Db7N+LL311f4Mexf8JH6N4SX
k3xZMH+0PXtJ8uXBz8NzvSp5Qer12UTXemnMran5kuZ8U8nb1dgfxi/+qGId
hC7iG8NXnFhjfwK/4r2K9xR7izUIv3OVnm+niL3fj/7Ses3fTNfO1pw3pH6/
B0juKfkwfIa8fRY4jg9T+14dwadquyJYn6PXX9N8H6X2/TupTAAD6H5bafx3
qk+rGFOCLdHB4N39dD1Re1/Jx5a8BlgL+Dz4PtyvO/5E3v7e95pvkepnpLaf
35aNT3qmtl/cfxD4N/IPb6vkJO8Y9dUa9FfRPge+x8qy8UDX1PbuNPyYvDmo
OqntJfb3tNT4amlqPnE8Or9kzgLuAh8MX+wX9V+s/v1S44fNfDPcG3i0ZIwN
1sZnx3f/rmw80zu1/V5dNr7qldp+P6vfbTT+TZUVfLPUvtOJKq30rG+yXtCv
0b7g8+P7Ly3a/4NTgFu4A366ZHsNXvsZHqNiTgFuYR57VH0P1zNdq3rQfGvi
/gOPvRP1eWPWvdr6qawCo5WNH9+N+v1yyZnmz6XG45+k5gO7qFwY+Qnm5h6j
da/GmfVZVdzf+OD44ugAdEED9CjcqcqH2KSy7cmXcT+hj7E3KyL+/Az9gn1R
uSYxvz8RfYz90twPaL32UtsTvDv1r6Pfo9B3Kq+A6TTfb5rvI9UnqL2VnvEa
Pcv2BfOvn4FPVa/LXlD7kLLx3vvRng4uG3+/F+0n/nVJ918X/cfXU9uqI+D4
hMmmqb222n9V+0z8qbL1xS+SL6j4+4IdeEaedZba66p9ffTf1muOlVXWQfgf
+2fWx+Wor+Gg4KIWq/yu9kTXf60yJsKfw8fF18WG42+CH+Dmv1W/KRp/juRa
kldLnlrxfsL28034NnBEcEV3qqwtmbOGu4ZDh39+F5tc8Jph7eyET543ZgIv
w+nA7TxbNJ8AP0ps5zv176G+X+j+h6n+ufp9UHHcg/jHM3ljnjaZ+Qf8Ofjd
x9W/h+RG2BHJh6l9D/zXxPzw4Zn5nWMS88MtM+PXFon5i9aZ+Yt2ifn4xzRf
F/Alekvyk5J74a9j1yT/W3JnyXtIvkZyCP7eB8T3VxP8vZrE9zepbP/ne8nT
JWfB/nnTqB9bZeaPjkrMR2+n38clP6AyDN2q8aeqvjvfQe1PSO4peR/J8/An
gt/3e5IP4vtpvvqSH4xyJXh/HhLX17Lg/QhGPTnY3wZ7zQCP4q9nxu/N1L+F
+q8J5id3UNtlFfeh7/Rqx59Kwfp+18TxoWaZ8SjvA34pDV5Pu8T91SIz3m+e
mG87JDPePzgxf1RW/234f9Ge1pe8o+SWcb9MD45vjAALSt4heD81SsznPKL3
0wl/k3UuecfgeFeLqP82BseDiAs1k/xCsC6F8+gYzNeewv/R+CvVPqfs9fRX
fB9wTu9pPz2VRH9Z8ieSX4z+X2/JH0t+IbE/3kfyp5Jfiv4jHDRcNBxpUrLN
xHYOVtk7Ne8I/0hMkNggOhxdDmcDd9OvbO7rtcR8Q//ov78e/Y/fJS/R8w5U
3zMkf1O2P9wjtb/5q+Q7JfdP7Q8TlyI+9VjRfDH8K7oPHThe9VVl+6enq1/X
ijk9uD0wHlgP/fal7r9DxOO/qf+/1H9Aav91TjAfAC/wSsU2DFs2QOV3fMTM
eC9EfL1e4+/R+CGp+YbWde2r4bOhz9ap/W61D07NT5wu+QONfyaxv9td8vuS
n07Mn2yQfK/6D03NH2CTsE1DVZqnthnYjuEqR0s+oq59D3wQ9BtxUOKhI/EZ
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
0OT0X5D5TCdnO+E8ORf1f93v6/E=
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]], 
           
           Polygon3DBox[{{6722, 4374, 4193, 4192, 4492, 6241}, {6239, 4490, 
            4175, 4176, 4491, 6240}}]}, 
          Annotation[#, "Charting`Private`Tag$120958#3"]& ]]}, {
        EdgeForm[], 
        Directive[
         GrayLevel[1], Lighting -> {{"Ambient", 
            GrayLevel[0.8]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxNmQuU1dV1xv935s69zlFE72suiqBGNEiCLGOM0RoNGJSGSktLYmOr8bWg
qbGkGhVRQAKIxUSMJqRKjCKCogiVQXEQRRrARqTlEVBkeDM8jKASfGGx389v
Z6VrzZl97vmf5z77+Z2Trv6XwTc0ZFm2UP8aRe8qZdmu5iwbWM6yliOyrKZS
LmbZl5uy7J58lv1OnQ6KnqHfvUSv1Ld+Kr+qZ9kFXbLsuynLxqj9fZVJKns0
73u1LPtI9L5qlq1pdDvzTFD766LLRHs3ec7Vje7PWu+LFkUn591vX6Prg0Vv
0jpPqv5j0Svyrm9W+xzRJ6J+q/a1rpBl81U+0Fz3qf2gaK8mn4c97Ff5mdpX
xPz3Rv1w3nXW+mPNfQ6ITtecg1R6ac5T855zpfos0vkvV/tc0Zdq5g37n6/S
TfUO0Qu01y2qXyiaWrRH1VvVfqLoVpWnNc+Z4vsEfZ+te7gx2hm/UHM/p5Kp
/FC/16n8rNH7WaW9/LdKscXts2umG6PPFcGTmurD817316r31lrf1FpztNYv
8+b9qprrRdWn6r6+pu8/1+9zku9tStzpFK37c5X/0rolycixKp30O4mv97Pf
Rq/JfWxV/Y1G3zFrnB594Bt8oh35YG2+36K2T1RmqfTQ76uizp1epjUWqzSo
rITXojeJ/rjutlmiQ4puv1l72x/9x6v+cC7LJqqcmfP330afi7V2J5W9Yu8j
+jZJ5WyVU5PbTxM9Q7w4S21zK5KTir/PE31c317WPDNEz1Sfc9T+vNpnitY0
tii6Sntarj4jRfdUvP7TFZ9leeztPI09qPWPEV2r7xWNzYl21x2dornH646W
6HdJ7R+r3xHwXuWBguWOekFlhfqU1ed/1edijVsvvl0i+pjak9p3q/1pzXWk
6u1HMZHkTOMWaJ49dev6eGRZ434TcgB9POq9tJ9Rmu8ZzXGx2k7T3V2l9g26
u12ibXFXc+K+kIFnQvZGau6jkWOttUn9C3nbij4N3s827FDd+jVd9Hat84i+
3yHav8H3xB2x5rhYdxH8zpl3EzXnW2pbK9oe++b3R6KPxh7ma9//pvmGlX3G
R6JPzybLJTKJbFLvIXp0nJG9ojtvqBzHmWqm27FRTW5Hp5DJvPZ/q+jsuu+E
ex9e9D3xe1XRvEBfkA3ucrTouLrv80XRj3OWJeSsUTIxWnSbZGZTss3dLLpO
5SrV14t2qJR1l7tER6nfCznL0rs5yy0y95TKN1Q6xKsXxIfz1fd74sPoomVg
YcE6Xg/buEB9voV9VZ8bipZXdOwUzfum5ukh+qTW6lD9y6pfqtJP9UVq+6rG
PKaxe0q+X+QP2Zuhb5tV76m+B2Kt/0FO1FZQ2ak+TVXr4Hvq21djv6lyvn4/
mryPadh+levRd9Hb1O8ZfT+yahlBVthHp7LtUpP2kOnbdLXlRJ/X79s07vtl
24uGsCH/nnxPD4qeLV/2sfxgd9Ee6vdVtbVp3JqKZfAgZ9S3LerzFc05Kvzg
fp1nTs7nfVv97lZbf5XDah9U9++lomdrzoc0596S7egA5EH8P6Xse+F+OMe7
2ASVqfo+UKWr+qzT2gfU9lHFsn9jzr9vD3lD7rB5+bivWZLR5eJ1k/zDk/r9
gebYV7Cc7wlbjfwix12xy/RVvS56C/Klvq0qr+h3vsk6QZ816BT+Et+hMlrz
LMzbDmAPPlX9RZV+je5Df+YcGu30Q2fRzcOif6V9D9A6c1osFwciTsD+Pxu+
gD3jY/C97SX3ubqzfTU+G3/O3Ky9p9ExxcHwbZMiLkHeZoWPwTe1ih5S2an6
uOT+45P5VlJ9S8127WWVsxrNA3gxvNFnWhF8+EHU4cOlGv+66oOS21+PPhWV
pXnPe5W+tWiuq5N9+sroM0xlWfT5u+T6kORxr8W63M/K8O/Ixuvi22sFj10a
ffpIlr6ucXNL5kVb8Jw7Gobt6OJzYNuwx9fm3eesiLOW5B3/3KNv20XXi/5Q
4+ap/Ybk/vCOb/ifI8K+HYp25sm1+O4maeyvNeZVfX9YtLXomCaLuIb64YLj
isn4RdV3ad9b1PdmnWO36m+o/q+qf6Fsu4R9wr5gZ4arrVy1bxwvvbhfOjFC
5UP93qjfh/APonM092CVoZp/fcXf76x4D0MiHviFxt2e8xj0Ez29XvMvkHxu
Ed8v05m2RfyDzn5JfdtVTlf5QPZgE+s2W+/vi7NgW7Gxz4quTm5fkxwnYPd+
oLU2hB1epTUma0+Xq61BZ9pW9hrYzB/VfYYVdcfc2JxREeNcFrHE19T/fs39
tvZ+ctm2DpuHPcWuFqre2+T/Z5f+U+MeEr1LbT8NO7alaHtFn/0Fx9PE0uui
fm7Bce+Ion0Wvn1E+PcJZdsubPJ6rbk653iG/U4ser2lBa9H/fiqeb5Ze2yp
On65R/UpOfu+zzLL2OUR82xInuct0aps/E3B20frjoWnRU7SVrC/xIbdXLQd
Yw93xRmJN2hvq/tct0SfMTnfI3d6je57ccF8xvdN1F5+H/LAui/UvfcVITPI
xZS4d+I44jnuEn7/Mvh5ksaP1d6fK7l9SsTSA0KuGPt43XZ6mH5foHmu1Dzd
cu7zYMgevFkb/ME/TAsfgS3lrn5adzzI3gZm5jN3cVzV/bEd2I2Tqv5O+/Zo
Z57XtMeHkDfRrvqWRL/bxXe5OtYdoN/zk/f5t3XP93Ddvh7+7RR9te49Dxbd
kLO/7x50Q8g/e58Z6+Kn9gUPHiv6TrnbF3UXnxYs/zuKzn/IxeZG/vVS3XeH
PnJPg6IP45lnmfb5T9rv1Abz9FT1+6TiMdsrlutZIdvENr2JW0THco6cf7O3
v0bfCs69psX87JV2vv8hKH3ebfbY90TfFt0R85zQ4NhpRub9bo89j40+UzKf
mXti79ho7Ds2u6NoWWWf7xcdTz5WcMxI7PjbzDFa1zgjfh7fSUw7KfoQW5KH
kn8uqDnmhl87Rbdqrx8Rc4rOVtu8OAv504cq8zPnOx9GHtQaORG5Efa1NWzs
xLzzWHJY5Beej8AWJ+fhd6c/84u4ZHrETdsi5tkevq0j8mjyZfRjW+hLVXp0
oua4o+RzMj86sqjmfPpg5OzIyqrQ746wB+TLxDv/UbP/aQ0fBG2L/c+OfI28
bY94sV/1vc2+H+6yT853/ozKJwXf45iwG9hq2maKdm9wLA7fiMNz+r0mMz/f
jfj82eR55oleioyKrq5b/pCXwxXrEnN/WrEezI51n1bf+arPFq20OP8hptob
ssQ+3wlfi49jz7PjTrmv+XH27aE7+Jt9Kn8M+ST/3Rd56/j4Rjtzjw15/gWx
ODYuOU5ZGvEOvok8nHiUfPOtsNXb1K+dOxZdnnN+i/8+uuw+u45V7kPuLV7l
RWtq3y7ejyo5vu4TOWPXsjErsKu14WewS+j50mTdIb/sE/kvvOcOyClaWEtj
R2vsBzrbF8iJuhjTGBm+DLuPH8Gf4J9Hh48eFT4E/1DXPOs1z90lxyGLNXe1
an+GbzihahuMX8NHHEcMoN/HJ8+J7ycHh597Q/f7aZ/fijMep/m7qu8EzX+C
6pu11sSS75N7JY6aEDnqn/JSKFjQOPX7ksZ+p+xcipyKHHBc3nFnLe5qWP7P
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
454urxvvaYv4iz7oRad4HyRH+T+dXLiF
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmH2Q1VUZx8/du7uXPbzv3nt3LyKkE80QIoVoNIbZmBgOii2pJKkBGWS+
ZCi1YoEMKMSKLGo2ls00MRjI68oq72oCS7xpArtTgBC0uAsJIiyYIPT59v39
8cz9nt95znPOed7PvWzsw9UPFYUQqlIhFPPbJxfCVPBM8BfBG2IIK0tDuJgJ
4U3wd/g2gAX/Zv5QNoTz0Jfhby8LYWQhhHOdQvgW80eYn1UewnusaWR9Hev/
Du5YGcJBNvom+NvwP1rFHszdDi0Cn0DOlchrgT4GNyN/EvhtaBp4JDy/h3cb
64ey/gh71CN/L99au4cwp0cI/2TdIvhLOetG+N5l/s/MbwKXsH+W/cuhRfkQ
bkbGW9H3a0H2uK4hzGb8G6gB2ZvZs4W7XEDmIHjP89sL2fdCn4NT7HEDuBs8
AdwC/zTGB6AF4CeRsRu+XdBU8MUyyytlPrDHpazZBb7I8AD8F7K+v/RQzX6d
4XmB8Tnmu4Av5/z9SkJ4Gnwj82fh+yBlm30Kfp073M9dqqFXwHfBczm8zzJ/
Btkny6xbnfET8KvMXUA/DfAvBj/GmjfB88E3sfYoPCfgnQEdAy/JetwK/jrz
K7hTH3TZlzPVgzOsezG5TwfwCugz5C9FZj34Ieg1+MdAD2sOOb9LWafnwHcj
s5rv05g/gX2GgR8ET4duBv+S823M2Gd2gn+Ozeex7hhzH4Kr+baN/XZAW8DL
0NcJ3Q+6hfFrnP8a9hoMDczZprKj7ClbL0LOAxnrRLqRDqXLZdAj4LasdSEd
SBcl3Ll7B/QO/7Fy+7B8WTqULqfiT4OQcxW0j/mZWdvyc6gyZ/8vgrc4uU8F
fM8h+yzz2Wh7Sn/S432cdXdFCL1T9qEaZL3D9/EZ+7h8fTHfBjI/CBqQs0/L
txXD8xU70FDGs6AR4L45++qLimdktyb3OwItBP9N+2as063gUehzLfhRvq1i
/et8mwA+zrc3wP1yXnspOeB68Dp4nmduNDzrwWugfoxHMF4Lfpc14zLOEcoV
d/CtM/iljO0newoPg/4IXgmNyfgOustkznyMs89POf7uQkYpvnITNBo8BZ4Z
yGtU/gF3g2e14pXzXZuzTqSbScl5ZkA57FkBtYEfQ8ZCZN0DTQKPgHaA74du
A/dHxrGUY1b60n1rkNUFml5lmy2PjknZshf6G8/acXy7nrnb+d3MeAJ0B3gy
PKXwdkjOq7HOPgpaAp4Az1p4fwT9JDpf/yOJn8PsvwGexzP2x+VVzjlDUs7J
ykVao7W/0h3Atyp/MdcXPLDgmFRsToZ+Fn1n3b0G+kX0uXX+KTpDdA5TLlM9
SEXbV7psls2rbDPZTjlbuVt31F2nQneqnrDnan4HMP9Mlc+ss9ck/iIdS9fK
B98VP9Rc7Jyg3KCYVezWJPHwSPTZD6TJDeBPyCH9GH/KHU+Ct0efRWfakeQM
1Y5Vpc4lilHF6sDofJZDP43I/y/yK8Cbo2vJcPmscll0brtNMRYdb/Ltt6Nr
y5Lo3KocsjSRKdlfjc6d86hXl4DrlL85/3bWny91zCvftLJnhvPv4D5P5e0/
leTa7Yz3513PGmUPxu051xDl3veRdwnjC/D8SfeHspXWRy24PzI25F2jm8l/
TWWu3e+z5xbO+rJ8o+AYUCy0yPcZH4K/c8Y57zB4V3RtVzzuBu/nW210DVUt
XRWdG2Rf2XlBdG5UjnwlukarVqtfOMnZp7P+ELgj9vqgk/UofSrH/TW63irW
b2R+fdY59zm+z4vOxe3cqY77fQlaD/4ob9+VD+8Gz0Xfv42OEcWK7K/acRTq
UmEbypbKaQ3gwQXXXeXsWVnbXLZXTtwS7UPyJeWwneCz7DGPvXZijzbwCmgf
4yYog/5XMj6g2IKOgFdBL6f9LTK/JG9e+fdh8LOcd3C0TMmWD8mXlE+WRetQ
ulTN+kt0zZyW5KeDedtEtlHO3KM+gG992K+e+VSl8/VXUs5hymWqB1ek3NOp
f5EMyWpM+iWdrwe4Z3If2Uy2Wwh/CWuLc8bXQeuYa8+695gI7QKfYv0NaeeQ
0+CfRueiw3x7INpGspV8dmbe9lzM3ETGZ/LWiXSjHLAUXMR+C5CdgeZm3ZMq
F+lbOuccOzY6ZhQ7zXnnN/UgteDZee/dkrY+5FPyLeVE5Ub1Y39I+p/WpN99
Kemf1OspZhW76lGbsrZvL2R/IbGncrJys3qcz8Srfi/tGFQ+Gh7d2+ShW8A9
mB/O+Z9I4lf63Mh4dqJf5UjF0rCknzmOzJnKHdDKrOv/8eS8/+9VoM3gt1LO
X18ruK9Qf6F++sms53R+9dq10BDmtqbcn6hfEa6B9oE/6kJvQa54Bhlju7oH
V1+g/kD5XedX7mmGLgMvZ83plM+kfkQ+L9/XG6ABPCq6Fqhmfz+6h2/Tb3Rv
L39Wrz4yujeUvUdzvimJfe+LrkUfotMfg/cQwz2LXBP1flG/dzZlHUlXb0AN
wd/U/61WfkOfB0vcz1zLHsXRbxy9deQf9Um/Kt+RvqQ71QTVhpLos6jnLVVt
I2c1kRsHKBeC10b3nk3Quuh76D6q+d+Ltqfm1yS1UHtKnuTqLOrR5WvyuVPg
q3K29b/AVxcsU7LVw6yPfjMcL7PPynd1P/Vq6mnU2yin9ofviuhcq5y2Dd6u
Sa6rjH5ryR+qot90p8u8v3xfPqP5XLQv6Y20Fd2fKna+L4qOP+kvDf5hdK1S
/I2JjlnF7lDwENbfo/qQNs+9qud517ofgK8r2Mck+720fe/u6Hmt0VrFjGJH
Pdmt0TVftV8928Ron5BvqGcaHx3ziv0Hwd8oOGZ1V/WEvwZ3jI49vbk6JedR
Lzkmqb+qz3oLjJc9K60jrVcOKIA3Vbm3PgjtBXePjh319OVJzCh2apNauQa6
OvqNoLeCYkz8solsIx+SL10JLS53jVOtq4M6V/iNpXqvN2QZuHchyTXY7Bpw
t2hZktk92UNvNdUn7a18PEdvLcbP513T56pORNd66Uh5WTlSutP9NnH3d0r9
flA/3c7+p4L1p/8BVDv0Jj2jtx31qzm6/qh31x10F/mgfFE2Vp8uHUvXqhGq
FUuhx2UP5H+M7KPB4xeQVxNd01Xb1d/s52x7064XryJ/T5nf3Op31eOo19Gb
WW9nvWGVGxUf/ylzzVftb0tyj3oq+eKcpD5J/+pFWoNj+86C9Sx998zZBrKF
dCbdqUdXr64e6okq91TqrXQmnU330d16I++pCvcIskVdUt/+B0sGnBE=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwlk01IlHEQxkczbd/osu+urpsfrWEfLERsZmkJ4hp1CIMOEQUV0aFD2JJU
YJpFaRtBhhRIB5GOgRVRZh66dIkOHToV5mexptEpIuvU72EOD+/8n3lm/vPO
zD91+vzhzmIzawCrQV/U7E6R2Sj4EjGrCM1+lptNrTJ7he8U5wdJs6vYeTQj
4Bu6cvjbcAVyPIb7BJeA2wx6A/KVmB0HT9A0VZpVwd/CzqAdi5kNYP8idoJz
Nfok/hZ0G/lO4EsqljpK416f6qzEd5da3iTIXWY2D7cH7h5cP/Yy+dbxc/Xk
q4WvJd9f6loB18jxj3vXiw/83i7QS9wf7univmfYW/EPki9DbAy7By6LroM6
mjhPEZvn7iyYxbcb7ivcNOcQzMCdgbsOd5mcH+njeNRz6448aMa3Hc0lMIt9
krjJUrNFNGfVV7g0w3lP7Eu4Y3B7A4+tAa+jfrdqUOw0vhY0W0Ar9hyaHHga
9R6pVzkwjK8NzRzcUc6dYBSuFe4ceBi4rhQso2mGG4F7V+Z6xZ2Aa4cbKPEZ
aVY5uEeB5ysGS3D76F8Gfgw7ja6uwutRXYptQ78t9P3QnqhXffpvuBqwoLkV
+c5p947ApfFnme8Cc74JdwBuJuK72yht1HuoXmoe8+h3oDlELe2hz0YzWkr4
TDSb39x7A10q9H3X3mt3r8DVwf2AGydfN3H34XbBTcJ9QDeErhGuHu4FOd+i
+47vAudhdqianemhrrVoAlAVd7902qHPcA1oV2L+FvQmOjgPEXuQbyHi701v
Rm9nP/+xM/T+qs8XE76/2uNBkCJfHH83WMQO15g9564Cmk1w/YH/r+ahuWzQ
ew38zWjHtev/Af4fjto=
           "]], 
          
          Polygon3DBox[{{5899, 2622, 4900, 4793, 1054, 5813}, {5427, 2528, 
           4893, 4744, 310, 5300}, {6354, 2716, 4918, 4842, 1798, 6268}, {
           5365, 234, 4741, 4946, 2595, 5366}}]}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt07tPk2EYhvG3oEIRBXuCYkspKioiGoOCIRpGB+JQE01gYzIMOBsXFw2D
McbFxdkVF+MCizH+AwooHlDwCB5QQEU5+PsSh6vXc9/vk/drP0Jx4EJpKBZC
eICqshCiecTHPF9KhlDLC7hqLvCYs2XuTjuz325+pLuSCmHFnNCd4GvyGifl
Xi7an7QXQ0rXr7thp0LOyIPylLmAJ551Ub6tb5FzPK4b1s3KbZiRb8lz5sPo
cX/e3h3dknzX3R3Rfbp7uvtyl/zQPGo+aW529liORd9ZvpyQ456PcUxgEvWe
9ZSfYQrXG0LI6p6b6/gFv8QrnJKnOc+v+Wg2hDc8g0bdLGf4Lb/De/TKHzjH
x+1/NH/CHObxGV/wFSXn33gB3/EDi1jCGWfL/BO/8BsrOKb/w3+xijV06NZ5
Ix794b0DlKEcm9DtfDNvQQUqEcc5fRVvRTW2YTu69DVcix1IIIkUOp2lOYM6
1COLBuzETe/ztN+eizrOcyMK0bncxGkucjP63LeLS7rd0R7v4RbsRZO8L3o2
H7G739yKAzira+ODaMchTFSGcL7ae///P/APxs1duA==
         "]], 
        Line3DBox[CompressedData["
1:eJwl00lsjGEYB/C3na7T6d5KkAjRa6ONmzhwoKFEiwrCxc1Fr+4OziJxcSP2
XURiV619bZXuy1hqbVVVW1Xl91Uy//ye53m/7Z35ZsGO+vW7UkIIA1KZGoJP
qIiHkJ4dwizJkPasEPKLQyhWl8h9/f45IdSZXVFvZKZ5tmTJBn2HeQHfccls
FzV/oK41u8oaDjNu/p3r9J0s5CLHv1enWHvIazIiOfof3GK9iwPySK7LqPyU
zda6+UEeyw0Zk8Xm4+yRj/JEbsom8wLXLZR8eWp2S17JM6mzfptt0iufov2a
PWeDTMgv6ZMK8898IXdkUn5Lv1Ra+8JU92hmo0xJQv+H+3yfa+09qS7iV8as
tbBa38TVnGauea3r/VWvMnvDYg4yzdpLVunvciVrHDukzrP2jSvM3kb30ZdK
q/qetPqZyr0AR3PsX32Mr3mcbTzBdp5kB0+xk6d5RrrUZ9nNc+zhefbyAvt4
kf08nAhhuRevzP2S+hiX6Rdyfol9m0UvZpG6UZ3OS5zw7Ec4yANMci8PWS9z
/Fzn79av4XZ9i/Wd+iZu5WVWR3viUh5kORucX+X4eeptpSHscf6QOsH86Pmt
DTLN8+cxlbkMtJUwHZ8pwxR9wmR85pUP4xwTX28YZSZHmMHh6H/GehdqcZ+0
aM/qZnUsWk/8/0/+A5rthjE=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0klIVWEYxvG3VCQXLspsoEVWahFEg82plQ02ard5VptscGjWJhs0bZSg
aFPLdhG0CySCtm2iNi1q0ULQhQRBEBXR76PFn//zvO895373nFvU0JJpHhYR
ffieHTE4POIxf8yKeDA64qf+SX4i5/Izuy9cMMZOLpRf8Ff+xcXcWxjRz7/1
Mn6T7st/uIof2n/jv3qG33IuBnxHvd6ZE5GvZ3Or/k4uwA/7Dv2DPBY59vf1
z/JL95yQ7mP21OyVPlF/Lr+WS+Q8uz59MJ0zXTMyYlZexGzMQRnmonhUxDye
jwXoHR8xzWyhPJMX8WIswS69nKdwBa8YF1HJSzHVbBnP4OVclfbYp6/kyela
n18lr0Y11mAt1mE9NmAjalCLTchgr+s28xZsxTZsR6X5Dt6ZzobdqDDbk65J
3439qEM9GtJZ7Q/wQRzCYRxJe/NGPopjOI4T6XebN3EzWtCKkziF0ziDsziH
82hDOx55jnV+8wV5El/kS7iMUv0KT+cOvopr6Uz6dS7iG9yJLpToN9O7S8/S
ebrlHtxCo9ltvoO7uJfe7YiIofyI91n//+f/AE9qWUU=
         "]], 
        Line3DBox[CompressedData["
1:eJwl00lszFEcwPFHkdDSg1QXa2kp7XQbbe3LVO1bi1raarWq1tYaEUJERBw4
iUTSs4uTo6aW2rkTd4mD2ltcfV4cvvn83pv5z5v/fzL57T0N3SNCCB+VOzqE
zyNDuDkuhI6xIZzWflWrYmIIJ3hShbqdF0KXvWzzAXayK87qtK7hPKa4V7PV
YZ3Ddm7mQW3RPusFLOHK3BBqza2ao1xt1SHVa6FWqUh5atC2+JmuW8Q6zdVk
bVet/R1crNXxO2mK2ux3s0fHVKypSsbvEc/3+jRWaYnWxPuwl+B0NWqnlipl
fy1LNUO7tFvLtC6epTLla48Oq0m3PMNW97zcnOD6+CxUrhbrmWxmM4/E2Tkt
8Vp7K+JnckO89/j7xDOtZ8Xz2eS9G81HtSl+1/hseVynVKkC9aeFkOV3L54Q
wkNzCR8xwccs5ROWcYDlfMoKVuqZOcnnnM8XrOJLVvMVa/iaRZl+m1EhZDjv
jfWguUjp1slJIfTZa7QuNN8z57CX6bzBwIsczvK78a51hvenub4tns86609e
r7f+wBTfMsl+FvA+szjg+jLvHxPvL9szdv37+Pn2/vof3OE76+vjQ/hjfY2/
eZXDvMIhXuYvXuJPXuB5/TCf43ee5Tee4VcOexZ9zvtiHjI/MA/G1zP//w//
Ac27ZVs=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0klszGEYwOFXwigJCT1Y4uLsSC0ViYigDiQO0sSNiEgaGodGXHrh2Nir
9qUotQxq7VQVLYq2xlZtLTWt2ipNHJxE+vzj8OT3vt/X+c902ulrN6/aNCIi
MnSPjsiOiijXTCqieFJEr73JvM48ZK5w12LvmezO/M9ZpbY6y+k4Xe2uTfvs
07Qmea726wxd475TB+yFWqtDmvYeRVqSF/FHB50Xa53+1Qb3G7TeHvyizN6s
Wz1zZPIcdjgrt+eZ95m3m8ebf1Ntzyafk9zEiJ1jI3axmz3sZU6+1+l+KpP7
qRHznR0wL9IqPcghSuyHdbYe0RVTIo7qMQqdHdeFekJPcopSe7UW6FI/f9p8
hrPUcI7z1HKBi1ziMmmusN7rruo16rjODYqc39Rb3OYOy5zVa4YG7tLIPZpY
7v6+PuAhzbSw0fkjfcwTWnnKEufP9DlttNPBC7K85BWvecNbOqnyPW7xO78z
z9Iu7aaHefb3ukA/6Ec+UWbv1Zn6WXP0Mdfer4t1pc/zxTzAV7Y5+6bf+cHP
5G87xntP8J2k/v+fDwPg5ICs
         "]], 
        Line3DBox[CompressedData["
1:eJwl00dPFVEYgOFDooiEKFcX2DZuTfwBJgZj3JioG124V4MtQIyiYEdQsUuw
N8RCv/Te7GIvYBdl4VLiRuOCiPGZuHjzfOfMnZk7w2X2quzlWQkhhG9KSAph
YHwII8kh3Jlo1l2d0qKpIbzkKxXo/IwQ8uzlmHN5jw90X9usT3M+r7JHhcqx
3sotrOVDxbXZ+gzTuWR6CGXmXu2PrqU69ateZ3VNB6L7qkGN2uC8c7yug8pT
k5bZb46+r26oSNu1zv4zPtdTHdIOFeuw1jq+kyW6oJvKsHeEu9SiVl3UUvvl
PKrdalO7LqlCfTqmPerQI3VGz+IdbvLMl80LWMlbOq5s673MYhcfa437dDPT
3hUuZBVv64Q2WudH74Krfbba/EQ1Wm+vlC/0Wie1L3oniSGMTfAeUz2juZHl
bGIFm1nJFlaxldVsY7tqzB2sZSfj7GIdu1nPHjYwHgsh5l6/1Gg9yFT91Gia
v6u9dPOIucQ8zEIOMIf9zIiuy5XMnOZa/O6cxZzl9zvXHHd8nnUp57CYM1nA
FOZyzO+8yPlpPv/D/Nu8wvl9jg/ZG7aXz17rSb7/V+sUfmEyh5jEz0zkJ47j
RyYw6IP57+QQ3vMP33GUb5k3xfO63xtzrrnMPBgdj/3/P/wHtXWTIA==
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{5019, 5181, 6835, 5018, 5180, 6834, 5017, 5179, 6833, 5016,
          5178, 6832, 5015, 6900, 6513, 5014, 6899, 6512, 5013, 6898, 6511, 
         6831, 5012, 5177, 6830, 5011, 5176, 6829, 5010, 5175, 6828, 5009, 
         5174, 7009, 5505, 5473, 5474, 5475, 6971, 6593, 5338, 5248, 5394, 
         5315, 6584, 6970, 5369, 5336, 5247, 5393, 5314, 6793, 6969, 6447}], 
        Line3DBox[{5032, 5187, 6842, 5031, 5186, 6841, 5030, 5185, 6840, 5029,
          6905, 6517, 5028, 6904, 6516, 5027, 6903, 6515, 5026, 6902, 6514, 
         6839, 5025, 5184, 6838, 5024, 5183, 6837, 5023, 5182, 6836, 5022, 
         6594, 6901, 5506, 5476, 5507, 5021, 5501, 7006, 5255, 5339, 5254, 
         5398, 5020, 6587, 6988, 5252, 5337, 5251, 5396, 5436, 6795, 7410, 
         6489}], 
        Line3DBox[{5046, 5191, 6847, 5045, 5190, 6846, 5044, 6913, 6523, 5043,
          6912, 6522, 5042, 6911, 6521, 5041, 6910, 6520, 5040, 6909, 6519, 
         6845, 5039, 5189, 6844, 5038, 5188, 6843, 5037, 6908, 6518, 5036, 
         6595, 6907, 5508, 5477, 5509, 5035, 5478, 6563, 6906, 5342, 5261, 
         5401, 5034, 6588, 6989, 5259, 5341, 5258, 5400, 5033, 6980, 6434, 
         6488}], 
        Line3DBox[{5060, 5193, 6850, 5059, 6923, 6529, 5058, 6922, 6528, 5057,
          6921, 6527, 5056, 6920, 6526, 5055, 6919, 6525, 5054, 6918, 6524, 
         6849, 5053, 5192, 6848, 5052, 5488, 6917, 6597, 5051, 5482, 6916, 
         6596, 5050, 6565, 6915, 5479, 5481, 5480, 5049, 5450, 5451, 6914, 
         5345, 5411, 5410, 5048, 6589, 6990, 5408, 5344, 5407, 5406, 5047, 
         6981, 6451}], 
        Line3DBox[{5074, 5279, 6932, 6578, 5073, 5278, 6931, 6576, 5072, 5277,
          6930, 6574, 5071, 6573, 6929, 5275, 5070, 6572, 6928, 5273, 5069, 
         6571, 6927, 5271, 5068, 6999, 5269, 5268, 6972, 5067, 5267, 6926, 
         6569, 5066, 5266, 5489, 6598, 7003, 5490, 5065, 5486, 5487, 5483, 
         7002, 5485, 5484, 5064, 6566, 6925, 5317, 5263, 5063, 6564, 6924, 
         5316, 5262, 5062, 6602, 7005, 5500, 5444, 5437, 5061, 6797, 7412, 
         6486}], 
        Line3DBox[{120, 639, 350, 713, 3431, 119, 638, 348, 3248, 710, 118, 
         633, 347, 3247, 707, 117, 628, 3364, 346, 704, 116, 623, 3356, 345, 
         701, 115, 2896, 618, 344, 698, 114, 2895, 613, 343, 695, 3422, 113, 
         608, 342, 692, 3417, 112, 603, 341, 3246, 689, 111, 598, 340, 3245, 
         688, 110, 597, 3336, 339, 687, 109, 596, 3335, 338, 108, 2894, 107, 
         2893, 2239}], 
        Line3DBox[{5089, 5217, 6868, 5088, 5216, 6867, 5087, 5215, 6866, 5086,
          5214, 6865, 5085, 5213, 6864, 5084, 6934, 6532, 5083, 6933, 6531, 
         6863, 5082, 5212, 6862, 5081, 5211, 6861, 6581, 5080, 5210, 6860, 
         6580, 5079, 5209, 6985, 5325, 5281, 5078, 5208, 6984, 5324, 5280, 
         5283, 5207, 6987, 5371, 5348, 5415, 5414, 5323, 7408, 6484}], 
        Line3DBox[{5101, 5225, 6876, 5100, 5224, 6875, 5099, 5223, 6874, 5098,
          5222, 6873, 5097, 6937, 6535, 5096, 6936, 6534, 5095, 6935, 6533, 
         6872, 5094, 5221, 6871, 5093, 5220, 6870, 5092, 5219, 6869, 5091, 
         5218, 7010, 5510, 5285, 5445, 5447, 5446, 6997, 5351, 5284, 5416, 
         5288, 6585, 6974, 5373, 5350, 5287, 5418, 5326, 7409, 6432, 6448}], 
        Line3DBox[{5112, 5232, 6883, 5111, 5231, 6882, 5110, 5230, 6881, 5109,
          6941, 6540, 5108, 6940, 6539, 5107, 6939, 6538, 5106, 6938, 6537, 
         6880, 5105, 5229, 6879, 5104, 5228, 6878, 5103, 5227, 6877, 5102, 
         5226, 7011, 5511, 5491, 5492, 6977, 6536, 5356, 5291, 5422, 5328, 
         6586, 6976, 5375, 5354, 5290, 5420, 5327, 6794, 6975, 6449}], 
        Line3DBox[{5125, 5237, 6889, 5124, 5236, 6888, 5123, 6947, 6545, 5122,
          6946, 6544, 5121, 6945, 6543, 5120, 6944, 6542, 5119, 6943, 6541, 
         6887, 5118, 5235, 6886, 5117, 5234, 6885, 5116, 5233, 6884, 5115, 
         6599, 6942, 5512, 5493, 5513, 5114, 5494, 7004, 5298, 5357, 5297, 
         5425, 5113, 6590, 6991, 5295, 5355, 5294, 5424, 5441, 6796, 7411, 
         6801}], 
        Line3DBox[{5138, 5306, 5305, 6978, 5137, 6956, 6552, 5136, 6955, 6551,
          5135, 6954, 6550, 5134, 6953, 6549, 5133, 6952, 6548, 5132, 6951, 
         6547, 6892, 5131, 5239, 6891, 5130, 5238, 6890, 5129, 6950, 6546, 
         5128, 6600, 6949, 5514, 5495, 5515, 5127, 5496, 6582, 6948, 5360, 
         5304, 5429, 5126, 6591, 6992, 5302, 5359, 5301, 5428, 5442, 7407, 
         6481}], 
        Line3DBox[{5152, 5383, 5384, 5307, 6979, 6562, 5151, 6966, 6560, 5150,
          6965, 6559, 5149, 6964, 6558, 5148, 6963, 6557, 5147, 6962, 6556, 
         5146, 6961, 6555, 6894, 5145, 5240, 6893, 5144, 6960, 6554, 5143, 
         6959, 6553, 5142, 6601, 6958, 5516, 5518, 5517, 5141, 5497, 5498, 
         6957, 5363, 5434, 5433, 5140, 6592, 6993, 5432, 5362, 5431, 5430, 
         5139, 6996, 6433, 6480}], 
        Line3DBox[{5282, 5206, 6859, 6579, 5464, 5205, 6858, 6577, 5463, 5204,
          6857, 6575, 5462, 5203, 6856, 5276, 5461, 5202, 6855, 5274, 5460, 
         5201, 6854, 5272, 5459, 6973, 6530, 5270, 6998, 5458, 5200, 6853, 
         6570, 5457, 5199, 5322, 6852, 6568, 5453, 5198, 5321, 6851, 6567, 
         5452, 5197, 6983, 5320, 5265, 5456, 5196, 6982, 5319, 5520, 5519, 
         5499, 5195, 6995, 5439, 5438, 5075, 5194, 7406, 6485}], 
        Line3DBox[{5313, 5173, 5245, 6968, 5008, 5172, 6827, 5007, 5171, 6826,
          5006, 5170, 6825, 5005, 5169, 6824, 5004, 6897, 6510, 5003, 6896, 
         6509, 6823, 5002, 5168, 6822, 5001, 5167, 6821, 5000, 5166, 6820, 
         4999, 5165, 7008, 5504, 5469, 5470, 5472, 5471, 7001, 5333, 5244, 
         5391, 5312, 6583, 6967, 5367, 5332, 5243, 5390, 5311, 6994, 6458}], 
        Line3DBox[{5468, 5164, 5502, 5449, 5443, 6819, 6561, 4997, 5163, 6818,
          4996, 5162, 6817, 4995, 5161, 6816, 4994, 5160, 6815, 4993, 5159, 
         6814, 4992, 6895, 6508, 6813, 4991, 5158, 6812, 4990, 5157, 6811, 
         4989, 5156, 6810, 4988, 5155, 7007, 5503, 5465, 5466, 5154, 5467, 
         7000, 5330, 5389, 5388, 5310, 5153, 6986, 5364, 5329, 5386, 5385, 
         5455, 7413, 6507, 6803}], 
        Line3DBox[{5553, 5712, 7098, 5552, 5711, 7097, 5551, 5710, 7096, 5550,
          5709, 7095, 5549, 7017, 6609, 5548, 7016, 6608, 5547, 7015, 6607, 
         7094, 5546, 5708, 7093, 5545, 5707, 7092, 5544, 5706, 7091, 5543, 
         5705, 7198, 5963, 5938, 5939, 5940, 7199, 6688, 5846, 5770, 5888, 
         5827, 6681, 7180, 5870, 5845, 5769, 5887, 5826, 7172, 6435, 6465}], 
        Line3DBox[{5564, 5718, 7105, 5563, 5717, 7104, 5562, 5716, 7103, 5561,
          7022, 6613, 5560, 7021, 6612, 5559, 7020, 6611, 5558, 7019, 6610, 
         7102, 5557, 5715, 7101, 5556, 5714, 7100, 5555, 5713, 7099, 5554, 
         7018, 1394, 1395, 4027, 994, 1075, 3885, 992, 1074, 3884, 2361}], 
        Line3DBox[{5578, 5722, 7110, 5577, 5721, 7109, 5576, 7030, 6619, 5575,
          7029, 6618, 5574, 7028, 6617, 5573, 7027, 6616, 5572, 7026, 6615, 
         7108, 5571, 5720, 7107, 5570, 5719, 7106, 5569, 7025, 6614, 5568, 
         6689, 7205, 5964, 5941, 5965, 5567, 5942, 7024, 5777, 5849, 5776, 
         5891, 5566, 6683, 7023, 5774, 5848, 5773, 5890, 5565, 7183, 6438, 
         6498}], 
        Line3DBox[{5592, 5724, 7113, 5591, 7036, 6625, 5590, 7035, 6624, 5589,
          7034, 6623, 5588, 7033, 6622, 5587, 7032, 6621, 5586, 7031, 6620, 
         7112, 5585, 5723, 7111, 5584, 5950, 7202, 6691, 5583, 5944, 7201, 
         6690, 5582, 6663, 7200, 5943, 1404, 5581, 1312, 7192, 5852, 1216, 
         5580, 7185, 1214, 5851, 1213, 5579, 7184, 6467}], 
        Line3DBox[{5606, 5795, 7163, 6676, 5605, 5794, 7161, 6674, 5604, 5793,
          7159, 6672, 5603, 6671, 7157, 5791, 5602, 6670, 7155, 5789, 5601, 
         6669, 7153, 5787, 5600, 7037, 5785, 5784, 7193, 5599, 5783, 7151, 
         6667, 5598, 5782, 5951, 6692, 7203, 5952, 5597, 5948, 5949, 5945, 
         7150, 5947, 5946, 5596, 6664, 7174, 5829, 5779, 5595, 6662, 7173, 
         5828, 5778, 5594, 6697, 7189, 5959, 5915, 5909, 5593, 7191, 6440, 
         6496}], 
        Line3DBox[{864, 1383, 1094, 1457, 4076, 863, 1382, 1092, 3893, 1454, 
         862, 1377, 1091, 3892, 1451, 861, 1372, 4009, 1090, 1448, 860, 1367, 
         4001, 1089, 1445, 859, 3541, 1362, 1088, 1442, 858, 3540, 1357, 1087,
          1439, 4067, 857, 1352, 1086, 1436, 4062, 856, 1347, 1085, 3891, 
         1433, 855, 1342, 1084, 3890, 1432, 854, 1341, 3981, 1083, 1431, 853, 
         1340, 3980, 1082, 852, 3539, 851, 3538, 2333}], 
        Line3DBox[{5620, 5746, 7121, 5619, 5745, 7120, 5618, 5744, 7119, 5617,
          5743, 7118, 5616, 5742, 7117, 5615, 7039, 6629, 5614, 7038, 6628, 
         7116, 5613, 5741, 7115, 5612, 5740, 7168, 6679, 5611, 5739, 7167, 
         6678, 5610, 5738, 7166, 5837, 5797, 5609, 5737, 7165, 5836, 5796, 
         5799, 7169, 1153, 5855, 1219, 5835, 7415, 6494}], 
        Line3DBox[{5632, 5754, 7129, 5631, 5753, 7128, 5630, 5752, 7127, 5629,
          5751, 7126, 5628, 7042, 6632, 5627, 7041, 6631, 5626, 7040, 6630, 
         7125, 5625, 5750, 7124, 5624, 5749, 7123, 5623, 5748, 7122, 5622, 
         5747, 7170, 5966, 5801, 5916, 5917, 7190, 6686, 5858, 5800, 5892, 
         5804, 6682, 7181, 5872, 5857, 5803, 5894, 5838, 7416, 6436, 6466}], 
        Line3DBox[{5643, 5760, 7136, 5642, 5759, 7135, 5641, 5758, 7134, 5640,
          7047, 6636, 5639, 7046, 6635, 5638, 7045, 6634, 5637, 7044, 6633, 
         7133, 5636, 5757, 7132, 5635, 5756, 7131, 5634, 5755, 7130, 5633, 
         7043, 1413, 1414, 4045, 1049, 1105, 3899, 1047, 1104, 3898, 2366}], 
        Line3DBox[{5656, 5764, 7141, 5655, 5763, 7140, 5654, 7055, 6642, 5653,
          7054, 6641, 5652, 7053, 6640, 5651, 7052, 6639, 5650, 7051, 6638, 
         7139, 5649, 5762, 7138, 5648, 5761, 7137, 5647, 7050, 6637, 5646, 
         6693, 7206, 5967, 5953, 5968, 5645, 5954, 7049, 5811, 5861, 5810, 
         5897, 5644, 6684, 7048, 5808, 5860, 5807, 5896, 5912, 7417, 6439, 
         6804}], 
        Line3DBox[{5669, 5819, 5818, 7144, 5668, 7063, 6650, 5667, 7062, 6649,
          5666, 7061, 6648, 5665, 7060, 6647, 5664, 7059, 6646, 5663, 7058, 
         6645, 7143, 5662, 5765, 7142, 5661, 7057, 6644, 5660, 7056, 6643, 
         5659, 6694, 7207, 5969, 5955, 5970, 5658, 5956, 6680, 7204, 5864, 
         5817, 5902, 5657, 7186, 5901, 5815, 5863, 5814, 5900, 5913, 7418, 
         6492}], 
        Line3DBox[{5683, 5880, 5881, 5820, 7146, 6661, 5682, 7072, 6659, 5681,
          7071, 6658, 5680, 7070, 6657, 5679, 7069, 6656, 5678, 7068, 6655, 
         5677, 7067, 6654, 7145, 5676, 7066, 6653, 5675, 7065, 6652, 5674, 
         7064, 6651, 5673, 6695, 7208, 5971, 5973, 5972, 5672, 5957, 7178, 
         6696, 5867, 5907, 5906, 5671, 6685, 7177, 5905, 5866, 5904, 5903, 
         5670, 7182, 6437, 6491}], 
        Line3DBox[{5798, 5736, 7164, 6677, 5932, 5735, 7162, 6675, 5931, 5734,
          7160, 6673, 5930, 5733, 7158, 5792, 5929, 5732, 7156, 5790, 5928, 
         5731, 7154, 5788, 5927, 7194, 6627, 5786, 7114, 5926, 5730, 7152, 
         6668, 5925, 5729, 5834, 7176, 6666, 5921, 5728, 5833, 7175, 6665, 
         5920, 5727, 7149, 5832, 5781, 5924, 5726, 7148, 5831, 5975, 5974, 
         5958, 5725, 7187, 5911, 5910, 5607, 7414, 6626, 6495}], 
        Line3DBox[{5825, 5704, 5767, 7090, 5542, 5703, 7089, 5541, 5702, 7088,
          5540, 5701, 7087, 5539, 5700, 7086, 5538, 7014, 6606, 5537, 7013, 
         6605, 7085, 5536, 5699, 7084, 5535, 5698, 7083, 5534, 5697, 7082, 
         5533, 5696, 7197, 5962, 5936, 5937, 1390, 7147, 5843, 1182, 5824, 
         7171, 1144, 5842, 1180, 1261, 3933, 2398}], 
        Line3DBox[{5935, 5695, 5960, 5919, 5914, 7188, 6660, 5531, 5694, 7081,
          5530, 5693, 7080, 5529, 5692, 7079, 5528, 5691, 7078, 5527, 5690, 
         7077, 5526, 7012, 6604, 7076, 5525, 5689, 7075, 5524, 5688, 7074, 
         5523, 5687, 7073, 5522, 5686, 7195, 5961, 5933, 5934, 5685, 7196, 
         6687, 5840, 5885, 5884, 5823, 5684, 7179, 5868, 5839, 5883, 5882, 
         5923, 7419, 6603, 6806}], 
        Line3DBox[{6008, 6167, 7295, 6007, 6166, 7294, 6006, 6165, 7293, 6005,
          6164, 7292, 6004, 7214, 6704, 6003, 7213, 6703, 6002, 7212, 6702, 
         7291, 6001, 6163, 7290, 6000, 6162, 7289, 5999, 6161, 7288, 5998, 
         6160, 7395, 6418, 6393, 6394, 6395, 7396, 6783, 6301, 6225, 6343, 
         6282, 6776, 7377, 6325, 6300, 6224, 6342, 6281, 7369, 6441, 6475}], 
        Line3DBox[{6019, 6173, 7302, 6018, 6172, 7301, 6017, 6171, 7300, 6016,
          7219, 6708, 6015, 7218, 6707, 6014, 7217, 6706, 6013, 7216, 6705, 
         7299, 6012, 6170, 7298, 6011, 6169, 7297, 6010, 6168, 7296, 6009, 
         7215, 2138, 2139, 4672, 1738, 1819, 4530, 1736, 1818, 4529, 2455}], 
        Line3DBox[{6033, 6177, 7307, 6032, 6176, 7306, 6031, 7227, 6714, 6030,
          7226, 6713, 6029, 7225, 6712, 6028, 7224, 6711, 6027, 7223, 6710, 
         7305, 6026, 6175, 7304, 6025, 6174, 7303, 6024, 7222, 6709, 6023, 
         6784, 7402, 6419, 6396, 6420, 6022, 6397, 7221, 6232, 6304, 6231, 
         6346, 6021, 6778, 7220, 6229, 6303, 6228, 6345, 6020, 7380, 6444, 
         6506}], 
        Line3DBox[{6047, 6179, 7310, 6046, 7233, 6720, 6045, 7232, 6719, 6044,
          7231, 6718, 6043, 7230, 6717, 6042, 7229, 6716, 6041, 7228, 6715, 
         7309, 6040, 6178, 7308, 6039, 6405, 7399, 6786, 6038, 6399, 7398, 
         6785, 6037, 6758, 7397, 6398, 2148, 6036, 2056, 7389, 6307, 1960, 
         6035, 7382, 1958, 6306, 1957, 6034, 7381, 6477}], 
        Line3DBox[{6061, 6250, 7360, 6771, 6060, 6249, 7358, 6769, 6059, 6248,
          7356, 6767, 6058, 6766, 7354, 6246, 6057, 6765, 7352, 6244, 6056, 
         6764, 7350, 6242, 6055, 7234, 6240, 6239, 7390, 6054, 6238, 7348, 
         6762, 6053, 6237, 6406, 6787, 7400, 6407, 6052, 6403, 6404, 6400, 
         7347, 6402, 6401, 6051, 6759, 7371, 6284, 6234, 6050, 6757, 7370, 
         6283, 6233, 6049, 6792, 7386, 6414, 6370, 6364, 6048, 7388, 6446, 
         6504}], 
        Line3DBox[{1608, 2127, 1838, 2201, 4721, 1607, 2126, 1836, 4538, 2198,
          1606, 2121, 1835, 4537, 2195, 1605, 2116, 4654, 1834, 2192, 1604, 
         2111, 4646, 1833, 2189, 1603, 4186, 2106, 1832, 2186, 1602, 4185, 
         2101, 1831, 2183, 4712, 1601, 2096, 1830, 2180, 4707, 1600, 2091, 
         1829, 4536, 2177, 1599, 2086, 1828, 4535, 2176, 1598, 2085, 4626, 
         1827, 2175, 1597, 2084, 4625, 1826, 1596, 4184, 1595, 4183, 2427}], 
        Line3DBox[{6075, 6201, 7318, 6074, 6200, 7317, 6073, 6199, 7316, 6072,
          6198, 7315, 6071, 6197, 7314, 6070, 7236, 6724, 6069, 7235, 6723, 
         7313, 6068, 6196, 7312, 6067, 6195, 7365, 6774, 6066, 6194, 7364, 
         6773, 6065, 6193, 7363, 6292, 6252, 6064, 6192, 7362, 6291, 6251, 
         6254, 7366, 1897, 6310, 1963, 6290, 7421, 6502}], 
        Line3DBox[{6087, 6209, 7326, 6086, 6208, 7325, 6085, 6207, 7324, 6084,
          6206, 7323, 6083, 7239, 6727, 6082, 7238, 6726, 6081, 7237, 6725, 
         7322, 6080, 6205, 7321, 6079, 6204, 7320, 6078, 6203, 7319, 6077, 
         6202, 7367, 6421, 6256, 6371, 6372, 7387, 6781, 6313, 6255, 6347, 
         6259, 6777, 7378, 6327, 6312, 6258, 6349, 6293, 7422, 6442, 6476}], 
        Line3DBox[{6098, 6215, 7333, 6097, 6214, 7332, 6096, 6213, 7331, 6095,
          7244, 6731, 6094, 7243, 6730, 6093, 7242, 6729, 6092, 7241, 6728, 
         7330, 6091, 6212, 7329, 6090, 6211, 7328, 6089, 6210, 7327, 6088, 
         7240, 2157, 2158, 4690, 1793, 1849, 4544, 1791, 1848, 4543, 2460}], 
        Line3DBox[{6111, 6219, 7338, 6110, 6218, 7337, 6109, 7252, 6737, 6108,
          7251, 6736, 6107, 7250, 6735, 6106, 7249, 6734, 6105, 7248, 6733, 
         7336, 6104, 6217, 7335, 6103, 6216, 7334, 6102, 7247, 6732, 6101, 
         6788, 7403, 6422, 6408, 6423, 6100, 6409, 7246, 6266, 6316, 6265, 
         6352, 6099, 6779, 7245, 6263, 6315, 6262, 6351, 6367, 7423, 6445, 
         6807}], 
        Line3DBox[{6124, 6274, 6273, 7341, 6123, 7260, 6745, 6122, 7259, 6744,
          6121, 7258, 6743, 6120, 7257, 6742, 6119, 7256, 6741, 6118, 7255, 
         6740, 7340, 6117, 6220, 7339, 6116, 7254, 6739, 6115, 7253, 6738, 
         6114, 6789, 7404, 6424, 6410, 6425, 6113, 6411, 6775, 7401, 6319, 
         6272, 6357, 6112, 7383, 6356, 6270, 6318, 6269, 6355, 6368, 7424, 
         6500}], 
        Line3DBox[{6138, 6335, 6336, 6275, 7343, 6756, 6137, 7269, 6754, 6136,
          7268, 6753, 6135, 7267, 6752, 6134, 7266, 6751, 6133, 7265, 6750, 
         6132, 7264, 6749, 7342, 6131, 7263, 6748, 6130, 7262, 6747, 6129, 
         7261, 6746, 6128, 6790, 7405, 6426, 6428, 6427, 6127, 6412, 7375, 
         6791, 6322, 6362, 6361, 6126, 6780, 7374, 6360, 6321, 6359, 6358, 
         6125, 7379, 6443, 6499}], 
        Line3DBox[{6253, 6191, 7361, 6772, 6387, 6190, 7359, 6770, 6386, 6189,
          7357, 6768, 6385, 6188, 7355, 6247, 6384, 6187, 7353, 6245, 6383, 
         6186, 7351, 6243, 6382, 7391, 6722, 6241, 7311, 6381, 6185, 7349, 
         6763, 6380, 6184, 6289, 7373, 6761, 6376, 6183, 6288, 7372, 6760, 
         6375, 6182, 7346, 6287, 6236, 6379, 6181, 7345, 6286, 6430, 6429, 
         6413, 6180, 7384, 6366, 6365, 6062, 7420, 6721, 6503}], 
        Line3DBox[{6280, 6159, 6222, 7287, 5997, 6158, 7286, 5996, 6157, 7285,
          5995, 6156, 7284, 5994, 6155, 7283, 5993, 7211, 6701, 5992, 7210, 
         6700, 7282, 5991, 6154, 7281, 5990, 6153, 7280, 5989, 6152, 7279, 
         5988, 6151, 7394, 6417, 6391, 6392, 2134, 7344, 6298, 1926, 6279, 
         7368, 1888, 6297, 1924, 2005, 4578, 2492}], 
        Line3DBox[{6390, 6150, 6415, 6374, 6369, 7385, 6755, 5986, 6149, 7278,
          5985, 6148, 7277, 5984, 6147, 7276, 5983, 6146, 7275, 5982, 6145, 
         7274, 5981, 7209, 6699, 7273, 5980, 6144, 7272, 5979, 6143, 7271, 
         5978, 6142, 7270, 5977, 6141, 7392, 6416, 6388, 6389, 6140, 7393, 
         6782, 6295, 6340, 6339, 6278, 6139, 7376, 6323, 6294, 6338, 6337, 
         6378, 7425, 6698, 6809}]}, {
        GrayLevel[0.2], 
        Line3DBox[{2800, 2998, 6810, 2801, 3011, 6820, 2824, 3024, 6828, 2839,
          3038, 6836, 2854, 6908, 3052, 2869, 6916, 3391, 3392, 3393, 3394, 
         7002, 3190, 3304, 3191, 3325, 3245, 3326, 3192, 3318, 3193, 6851, 
         3249, 3220, 3221, 6860, 2914, 3104, 6869, 2929, 3119, 6877, 2944, 
         3134, 6884, 2958, 6950, 3149, 2972, 6959, 3162, 2985}], 
        Line3DBox[{2802, 2999, 6811, 2803, 3012, 6821, 2825, 3025, 6829, 2840,
          3039, 6837, 2855, 3053, 6843, 2870, 6917, 3395, 3396, 3397, 7003, 
         3398, 3194, 3307, 3195, 3327, 3246, 3328, 3196, 3320, 3197, 6852, 
         3250, 3222, 3223, 6861, 2915, 3105, 6870, 2930, 3120, 6878, 2945, 
         3135, 6885, 2959, 3150, 6890, 2973, 6960, 3163, 2986}], 
        Line3DBox[{2804, 3000, 6812, 2805, 3013, 6822, 2826, 3026, 6830, 2841,
          3040, 6838, 2856, 3054, 6844, 2871, 3067, 6848, 2884, 6926, 3198, 
         3337, 3414, 3413, 3417, 3415, 3416, 3338, 3199, 6853, 2901, 3092, 
         6862, 2916, 3106, 6871, 2931, 3121, 6879, 2946, 3136, 6886, 2960, 
         3151, 6891, 2974, 3164, 6893, 2987}], 
        Line3DBox[{2806, 3001, 6813, 2808, 3014, 6823, 2827, 3027, 6831, 2842,
          3041, 6839, 2857, 3055, 6845, 2872, 3068, 6849, 2885, 3200, 6972, 
         3339, 3419, 3418, 3422, 3420, 3421, 3340, 6998, 3202, 2902, 3093, 
         6863, 2917, 3107, 6872, 2932, 3122, 6880, 2947, 3137, 6887, 2961, 
         3152, 6892, 2975, 3165, 6894, 2988}], 
        Line3DBox[{2810, 3003, 6814, 2811, 6897, 3016, 2829, 6899, 3029, 2844,
          6903, 3043, 2859, 6910, 3057, 2874, 6919, 3070, 2887, 6927, 3203, 
         3346, 3347, 3079, 2896, 3349, 3350, 3348, 3085, 6854, 2904, 6934, 
         3095, 2919, 6936, 3109, 2934, 6939, 3124, 2949, 6944, 3139, 2963, 
         6952, 3154, 2977, 6962, 3167, 2990}], 
        Line3DBox[{2812, 3004, 6815, 2813, 3017, 6824, 2830, 6900, 3030, 2845,
          6904, 3044, 2860, 6911, 3058, 2875, 6920, 3071, 2888, 6928, 3204, 
         3351, 3352, 3353, 3356, 3355, 3205, 3354, 3086, 6855, 2905, 3096, 
         6864, 2920, 6937, 3110, 2935, 6940, 3125, 2950, 6945, 3140, 2964, 
         6953, 3155, 2978, 6963, 3168, 2991}], 
        Line3DBox[{2814, 3005, 6816, 2815, 3018, 6825, 2831, 3031, 6832, 2846,
          6905, 3045, 2861, 6912, 3059, 2876, 6921, 3072, 2889, 6929, 3206, 
         3357, 3359, 3360, 3364, 3363, 3207, 3361, 3087, 6856, 2906, 3097, 
         6865, 2921, 3111, 6873, 2936, 6941, 3126, 2951, 6946, 3141, 2965, 
         6954, 3156, 2979, 6964, 3169, 2992}], 
        Line3DBox[{2816, 3006, 6817, 2817, 3019, 6826, 2832, 3032, 6833, 2847,
          3046, 6840, 2862, 6913, 3060, 2877, 6922, 3073, 2890, 6930, 3208, 
         3358, 3209, 3423, 3247, 3424, 3210, 3362, 3211, 6857, 2907, 3098, 
         6866, 2922, 3112, 6874, 2937, 3127, 6881, 2952, 6947, 3142, 2966, 
         6955, 3157, 2980, 6965, 3170, 2993}], 
        Line3DBox[{2818, 3007, 6818, 2819, 3020, 6827, 2833, 3033, 6834, 2848,
          3047, 6841, 2863, 3061, 6846, 2878, 6923, 3074, 2891, 6931, 3212, 
         3365, 3213, 3425, 3248, 3426, 3214, 3366, 3215, 6858, 2908, 3099, 
         6867, 2923, 3113, 6875, 2938, 3128, 6882, 2953, 3143, 6888, 2967, 
         6956, 3158, 2981, 6966, 3171, 2994}], 
        Line3DBox[{2820, 3172, 3173, 6819, 3302, 3179, 6968, 3180, 2834, 3034,
          6835, 2849, 3048, 6842, 2864, 3062, 6847, 2879, 3075, 6850, 2892, 
         6932, 3216, 3367, 3428, 3427, 3431, 3429, 3430, 3368, 3217, 6859, 
         2909, 3100, 6868, 2924, 3114, 6876, 2939, 3129, 6883, 2954, 3144, 
         6889, 2968, 3231, 6978, 3232, 3233, 6979, 3174, 3175, 3235}], 
        Line3DBox[CompressedData["
1:eJwV0LsuA2AYBuCvQweHDhKbRCJWk6UJIazOWolJhIml3IArcAPESiNiFGel
zsc6s5iMEgkmTB7Dk/f737dNmtaNTmRyiYgYIV8RMVgZ0ZKK2JDPPNFfEzFr
63AfsE6f7lE+MG1rlvus0Wu7l3dM2RpkkTb9qrzlhpytVu7RapuT15QYtnXq
qty7zPDLDxlb1lbmHvBbX2WPLimz3uOMMeQz7fpvJr0TLPvMFZf/37E32t4o
eC/RrbuQ59TrX9hxL9JlO5OnVOtLbLub9Hl5wjFJfZEtd9q2II845L3c/6hb
sW96z/PFJx/8Af2CPlE=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj9LgmEUhvGj/QOzJXCpKXCyrMjIqAhqCEMxMgKFiGjL8jWhuU/Q1JZU
Q0tfrlxyqanfO1xc97nPc+BZuu63kkxEdPA5G9HOR5zORXxweTGiJQ/1dXNT
fuei/kR+0u+Z6/KF7k1uyI/6snygq5lf5WPu60fyuf6bv/CCK31NNy8/48x8
ZM7JU+4euMfTmMEkJpDFwC7v7aGbX/yY75HVjbmS/tG7Xeykf9D9LUTsy0W7
ba5iC5duEvs7uWC3yZX0Vr/BPbvb9B9269zRr/EqunZdHuUiVrhtt8wl3NgN
OME/y6omgQ==
         "]], 
        Line3DBox[{2984, 3161, 3408, 6958, 2971, 3148, 3405, 6949, 2957, 3133,
          3402, 6942, 2943, 7011, 3118, 3399, 2928, 7010, 3103, 3226, 2913, 
         6985, 3091, 3219, 2900, 6983, 3083, 3317, 3189, 3319, 3336, 3306, 
         3305, 3303, 3187, 6925, 2883, 3066, 3186, 6915, 2868, 3051, 3385, 
         6907, 2853, 3037, 3381, 6901, 2838, 7009, 3023, 3377, 2823, 7008, 
         3010, 3373, 2799, 7007, 2997, 3369, 3439}], 
        Line3DBox[{2989, 3166, 6961, 2976, 3153, 6951, 2962, 3138, 6943, 2948,
          3123, 6938, 2933, 3108, 6935, 2918, 3094, 6933, 2903, 3084, 6973, 
         3343, 3345, 3344, 2895, 3078, 3342, 3341, 6999, 3201, 2886, 3069, 
         6918, 2873, 3056, 6909, 2858, 3042, 6902, 2843, 3028, 6898, 2828, 
         3015, 6896, 2809, 3002, 6895, 2807}], 
        Line3DBox[{3445, 3643, 7073, 3446, 3656, 7082, 3469, 3669, 7091, 3484,
          3683, 7099, 3499, 7025, 3697, 3514, 7201, 4036, 4037, 4038, 4039, 
         7150, 3835, 3949, 3836, 3970, 3890, 3971, 3837, 3963, 3838, 7175, 
         3894, 3865, 3866, 7167, 3559, 3749, 7122, 3574, 3764, 7130, 3589, 
         7050, 3779, 3603, 7056, 3794, 3617, 7064, 3807, 3630}], 
        Line3DBox[{3447, 3644, 7074, 3448, 3657, 7083, 3470, 3670, 7092, 3485,
          3684, 7100, 3500, 3698, 7106, 3515, 7202, 4040, 4041, 4042, 7203, 
         4043, 3839, 3952, 3840, 3972, 3891, 3973, 3841, 3965, 3842, 7176, 
         3895, 3867, 3868, 7168, 3560, 3750, 7123, 3575, 3765, 7131, 3590, 
         3780, 7137, 3604, 7057, 3795, 3618, 7065, 3808, 3631}], 
        Line3DBox[{3449, 3645, 7075, 3450, 3658, 7084, 3471, 3671, 7093, 3486,
          3685, 7101, 3501, 3699, 7107, 3516, 3712, 7111, 3529, 7151, 3843, 
         3982, 4059, 4058, 4062, 4060, 4061, 3983, 3844, 7152, 3546, 3737, 
         7115, 3561, 3751, 7124, 3576, 3766, 7132, 3591, 3781, 7138, 3605, 
         3796, 7142, 3619, 7066, 3809, 3632}], 
        Line3DBox[{3451, 3646, 7076, 3453, 3659, 7085, 3472, 3672, 7094, 3487,
          3686, 7102, 3502, 3700, 7108, 3517, 3713, 7112, 3530, 3845, 7193, 
         3984, 4064, 4063, 4067, 4065, 4066, 3985, 7114, 3847, 3547, 3738, 
         7116, 3562, 3752, 7125, 3577, 3767, 7133, 3592, 3782, 7139, 3606, 
         3797, 7143, 3620, 3810, 7145, 3633}], 
        Line3DBox[{3455, 3648, 7077, 3456, 7014, 3661, 3474, 7016, 3674, 3489,
          7020, 3688, 3504, 7027, 3702, 3519, 7032, 3715, 3532, 7153, 3848, 
         3991, 3992, 3724, 3541, 3994, 3995, 3993, 3730, 7154, 3549, 7039, 
         3740, 3564, 7041, 3754, 3579, 7045, 3769, 3594, 7052, 3784, 3608, 
         7059, 3799, 3622, 7068, 3812, 3635}], 
        Line3DBox[{3457, 3649, 7078, 3458, 3662, 7086, 3475, 7017, 3675, 3490,
          7021, 3689, 3505, 7028, 3703, 3520, 7033, 3716, 3533, 7155, 3849, 
         3996, 3997, 3998, 4001, 4000, 3850, 3999, 3731, 7156, 3550, 3741, 
         7117, 3565, 7042, 3755, 3580, 7046, 3770, 3595, 7053, 3785, 3609, 
         7060, 3800, 3623, 7069, 3813, 3636}], 
        Line3DBox[{3459, 3650, 7079, 3460, 3663, 7087, 3476, 3676, 7095, 3491,
          7022, 3690, 3506, 7029, 3704, 3521, 7034, 3717, 3534, 7157, 3851, 
         4002, 4004, 4005, 4009, 4008, 3852, 4006, 3732, 7158, 3551, 3742, 
         7118, 3566, 3756, 7126, 3581, 7047, 3771, 3596, 7054, 3786, 3610, 
         7061, 3801, 3624, 7070, 3814, 3637}], 
        Line3DBox[{3461, 3651, 7080, 3462, 3664, 7088, 3477, 3677, 7096, 3492,
          3691, 7103, 3507, 7030, 3705, 3522, 7035, 3718, 3535, 7159, 3853, 
         4003, 3854, 4068, 3892, 4069, 3855, 4007, 3856, 7160, 3552, 3743, 
         7119, 3567, 3757, 7127, 3582, 3772, 7134, 3597, 7055, 3787, 3611, 
         7062, 3802, 3625, 7071, 3815, 3638}], 
        Line3DBox[{3463, 3652, 7081, 3464, 3665, 7089, 3478, 3678, 7097, 3493,
          3692, 7104, 3508, 3706, 7109, 3523, 7036, 3719, 3536, 7161, 3857, 
         4010, 3858, 4070, 3893, 4071, 3859, 4011, 3860, 7162, 3553, 3744, 
         7120, 3568, 3758, 7128, 3583, 3773, 7135, 3598, 3788, 7140, 3612, 
         7063, 3803, 3626, 7072, 3816, 3639}], 
        Line3DBox[{3465, 3817, 3818, 7188, 3947, 3824, 7090, 3825, 3479, 3679,
          7098, 3494, 3693, 7105, 3509, 3707, 7110, 3524, 3720, 7113, 3537, 
         7163, 3861, 4012, 4073, 4072, 4076, 4074, 4075, 4013, 3862, 7164, 
         3554, 3745, 7121, 3569, 3759, 7129, 3584, 3774, 7136, 3599, 3789, 
         7141, 3613, 3876, 7144, 3877, 3878, 7146, 3819, 3820, 3880}], 
        Line3DBox[CompressedData["
1:eJwNzjksRGEUBtA7VMJYozKEkomIUjCMZezbjJ1EaHReIkGFTmQKpUSt0aq0
otAqFEiUWhrRO8XJvff7Xv68jr2keJCKiB2ytRGfPNVF5Nhmi6pMRJv8hUn3
IJs0yjfMevkjE/YBLlsi1s01KuT3FOz9rLLCbzriVj5uT3un3VymxJfuWpeS
j7lbOeeMN12T/Er/4d7nVVZ2v9t/+KbZN8/yU/mf+4JeijTolswHfaIftfeQ
+O9Fc4E73a5uxN7NPHPcyEvyvL3GO1lzlhnKuoKuUj7s7mKaKQ511fI+/ZC7
kxOOOeIfAxgsiw==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj0vg2EYxfFLxCJBLEg0miKx+DQWuw9A6VKL1VuTjhLfwKReGoSGxmDS
EIKlo4koVU0MEr97+Odc55z7up4nt7A0t9gTEfOYHYxo4mkoYgbP6M9EZGV3
eOCnMC17pMOyeurMm+MRk/QevbJD3JpzaKAzEFGgKxixv0wn8Cr/s7vj/Sj/
wr/zZX6L/6Vtuo1S+g42sI6urs+tGztr5qLsh47JVs2n8jq9wiXy7nb01+Y9
XY1e4Bzf8i+6Kz9Lu8i6c0Lbus/0D7oqfXPnmB6hpWvRgi7j/YG5gn186Lrp
Nv4BV8o9NQ==
         "]], 
        Line3DBox[{3629, 3806, 4053, 7208, 3616, 3793, 4050, 7207, 3602, 3778,
          4047, 7206, 3588, 3763, 7043, 4044, 3573, 7170, 3748, 3871, 3558, 
         7166, 3736, 3864, 3545, 7149, 3728, 3962, 3834, 3964, 3981, 3951, 
         3950, 3948, 3832, 7174, 3528, 3711, 3831, 7200, 3513, 3696, 4030, 
         7205, 3498, 3682, 7018, 4026, 3483, 7198, 3668, 4022, 3468, 7197, 
         3655, 4018, 3444, 7195, 3642, 4014, 4084}], 
        Line3DBox[{3634, 3811, 7067, 3621, 3798, 7058, 3607, 3783, 7051, 3593,
          3768, 7044, 3578, 3753, 7040, 3563, 3739, 7038, 3548, 3729, 7194, 
         3988, 3990, 3989, 3540, 3723, 3987, 3986, 7037, 3846, 3531, 3714, 
         7031, 3518, 3701, 7026, 3503, 3687, 7019, 3488, 3673, 7015, 3473, 
         3660, 7013, 3454, 3647, 7012, 3452}], 
        Line3DBox[{4090, 4288, 7270, 4091, 4301, 7279, 4114, 4314, 7288, 4129,
          4328, 7296, 4144, 7222, 4342, 4159, 7398, 4681, 4682, 4683, 4684, 
         7347, 4480, 4594, 4481, 4615, 4535, 4616, 4482, 4608, 4483, 7372, 
         4539, 4510, 4511, 7364, 4204, 4394, 7319, 4219, 4409, 7327, 4234, 
         7247, 4424, 4248, 7253, 4439, 4262, 7261, 4452, 4275}], 
        Line3DBox[{4092, 4289, 7271, 4093, 4302, 7280, 4115, 4315, 7289, 4130,
          4329, 7297, 4145, 4343, 7303, 4160, 7399, 4685, 4686, 4687, 7400, 
         4688, 4484, 4597, 4485, 4617, 4536, 4618, 4486, 4610, 4487, 7373, 
         4540, 4512, 4513, 7365, 4205, 4395, 7320, 4220, 4410, 7328, 4235, 
         4425, 7334, 4249, 7254, 4440, 4263, 7262, 4453, 4276}], 
        Line3DBox[{4094, 4290, 7272, 4095, 4303, 7281, 4116, 4316, 7290, 4131,
          4330, 7298, 4146, 4344, 7304, 4161, 4357, 7308, 4174, 7348, 4488, 
         4627, 4704, 4703, 4707, 4705, 4706, 4628, 4489, 7349, 4191, 4382, 
         7312, 4206, 4396, 7321, 4221, 4411, 7329, 4236, 4426, 7335, 4250, 
         4441, 7339, 4264, 7263, 4454, 4277}], 
        Line3DBox[{4096, 4291, 7273, 4098, 4304, 7282, 4117, 4317, 7291, 4132,
          4331, 7299, 4147, 4345, 7305, 4162, 4358, 7309, 4175, 4490, 7390, 
         4629, 4709, 4708, 4712, 4710, 4711, 4630, 7311, 4492, 4192, 4383, 
         7313, 4207, 4397, 7322, 4222, 4412, 7330, 4237, 4427, 7336, 4251, 
         4442, 7340, 4265, 4455, 7342, 4278}], 
        Line3DBox[{4100, 4293, 7274, 4101, 7211, 4306, 4119, 7213, 4319, 4134,
          7217, 4333, 4149, 7224, 4347, 4164, 7229, 4360, 4177, 7350, 4493, 
         4636, 4637, 4369, 4186, 4639, 4640, 4638, 4375, 7351, 4194, 7236, 
         4385, 4209, 7238, 4399, 4224, 7242, 4414, 4239, 7249, 4429, 4253, 
         7256, 4444, 4267, 7265, 4457, 4280}], 
        Line3DBox[{4102, 4294, 7275, 4103, 4307, 7283, 4120, 7214, 4320, 4135,
          7218, 4334, 4150, 7225, 4348, 4165, 7230, 4361, 4178, 7352, 4494, 
         4641, 4642, 4643, 4646, 4645, 4495, 4644, 4376, 7353, 4195, 4386, 
         7314, 4210, 7239, 4400, 4225, 7243, 4415, 4240, 7250, 4430, 4254, 
         7257, 4445, 4268, 7266, 4458, 4281}], 
        Line3DBox[{4104, 4295, 7276, 4105, 4308, 7284, 4121, 4321, 7292, 4136,
          7219, 4335, 4151, 7226, 4349, 4166, 7231, 4362, 4179, 7354, 4496, 
         4647, 4649, 4650, 4654, 4653, 4497, 4651, 4377, 7355, 4196, 4387, 
         7315, 4211, 4401, 7323, 4226, 7244, 4416, 4241, 7251, 4431, 4255, 
         7258, 4446, 4269, 7267, 4459, 4282}], 
        Line3DBox[{4106, 4296, 7277, 4107, 4309, 7285, 4122, 4322, 7293, 4137,
          4336, 7300, 4152, 7227, 4350, 4167, 7232, 4363, 4180, 7356, 4498, 
         4648, 4499, 4713, 4537, 4714, 4500, 4652, 4501, 7357, 4197, 4388, 
         7316, 4212, 4402, 7324, 4227, 4417, 7331, 4242, 7252, 4432, 4256, 
         7259, 4447, 4270, 7268, 4460, 4283}], 
        Line3DBox[{4108, 4297, 7278, 4109, 4310, 7286, 4123, 4323, 7294, 4138,
          4337, 7301, 4153, 4351, 7306, 4168, 7233, 4364, 4181, 7358, 4502, 
         4655, 4503, 4715, 4538, 4716, 4504, 4656, 4505, 7359, 4198, 4389, 
         7317, 4213, 4403, 7325, 4228, 4418, 7332, 4243, 4433, 7337, 4257, 
         7260, 4448, 4271, 7269, 4461, 4284}], 
        Line3DBox[{4110, 4462, 4463, 7385, 4592, 4469, 7287, 4470, 4124, 4324,
          7295, 4139, 4338, 7302, 4154, 4352, 7307, 4169, 4365, 7310, 4182, 
         7360, 4506, 4657, 4718, 4717, 4721, 4719, 4720, 4658, 4507, 7361, 
         4199, 4390, 7318, 4214, 4404, 7326, 4229, 4419, 7333, 4244, 4434, 
         7338, 4258, 4521, 7341, 4522, 4523, 7343, 4464, 4465, 4525}], 
        Line3DBox[CompressedData["
1:eJwV0DkvhFEUBuBj6RSfpSQSnWY6UWlFIRpRKCyh04yERvwBv8AfIFomIkqx
jmXsyxhjb1RKiQSF5xZP3nvec/PNzXRMTg/mayJinEJjxERTRF9zxJ58543z
tohluyHnM3Z55V7/IhfteuUpOwzon+UTC3bdssQ2j1SZ03fKE67dX5EPVJiy
a5VF/bFcot6b6hixq+hbdGPmTzmsy+SoeZYZqu7062v18+YGNtObKduVZY/9
F0fOG3Tp7+QtOf0Hh87r3KR30p5+n6LzlfuFlFyS6Uvpe/oD8xoX6f/jO3NH
v2W/b17lj19++Ad9TkSp
         "]], 
        Line3DBox[CompressedData["
1:eJwVzr8ug2EYhvFHupa20rGJOIFOVX+igiAG6VBpVbB0NDAoVU3MjsBkIxg6
6CkYLQ5ADE0sTkC7EL9vuHLdz/287/e9s63T2slEROxhkI1o5SIOpiP6fMjv
hYgHfd3cND/zt25fvtVvmetyVfckN+Qb/bxckx95l7u6sTzCh7M/fI9j/au5
IN/hyDww5+WMe9fc4SxymMIk0ujZvTm7405K/sUVPnV/XEne59wmNjCn7+q3
5aLdOq9hFZf6C57Rr3AFX84vc8fuPHmD3RK/6Bd5AW27No8zEUN9OfkPSjiz
6yXfxj/mSi4+
         "]], 
        Line3DBox[{4274, 4451, 4698, 7405, 4261, 4438, 4695, 7404, 4247, 4423,
          4692, 7403, 4233, 4408, 7240, 4689, 4218, 7367, 4393, 4516, 4203, 
         7363, 4381, 4509, 4190, 7346, 4373, 4607, 4479, 4609, 4626, 4596, 
         4595, 4593, 4477, 7371, 4173, 4356, 4476, 7397, 4158, 4341, 4675, 
         7402, 4143, 4327, 7215, 4671, 4128, 7395, 4313, 4667, 4113, 7394, 
         4300, 4663, 4089, 7392, 4287, 4659, 4729}], 
        Line3DBox[{4279, 4456, 7264, 4266, 4443, 7255, 4252, 4428, 7248, 4238,
          4413, 7241, 4223, 4398, 7237, 4208, 4384, 7235, 4193, 4374, 7391, 
         4633, 4635, 4634, 4185, 4368, 4632, 4631, 7234, 4491, 4176, 4359, 
         7228, 4163, 4346, 7223, 4148, 4332, 7216, 4133, 4318, 7212, 4118, 
         4305, 7210, 4099, 4292, 7209, 4097}], 
        Line3DBox[{4879, 4778, 3324, 7413, 2995, 4949}], 
        Line3DBox[{4880, 4746, 6994, 3288, 3008, 4945}], 
        Line3DBox[{4882, 4754, 3291, 3130, 4939}], 
        Line3DBox[{4883, 4755, 3292, 3145, 4935}], 
        Line3DBox[{4906, 4795, 3933, 3653, 4963}], 
        Line3DBox[{4909, 4803, 3936, 3775, 4957}], 
        Line3DBox[{4911, 4804, 3937, 3790, 4953}], 
        Line3DBox[{4913, 4827, 3969, 7419, 3640, 4967}], 
        Line3DBox[{4924, 4844, 4578, 4298, 4981}], 
        Line3DBox[{4927, 4852, 4581, 4420, 4975}], 
        Line3DBox[{4929, 4853, 4582, 4435, 4971}], 
        Line3DBox[{4931, 4876, 4614, 7425, 4285, 4985}], 
        Line3DBox[{4933, 4757, 3301, 6996, 4756, 4934}], 
        Line3DBox[{4937, 4773, 7407, 3300, 4772, 4938}], 
        Line3DBox[{4941, 7411, 4771, 3299, 4770, 2940, 3115, 3290, 4753, 6975,
          3253, 4769, 4768, 2925, 3101, 7409, 4752, 3252, 4767, 4766, 2910, 
         3088, 7408, 4751, 3251, 4739, 2897, 7406, 3080, 4738, 2893, 3076, 
         3311, 4777, 4776, 7412, 2880, 3063, 4750, 3243, 4765, 6981, 4764, 
         2865, 3049, 4749, 3241, 4763, 6980, 4762, 2850, 3035, 4748, 3239, 
         7410, 4761, 3297, 4760, 2835, 3021, 3289, 4747, 6969, 4881}], 
        Line3DBox[{4943, 4759, 3296, 4758, 4944}], 
        Line3DBox[{4947, 4775, 3295, 4774, 4948}], 
        Line3DBox[{4951, 4806, 3946, 7182, 4805, 4952}], 
        Line3DBox[{4955, 4822, 7418, 3945, 4821, 4956}], 
        Line3DBox[{4959, 4820, 7417, 3944, 4819, 3585, 3760, 3935, 4802, 3898,
          4818, 4817, 3570, 3746, 7416, 4801, 3897, 4816, 4815, 3555, 3733, 
         7415, 4800, 3896, 4788, 3542, 3725, 7414, 4787, 3538, 3721, 3956, 
         4826, 7191, 4825, 3525, 3708, 4799, 3888, 4814, 7184, 4813, 3510, 
         3694, 4798, 3886, 4812, 7183, 4811, 3495, 3680, 4797, 3884, 4810, 
         3942, 4809, 3480, 3666, 3934, 7172, 4796, 4908}], 
        Line3DBox[{4961, 4808, 3941, 4807, 4962}], 
        Line3DBox[{4965, 4824, 3940, 4823, 4966}], 
        Line3DBox[{4969, 4855, 4591, 7379, 4854, 4970}], 
        Line3DBox[{4973, 4871, 7424, 4590, 4870, 4974}], 
        Line3DBox[{4977, 4869, 7423, 4589, 4868, 4230, 4405, 4580, 4851, 4543,
          4867, 4866, 4215, 4391, 7422, 4850, 4542, 4865, 4864, 4200, 4378, 
         7421, 4849, 4541, 4837, 4187, 4370, 7420, 4836, 4183, 4366, 4601, 
         4875, 7388, 4874, 4170, 4353, 4848, 4533, 4863, 7381, 4862, 4155, 
         4339, 4847, 4531, 4861, 7380, 4860, 4140, 4325, 4846, 4529, 4859, 
         4587, 4858, 4125, 4311, 4579, 7369, 4845, 4926}], 
        Line3DBox[{4979, 4857, 4586, 4856, 4980}], 
        Line3DBox[{4983, 4873, 4585, 4872, 
         4984}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1: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
s75HhsHq6T4jcUTktG3MjSwj6vxqxQVd1vdosQjvVN57cSQtL3r47ZYW+sOH
zwC/k19TuGuFSGEKydL26C6RqaD1oS/Xhz3uJ+quV6MfjLwje6f8cER9/X3k
9Bz8jrrx2M8I1Nf3H1gef1z3nq7M2nPJPZB132kpDVv38x15t/nqmuDz8XRW
8crfq1NZf9dhdnPn6nfELmGvlGtqBPX4eXdocdEAMVF58alpSSo5s/bnEOrE
fP04A/RzXjS/M0adeL90f9uyRyG0+4vsz9L8AZI40T48q/U90V8nqbLX148K
fdqaqlkyQAQN3llKd78jrjpKdx/0u1PvWxsd7KtZnyfllmZ1ZQr5GL18wUEX
R7rL+eOnNax1kRESO67okEwkS5U9m4ZtqYXH02HhtgHitant12GhJDJcknYy
husGZVsQf2OsYYCs3s/m8HjbW2LrTNLOCAZQtrezqPhTVv0e9V7+pUg2kf7O
Ub95jy19zutSf71sgMYNJC9zy3tHuB7FLdnCiv8T/1nHipPPgt7yiC9TCv6K
/fAsTkxj7YfY75hmiP38f83t/PZa6SPLW0HD2yzGy5/1U2ci7lc7+I70vl4T
Ovf3R2pg72637VA/zQ8J5Y5sSCcSZ7X2ZEUqktVTd6SasOodEZHAl/LaiUTv
rMC74GYt4vFB9oxr/wCVH7Gfciwhhvhxbrkle6ya9n3btXBfUx8NdmLzF9qY
SS5k7dT3XVRHnXZwrPKX7aOcmyQ+sq3KJi2/XSKfuLTQlcZF5JVdD1X93Sw1
vSafhNT6705z/0IXtoXMuLzzK91Q9MOxNKOMvOVvHc1m5Wn5bGpsXbwNNL/y
UgTytBo24SzkOc5hN2OQP4dFnWlHnvO5RlUG+ZvgzLQdrPyNbomr9UP+ZtTX
L9ef2Et36o1G5btUEGG1W88ExGqIvM5SHWw/pvWeDfneqsdqGdjegPNnYrVV
M+Vwj3toWtJNw2az6b/KryXB4vUv3TnaaZOt/j9fsU567M661zlFTeTV3vdm
iM/ZL67mJ9ZJ8psa5BC/3Tj/u3VKM9Xd3rvobkQ32XUmQPUVRx2Jl+mqxnsW
tv9IZd6zcHJAKAzvWTj0+MlFvP/I7YPpgSeu3fS5/8AbvP8oZPzWWcSv+lod
xnuRplWlhyI+Rq5y7XWtoF9FMub4Xuwjs2ueD3GNVJDuhXJSsedy6O+nIXc1
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
+4ijFSpX4vw8mi5+CfG6y7HHETeaSOZBXGj/uqfj3r10anXPK0/nJioRIBDc
tTeW7NHYr1b/pI9GTo3oic+updMd2ebsrIslfk3KGYbL+qmI34IpfNuryeyX
QTPylseRwdlDJw4s76OX+Tfp8u9oIIfnRC694BVLnj/6d7N3Wi+NMky4uv5F
C1HZ/sDZ6Mv/uacz2lfig/2Yv/mpyNoPbb5Rdgf7sc4pM8HflZKcxsP6u1S3
5+dK/N14Y0nmc3ayW+FzUvLEkx2fszrf5ryY0gBtNuJa+dXpJckKeSy3S7aI
1AStO4X/d1aS8GvW/0v8N6gvwP/rP556A8envNJbyMu5iXworXDH8XGz1bgh
bNFDVapWN9ge+UTKB6yf/LgdQ7Lp4Wzcd55fm7KXdd+huw8PyuK+8029+zTy
1YxAvSnIb38eOp2NfHVjOP+K9xs/UZo49kn9bBddyqssQj/Vk+ix4vvYPkmw
L3yYtf2C6I2zpFjbf1Lf5yol0kNvRol93HMyjxa4Uq3731uJR4XrW8vL1fQo
+4FVo8K99LDwus5b/tXkWuOnVfkprVQucPqjx0tZ9fJKZy/h+wVEYL5fCvJ5
aZd4SVY+T9ZdtVBAPn/WZmR31pkmeqatObB+ZS8ZemtVpKaVR85UrlSoax2g
i3M5g7aLvKR31f5+qVwfT0znNgngefeAQmzYfq5eeo5TeBOedw/6eK3Ge9lu
8VqfwPtka7rd5VFvtu4WFUdcb7alFuLzX4epIz7S5Ddup91B7S3en7pxqpPO
Vp193MqMlf8sfVlS/aed6vM8kXgU1UWDv82zm/AsIZ+Sd4ji+MQUbtFG/r9D
3uEqjue+NybZ71jHs0b6hMKhs11EOSDYO511PEuv/avAcauo8VLezjpu209b
RuO4zd7/7SmO29Vg7vWs40Z2c3WU4rh5KRsxzwWMR/1PKrysIS+reJjnAiq5
QXqIj+z4GI74AqfCkoT/4f2wHItfJ+E8Ga9448Q6T2gQZxTFefL7Use1tJAO
6q9rr1k09RMV2Lphp65GG7kyr0VWsLqLFs6bZie+9B2RFWmJt+/4TPKTjiXh
vavrP58IxHtXXxzdNmWEVUdcerw4YC7qi/tW84JZ9UXi+sqvv1lxLek25nNu
CNANw3ON8ahppficg/eUFzmxsdbJVPPnm401VCze8oCvZzXxiZqqijor8bua
LqvOokd13kWizjqxgNf58d0+KhCWY/NMM4uGeHraxufUkO0iO0Sxn/DaaivW
fojSlYRT2M/nw9OP7XvfR39klrSFWyeTxoy6y8+7aoit/Xp/88Y+ejVx6kYz
WRdySGR76SBbLXlyrOkR1iWJM+jdbta6LJV7bol12XP+Uk/Z9Q9Uc2/S1mHh
fnpmVUF7mW052cVpnIJ4V0TQblacrKPCuYjbDh2rFHHJpMFyTeZ4z2ne3frG
4rJ80vo+sxrxEqdgxMmB0BWtiG94ov6juDOJGuvzn9Nn5R3TQg5GNGawrrfL
dl54ppFCJRas+3jAmXWdMKtUct2YRYouBvzE9puv/9NjbU/EZUSisP3DorDK
6tR2un/5B+2Cy5eJRNXAT47BbrJyrtJh7Ke0dGUlaz9k64zSHdiPjJNfSvCR
aOrQ6l1yqXyA6jYn75P5m0Q2i/7ZhucjaT1Nt/B8ZHNexLejoilEk+ukP7b/
tnoI2xN7j0MbsD2ftmmgMWt7N3mFU3g/6Xcr/XunWdtf03i6Gvvhn3bYBfHh
hbUV2I94yvfgr3bPafnl/iD7bwO0QcKSR/NrNPE/FsAmyarjMp8loo6j4g1D
11DHafWOrD6k/4ruUO6wuvRlgAazrXzKExdDpN7IPsB+okunPGbth7iGSM/E
fm7Gr3nSr/OZmkfXHXyf4UQm/lmc2WjbTbxXPbSc9eUz5Z2z/mWmgA2x4nj1
fYK7m4hGFq5GPShbw8bUiTqt+1pRD2Zr7zSW9PClbxs+Gtuz6r4VpeeNdnE9
IqeE/Zn68fA9pn6kF1XrmPrx67kODdfUULpcpVW8+OcAVeZaVbsi9TlpKBll
9s+fxOyffMs5z+y//G0xs/89Jyqxf1LlEXge+0/5ZRTpxdpP+bQDwtjPnxbV
0bWs/TTOLuLzZsX5N3Aycb/h4l+IP1/1UPhmhCdNXl04rZ5VPy7POsJ/IdeH
BA1GbEG8QC0fcWJl1iCEuM9BjVd739ym/AFZBb2sOvSZfJT9H8nb5KYweyLi
3m6ZiJPXXoJuiIfxDz5E/82mN5uZbzn2/HoN+m+LlaRX6p6voFdzTWMu+vfT
P67D/k7kPXH6MVKPusagtno3q66hryqH7qGuWSHv+IF3rIJ+uJYX9tO+n3J9
PjQQqZlGurLUmb5odGc3MwdyeG3ZSvRF8+o+d48fr6QH7sq+tJDup5I8rz8V
b6XkpfCXvajL1r4ue82qy2jtM50jqMvmh7noDPFW0dCQnVP+su63C9bbaO+S
yyCCh8vS0N/+ynEB/W3quEKtDP1tL8uYMf/SanrZiHT8zOmjt651NiXoZZKr
4TujUA9ePWkUzKoH6SHpz76oB9eNUcWlWTW0SFymx9Crj2qlddWs2pZFFGvk
f3OLFVE78wUlmB8Y3jt2C88pgtbU54jq1lGtg3Ia9Vv6qHtp49Oe1dkkrmmt
LupQh6+NBaw6lDas8I1HHXqoXtGk41UD9eLjnJB+3Eun6SWw3RjNIWxuiVV4
3nQoy7QSz9O5Y9JMUee+ub1QEvdT04Mf7rHup1S6KvoZ7qdLI3b4/dL8RP9I
Zo09yP5GD/+LL9joVUjS1D6OeT1voxVyR/bmlXRT4aOV/w6e+0A6LihPxX0w
1IXnHPqxbbc1RHEf1NWO3477L1eTQxDr/ksbh9VzcP8V0xbvRb2vejZrK6ve
p9qSbadTWPX+sePsHegPsN18cG9ldB/l0+T4gf5A5VvV1Y2s+us1/xNJVv1F
7fiKM1F/TSQqdmUW1tEeFbbOVVk9VLbcouQSq35SHK3ejP7Ak256Sk9+gLar
hGWhPyC9bbYo+gmzNMKFv77sp13nxl3QT5BN1fuIOs5c59pXVh1Hh7m2m6GO
y+vn3oP+2I/P993RH2t0KuNAf2z+ZX4VPFc6Wz6Sh+dKxx+8fov1Wnf3XhbW
i9plY71Ift5uZr2uvr0jh3WRm/t4lszjXrLv9oavTqx1IQqNmTiv/ihuZ56b
PDr4ljmvCs5Z9uC8utXg08U6r4jbXe1SnFfcdQXbcP4IzLwywDp/CE/32gKc
P/ZC95g5qLgrWsxzgSmtS8Rw/kf6y9fh/M+c/uw16/wnRTeH03D+P1szqIvz
vKg2ZWJ8WT9ZOI1bF+e5TIXJbXxPfxuOzUaffBf/1AR8T9fdzF2O72lt6bZY
1veU1J6R8MT39KiSQg6+j36eC1+wvo9kim9IK76PK60+LrHv7qd3Dgx4zQ3I
oWoOi/JvdxYSTtskJu73ROUOK06018wrRjzK4WZ6R20VbZ4zPBob0UOn3dgl
fd6+jogGcTlu6ymladk/uA+E9VED0Vsfll77SI6UhvaKPfpCfb2E5j5ZkEYG
/7zv5NzRRf4OtMtg+7eFBUtZ25PqmXrh2N73kI7Ukswv9MaBiPsTvc+IdNz2
tp0aXSSuOiRaUrmYXphYUmD+sY/WWQXuPH/+IzladV8R7w0vtx3Rx/13WvkO
Y7w3XHW4W0eWtb2ZTUHSRdb2eyUsfIxZ23f7jytje73kFGxPBFrtTLH94MeV
3dg+sfTfU2w/0sb7GdsnR53a7dEUQNnj2G/mjQ3QdcdD3BLrA0isp+LKxqed
lN1aWXPue3V6xkpunm5IJxkJW/5Z6to9ejyjiXlvJrV5IIQ+noWn0xkFVrx/
3bPz6O9FNXGUdrPiq4XLOndd96bFymPdt1jX57l7NR1WPXQm0hYlgYtS3anz
luHtFay4G1ub/StlF3L692nhVqEeOuZdOad08AzRcF4Se37wE/FNlXuJ7cPZ
h7A92fE91RXbn5madKNuVi/lHOvZ7i55iLhzrxtaW9dCcg9qfH5ws59+Nvix
o3eomBbOdVF4YVlI+A/u70N8TLbuVg8rfrLmszriif/KWm8bfKQk5vP3OuN+
WhweE/lvdjoxWDb95uknVVSgXin775R+Gvgx3p0zJoNYrczYn3+xli6am2yz
27CP/sl9fHv92yyi/EVVdM2mPsreVl6XOVREdt+cu8HBqYZwzz6ionm/nJ7L
MqhSS+mnMdLRx14NpRLvM8H3xKVyaO6FLZfx3sxnBrwv8N7MxCYnY+SZwod2
OiHPnFf0twp55hezdpvRp+V0aeUm1x1J/VRg91mhbwrviI8PJ8FccRUPZwjc
8RDN3YO54mo/72eYK/7oK+UMdzzdu//nxpdpJCojRBdzxRZnVWfDHYfU9h/E
XPFv88sSmI8t+reNccehvxYz87Ga3FFNmDee7RqJeWN6qvIgF+aNm82NeDA3
a2CzDnOzVCFzhRPmZq+ciGKDO27jymXcsVGEdBjmkGv9uARrH0VSg2zrILhj
q/2KvpinNTuzzhXzydLh8xl3vLqjOxbzybs3FP3FvOgCdwHGHTtseWeAedGA
doNSzNkeWz4uBnf8ifvTzMMn08jm0K8zWx6F0q+Wt/H8iw5EfL+E519PXtmu
xTzz7cFcBbjjOW/3uWCe+dgmnXXuXx7Qds2DvHDHC0cfb6nek0ZOlGe0Y865
anWfKdzxwzsnRjHnXLjQblsr3PF07zK44z3jPHaY13W+m1OO+edcR1tduGO5
oJgtmH/ujPu0Pe6oIxUSW3MR7nj02/IqzPGqPfUVwVx0VOl9zEXTbauSgzEX
zZWgUob53tggH16446zBt2GY7202m/kS89JplY6MO371RK4E89I13udfLBe9
RUdFLmyFO5bZUibJt/wd4Tlqk/zmlD4tXK3FuOPl+/8VY4465evijztUo2nA
OWoDd1xVezFzwLKEcE9ZW4w5/+cF9ZJwx0nDQQ2Y8x9Qs96GOX+7E8sr4Y6f
N93eizl/CdeHPZjzD1Otw5w/tZwSYYM5/y9f3zHu2KaKj3HHd67dGMCcf6h6
6E/M+av7uzHuWN/w6U3M+dvIP8nEnP+xcVHGHc9bMT6KOX+rB9uYuc3xiC3M
3GZj2hs2PP/9cXynKub8l+eoMu7430ydUMz5+z6X2IA5f96F3h5wxwO3v/Vj
zn/2v58z159yo1ULW2Lhjl8b/wzCnP87I9lizPnvnjWoC3fssvibMub8w/8I
38Scf4PUhC3csZ55jjTm/KuSrlpjzl+1gIdxx/6/0jQw5695vrv+5kV10qD0
9h7csV1pUyXm/B/arLoFn9LycNsyuONmj2TGp8w2CpGCT1kmN+gAd+yxWyEb
PuWFQA8ffEqw9+/pcMfzjrlug0/5LLX8NnyK0d1bbYw7fh5vD58SoH1aED6F
+97jl3DHz2dad8KnOF/JPAefIjvNnnHHWkem1cCn0IDbBvAp9w5Qxh0/UDBx
hE9xPC2ghHmGh/I+jDu+tePLW8wz7FZZtAo+Jf/NM8Yd61s+amN8SlBDLHzK
4ZFAxh3bK3v1wqcoXVDWgE85N96fC3f81KkuCD7lrOeN4/Apv00mROCOj7jt
UYVPWVB/Ja7Y0o7WJt5g3HHUmm9v4FO4BFb2TS+4Si+nFjLueGL+8iL4lFYT
nS+Vf69RZ/lq+BTam+cq2v/2Bcni6GK8VcSWpbVwxy1R0oy3imkfk4e3Cq1k
X5sq1UEjDLVPwlsNFkx7DG+1IcA5F+7Y07u99aZPLinrEd8Fb8Vdb7oc7vir
mb8+vNUB6cM//l3JorPkZ/HDHSt4njSFtyreKvsA3ursvENv4I7TjV5XC51N
IemZ6Zvgrdb4vWHc8adKnifwVsvk+Y9gPscgMolxx+vmJtXCW23ld/SGt1qa
Txh33O3mR+CtxMPi+3n2etKd1maMO5614lcDvNUbtuhj8FYVT34w7vjQo5td
8Fb3ry3hgbdKdHrGuON8i8pr8Fbd93s+wVsl7nnNuOMaMfHZR4SfkfYn/X6y
BTuI0bFLjDsuLN2dCG9F/WtvvZWzJ1Uz2T/BHUedfW0y40UKOTCNNMAPNuVa
O8Ad1yT7hMEPzl3SXQc/2JUvJeJw5RMNfZaoBz/o++UH4473r1C4A3d8Pt/0
p75qMZkY142HH7Qp6lKEO45ZF3oFftBr1+xN8IMX5De0wx0fM/keBj+43kjG
AH7QTiOGcceaIVNmwx3/Ken/CD94zGGccce9s3dR+MG5fB3BmDfTUG9i3PGB
p3+0MG/mpKqWCD94IiKEccfn6tZshB/U/RFyC37QxteQcce7NxmvgB/Umskl
Aj/41fQW446l5w9bwA/ONJFMhB88qP2fO9b1PaEMP9ilyHMAfvCwQzfjjm83
rvKCH9w8vWJJ1e451FKyg3HHkn/NBeAHFb/f9V26xYr8Wn+Mccc5n71a4QcV
NKfUwrf2btadB3d89/VxS/jWly6iLfCtG52WecIdB1d/NoJv7XF/UQLfauar
7wV3PE/oNTd8a4ShVCF8q+KZneVwx8kfy6ThW4/oldXBt3pcEYuBO45usnCF
b51+Xu8R5h73cPHCt1Kvru8yeH6tKjST8a0reyTgW1n5m68afGuAfagHfOum
a5zwrbRpR60cfOvTXmN7+NaHK1oZd/wup1AOvrWgbmMnfGuLniDjjmccC2J8
a/fv2gPwrToljxl3vNVrTjZ8q9rXMQn4VqObpxh33PU0hAu+dfHiqQ7wrd8y
ZzDu2G22jjV867X0VYw7/i70dfqGjM1Ux0jUFe5YXCaCccfWxn3NWkE+VNB2
xyu44wct94/CHc9oHnoqzLqexe61PQ53vEOD/Ux8cgLVOOb5Bu7YPrjkSdnv
d8RQOolxxwKV99fDHVtlWV7Auqy9716Ddane8D0L7jjYI4Dx4BmD0e+xLjbC
G1/DHbdlJU3BupgIGYViXcwWrh6CO+aXT1mAdVn62K8L65Il+jUa7phu4PbH
uggJ29tjXdY6cDLzqIF/7TZhXSKj3PSxLl3nKeOO/+3I34x1EZ565wrWZchJ
jnHHiW94t2JdNjwIMca6cMz7zrjjB/1/t2NdHA7rt2FdHpxdxbjj2fn0Hzy4
m5i/OtZFdDHjwUn+EpNCrAuP5CMprIvLTsaDE5dlvxl3/D41zwvromXLeHCy
m8vYHetyo34j445Pe/09Cncc+twjENeNNb1vKnHdiDfn3sK6bhCfER5dXDdm
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
Xlfo1g9HzHdrJeOO1fmzGXdclRvkDC9c23eoAu6Yq9xFC16Yx5mvEtuLiszQ
hzsWdNgUgO3NLlXkwR3r3jLIaL56mQitOd0Ld7yd/4sR9nO6XRl+mUz7NyqP
/SyjQnfgiBPc/zHuOPlhNuOIXx+Yuh/PRzwvuTLu2DTi6TC8cEKXvD2215Tf
UAp3PHbLcRW2/zRl02JD1vZmKysvwBdLOBUsPcXafl6C2g7sR/wEJ+OO24ut
GrAf4+uzXOGFOTI44YVpWLz6dHjhIinNUNRxI/NFUMfReXcv7Ucd13Ngrgnc
sfxuF8YdT428Hg93bFXV5Yj9mHsuYdxx14m2v0dY+yk081k2oPOZjkikuwVG
OZGr1g51cMe6Fzuj4Y4fhu4zaPptTZoPOilNmd9NTq5oHUWdWFCwiKkTD/tE
VaIeZO8YV4ILLntVy7jj6blfTOCC7yiUSqB+LD01k9l+wRm3cmx/bIT9Jtyx
1sdCxh1/tX1VAnecPa9kGPtX2cLL1JscWps+YvspVpWq2H/SymrGHXMsNbPC
/i3Fm4bcWftx1H+4HvtRPHr25irWflocDy31YMXHCm4y8a8zd95A/PrwvMYb
EZ60a30J4443VVkJwhcPb8zrRPy56wfGHcf83bQW8WCZtEPwxafb8hh3LGH2
yBa++JvVB23EWwpzGXes2nbaGXHXfEvmd//2vEnA7/5RhzPUF/03vz/qQ6fP
V1D2tuZkuOP7xhby8Iz6POwJqGtqi+fKwB27nQk8hbrmik2OB5zjQsFHMXDH
nUmpXnCOf3eP5qEvyjnEjr4oq+wcmoY5EGkxnhi4y4ucmvFwx/zhshfhLi9X
vhVFXcY7S+sN3PF4+7gs6jKLlyaS8JjrlkfOgDuu7ko6AI854FFVhf529q/Z
zO+0m6fE1qC//d6g/xN8qMYv/h6446FLWmnwoXOn1T9HPXg37m8I3PHKZYP3
UQ+uUT46DW5UJ+jqGNyx3okr4XCjZ2oU1TE/4LGJrwPzA2xZopaYH+Dqm+mw
treO3l03ts+bu49Gvri/wsI3m1wV01x4e0M93as5P1fvXy81zzVIWPwrm8y7
dKPoy6sGattWKiLzmHU94+zygm/lXHz9LZ43vb92tAHP0+fI929BndvMbbgV
91O/KuMHcMduG0944H6qZmsSBXf83dK0G+7YWNPtJ9yxZbJbNNxxsVnUFbhj
vXvm9+CO65LlB3AfXH5b1gj92Cm3yhbiPqjTuGk/7r/L47QfwB1vt8upxf1X
/NK/JNT7B6aPS8Adl3s6icEdn807eh79ge1Sq+Phjk1q76+DO353So0b7rjO
+qgs3PHRMvM3qL8k4k6vgTt29PHYsDqrh3baum+CO87JaN+G/sDG1DjGHRt8
WZKJ/oBY3fZG9BMeCHGJwx0fyHm1A+5YNLUxHnXcPy2rHrjjbxnsB+COBdV6
ROCOr15564X+WBDfzJHUwAoS6rRNDc+Vps/akY/nSk9ncEXjuZJ7S8wDuOME
ywIduGPNWaVWcMcW8/gLsC5ddfdE4Y79jM94YF3OLp5djPNqQHsR4457lWbl
4LxqW6jfhPNKe4CjF+64Y5DrHc4raVmtPj7W+eNbKDwBd3xhfP0DnD9Jx9s+
4/xPv2PEuOPoXycW4/wv2shfjvPfNcomCu5YKODQY5z/xeEqm3Cec1fWzGSd
52T93cuyOM95Rxfa4Hs6VYBvLvrkrz1Dme/pxPcpi+COi5ub4uCOfa0qLfA9
PXxb0B3fR89fHfg+kndbde7g+1gxlrsUvlhp5Koc3PHq/OAW+OKG/J1MnHf3
aRW4YwOdU22IZ081MoU7XukXsjwuoodumLvki759HdHgEbwER/zR58MCuGO2
sdAcOOKI25ov4I4/sqdbvF+QRm5M1QiAO7Z6z3sR2xtWuy2EO3Yz+Z2J7WUs
Q9fBHR845HxjU98z4vClvAjumK/mP3ds9r/d8fP/7Y4tG5z3wRFntsifx/13
/td55+GI53f9545zr/znjl03/ueOv1zwksL2jVKj2J7IHgw8he135/7njn+V
/+eO39T9544VRA4ZuTcFsPIDUcYdnxjjC4c7zrbi6G142kmdmzOnybUfpGF7
n7+EO45cxT0T7riweoTp7+lJuCmij3f83wW5vaz4HYkwpr8X7sB27jMrzvPs
8EmJ696UjvUz7njHu02r4Y7DT4d8WJDqTsforB1wxwvo9i444oMXRko+CfXQ
rncbA582apPe2dXDcMfWszbUYXvxZzOxPbnimDiI7U9YbxiFO845nW8Rz61I
zDwtB9fVtZChvvpi+OKwd9sT+oaKaZlvsRx8seq3wAX+rPije7eaulhxulD7
DuKFWqEVcMeXFbb/hDsmUsZP4Y7XHeawgDv2ONyeB3csPMxjB3f8+YTkXrhj
+WcmV+GO87tUb8Adl0u47oI7lnoTHZYxVEQ+aEkRuOPi4RvCcMfCjR0NcMdi
eytnwB2b/fDPgDtun5ZjCXf869BQBdxxkpe0NPJMebESXUVWnlm5+1AW8szx
db5acMf3XDbdhTveEnNypHvSHU+640l3POmOJ93xpDuedMeT7njSHU+640l3
POmOJ93xpDuedMeT7njSHU+640l3POmOJ93xpDuedMeT7njSHU+640l3POmO
J93xpDuedMeT7njSHU+640l3POmOJ93xpDuedMeT7njSHU+640l3POmOJ93x
pDuedMeT7njSHU+640l3POmOJ93xpDuedMeT7njSHU+640l3POmOFd79H9d9
/7fjOrUuZy50DVB9pQOvbmy4TVTsKsuaNsWTJTH7fcrfDVCa5PzboDWVrD9S
FjufN/7/uc9/scVw6inTXirE+yTaekEz5dEIj3BfG0viCow7YhxY9eyj8bKL
BnV0U3JVg2BOLPksaLbWwbCf1i7Nbd5vUEkfh80WV1GII1nKu2f8YH1v9URV
XKSmF9OKZl3vntg4EjNgYSX5fICGOi0503Y/g1rnjrTc/RdHAjQMdj69M0B5
JYQ0xbZkkxl/+MnZwTjie0ztT8V4P3V5RTplPUtJyrGEUvvgOBK4K6ixemc/
3S18c813ryqyJfHeKyHxOHLoqMKqlaSPPjSslFd8WE989/jf4XoeS3wvVT9Q
XdtLaw6GtjWuaCGjxsurZo/HkPaMwemYE74UrXXwAs8nsv74iy7MCQeFrXy/
62AP3f3014D8vU+kJV1nxnXzGCJsHlaA5/UKFnOFplU00B/fPe7gef1t+5PC
+Lu/OSJ2sv4u9dou64m/G8eznS9wvO9/sXeeQVU027tXQQURUREJIgqIRMGA
koQGxIBilqBIVJQcJIOgCCKSREUkqEjOOccm54wEJefMVgEBAb2z9jlfteo9
91bd/711vnZNzZ7pXv2stWae32z8fOsY7/xAGw6QSHoDPoobu6/1wvUf9b2x
m7h+PJeyKxGu/yX3TDL4WOqX3bs1ipqwPyvFHPhY2kw552AexJe8DU55N2Af
+l/VMA99z23ywS+0oeBudYtaBWaSOuoAfiFbqQpRmE855yUhYj7x92Pxp2A+
cfwhZfABetV5WW6bq0IsNLKt4ANkc89ZD+uFG4vaifVC6dO7vWG91CK558GH
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
SybqxqRlq7zPqpmodVen5AUWc/yhVFOoxZ64zjZZidDhCrTx2rnV8mNlWMRh
N7+MFgmv7NtgIZlZgAy00OMdl7NxP9szoXsJJGz3zOi1znguKjkaozxjkIgj
mqLFbWpJOM+B9g3fx2ykUPnxhWxjGL5w78g+gc8k/JhSUYW6IxPhp8Wn/H+7
4Qqt0Vt2RP/l3zZQ0v89DfVZJn+eyn2Mme075z2IvvV36dEvblJpiLJ/JCiW
9AAf6y40XZkk4UOD59sK5In9NfC1WortFP6tp6C/RPSn87ve77BbTkZWLcG1
F5iskPXCC11Ooh6+fDHlco1qMvKJcuVguV6Jn8o8u/LwBAnXrubPmBdjRHFP
N2zj/jysyZNZOBRKwu9rL62fvpiHHh8NMnhwIxl7bd8YHE/c1zP+aobHn7JQ
x6EMpYwX4fhKhYTmNWJdCmrZKHT5MlCz+uLjMHMnbKBfyHiTuJ5uN5KU0/4U
pH3gvLjlE3vMyprbtJm4HknTO4dptIjrVFJiSCqwxp1rz56xEvVkVFvhqpB3
PDKoHhhjmjPBb3Y1d90n+iBpTo9TV+ci0KdlgZlPlhhvWFKKf0f0ZWqUqcw/
y/JR55cOf1vBVPxzq0uaFRFvV++V5v7wzkJT4l0/+Wkj8dQXPxtrYt11im69
NfNIQ9RTjbvLeU1xsc/yBnmi/+pmVJoJYY5FaZ1V4xmpN/F5k0vzGt9I2I/E
S/X9ZSLK6uKvuUsRjGSqJXZG0Y/ju6Fsu422jaCiAcXdzVlZmHc2+frZeBK2
2iMQqFeUh5Ie5y6w348n+l+mkzVtJPy03PHxnZwM1CD9+Jq0+jVk52jq+Yzo
11Zp9/PvG/uI9j2TrI3xsEJnBm93x0G/9vL96bTxSGTtHiZ1vDsT6wVRFOaH
kXB4wvuFycJClJU7SVc1roVmr26Uu0/Uzy113jwujL7IZltINHw/Ld3/yQmm
AxnI4LrMNHw/zfLNurkviTM4jurI+hc+rUjKZYK372EtunV0te11zRgOfO4e
L5s6iFJYXAaEWz8hDrchugf7+/EIz5aWzwYTiCr6pqtyahsyb9nF+OJXK/4x
+VJm90+ilN+gR/LTaEHfIq9K3xWvwrGFP1J/fpxFPLTV1Om0dSjlw0/WhdgC
jE9sKqbVJKGHgrKykYplSHE+58XP51F4nStVu2AfUVcHFx5QCU1DafZPEMeV
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
e/cWfOSns4YFRyaiP6jZBu+DkllTnYHvqPzlzgnvg07Vd7VCvf2j/Zs+8B3j
xenfod7+oHPvhOouok7LUrkDfIdC1oow8B3dMb8SwLf8vnlPPPAd9E3sdeBb
ZrOfuQ++ZaqdXGS+49Pg0Aj4lhl0vvqDb7m1RZ3MdzwWDjwJvuX0iSGyb3lr
5r/4jm2bZ26Bbzlpm/rM0woffGaPMJnvaF843AG+5S8iJtrgW7b37CbzHWIx
0gngWza6HGgKvmWmpvNkvuM+bb0A+JajrlQORl6/hJ+kp5H5jqMDsz/Bt7xj
M9/KgrgRulvBD75lnHiThsXCOwo5C7TzC5knompbeUbH29NoC0X+DUadHmR8
Y8cMPP9naDEdv3e9Gjt0PZ5bCyd0bDZJC97rud6ezxatHcBvFs7GpZnUoHdn
tcuB75Cm6hMDvmNznOou4Dt6HM/Fgk9+jv24M/AdRwZOCwPfkcmaf76BpQJr
1RZGAd+xxu+3OWVfBZrlzSwCnzwJKd4FvuNYV+52oZUiVOwSKwk++aPR98h8
R77jjePgk79izvgJfPLDXLRkvqOBe5Mc+OTRneeO4JOX33OUzHe0tnPyg0+e
+WRBFPjkNa3ekvmOD1QXA8Enr/Nrf9tHEWe8Fj5D5jtETro/B5/88hbJlgOx
Rvis8Scy35Ef8cgQfPIHHEUegk9+65gQme+ovSgoBD758LUeF/DJ683Ek/kO
TkNjM/DJb3Jb+Qp8hz//IYE3TTnYcecVujeLmajW6IEL1DmWkl9nJ3s/YYWx
75xQ5yiMq09AHyRjz/zJ2HcI3xBlrYU+yGCD5zL0X2f6xEKA7xiJWLCC/usB
26q4GdF/BTV+egt8hyeDAYb+K+jLLVfom6K63V8C38HaveUb9E0+96x9oW9q
9tlG5jtsSRbc0DfR0VIvQt/0faMBme8I17ZeD3xHt+/rV9A33bvkTuY7Op59
3Qd9k9/vgJ3QNzV7MCUC32Ebxa4LfRNDukZVMdE3PZaSI/Mdfh2Nv6yJvkm5
vniNjeib2KeKyXxH7ileR+ibRHyZtXiJvmlnGj+Z7yhqfPfEnOib5JRz+OH9
8lmfDjLfIXO//JUf9xNkO/6VH/iOnJNxh7VwDjLM6E/79Be+ozxFLQw4Dp0b
tz4AxzGXUOANHIewKKsrOT59BzyA43i2QZcC4lO06h4bxOf4ha9xwHFQH6hs
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
7tdu++Wa0Yh6PDg1zQE5VSUbZgQ51Q81ij6QU+0KpLsJOdWhgN2JkFN1y5II
g5yqlUKbDeRUT/+4Ywo51TTdbY8gp+rJJ1YvJdCLOmk+nF7Nqa7mVFdzqqs5
1dWc6mpOdTWnuppTXc2pruZUV3OqqznV1Zzqak51Nae6mlNdzamu5lRXc6qr
OdXVnOpqTnU1p/rf//1qTnU1p7qaU13Nqf7P1nM1p7qaU13Nqa7mVFdzqqs5
1f+R8tWc6mpOdTWnuppTXc2pruZUV3OqqznV1ZzqP/Nh/6u9jG3LU9iwiFJ5
7AnB65YOvx2ic9Dh+bGXTCHjOEL2ltwN1gGkLnYvyScmC13CNOvh91QcSFnh
yXv8YM+7efi9pga/QrbTJOYWGOK5ZdqFl5d2XNlZlY1MN3oIw+91XveKHCWu
36WbuAV+z1vOnQXXfyw8JgLXr34ukgLXL5U1FCJ/b/dBlfg9Lvu8kRl+b/Dq
+HG4/p0ADy7i+uiZSo0+XL/D+2WGbyMFp9fNnbqvm48vvc8WxGy5/+Xqw7wl
+bNu3iTmYTsgK2/eiZutynhPcGcjh8SNNKVEP9YsLthq6tKIHh6N87hwJxvl
+ia6R2lPYdQc/WnsXTvyvvxDhIch598+xwM/ZSNFQiiYv/eI4vq4Crz9DZPZ
Xd5/r7v+3yr3/GKlsLlmAsu/d73vn9aDXXHF8f0VWf/l6nn/2vw4PK999zas
yBHPKz3wbpYi8by6ZCm08LxGznz9cY14XqfQA0d4XoLX7odD+7+kiJpC+x+d
O/Xiv2L7/7vy/1v3W8Sy/oTeq3GcGV/6Vmz6M9IUEk976pKF5L1D+KCf5Mv5
/CT6CZJ6Wr/3f6WfqDcKRkA9B9wqDYl6orXxTNegnnYiZbXZLRQ8NPJL/Ily
HtpyoVCD2TMH1cc/EVftoGCmicRsDsVcnEDvxmsT+e/vS3X+OzW0T8K3LlZi
/GIc0UaOX6vHisGv9Kfwg3U2fbmv2rE6rc79nUz/fvxeu2uoAu0Q83Y0Fdrh
LKNWPrSDitVXTmgHw+ovnAFEO0TZ55z8T+2gYORJPpf1t2ivwf26cI5Hwf0K
TS/Wwf26bx1t8iPuV6q35CDcr/DghATcb1XdXT3yfkMvD9z/D/fb93FxPdyv
dXHGINEfsAll60O43//X62//ufo9zP8iYQsL5qwD2O2vRRnM/zWbVUTbiyPw
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
      "]], {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic, Automatic}, 
     FaceGrids -> None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        GraphicsBox[{
          Thickness[0.13175230566534915`], 
          StyleBox[{
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJnIGYC4r6Ibn/GAAmHCE6xduP1yg4wfuAt6ZrEIhWH
NgV21TNXxBymtLdGXZZRdTAxBoJiETi/8v6PW8bdQnD+TBCIFHB4krjwmsl6
FYj6zTwQddbKDi3itayZbDwOpw47rc2sU3G4zntbLNWMA64/DQxY4PyXtY+z
z69hgPNZ9H9xXer5aw9Rp+JgkaRrx+rw254BBB4oO/wHg+/2tzVl1/xnVnaY
d2Lykmy1r/Z782vezpyqCOfzxwbcNypH8MNB/o9XdNggvU331Juv9iu/vaw4
46AINf87nN8Mcv+xH3D+Nq8NFnN+/rBPBTnHTdFhBsj/kr/sQd42vqzosBUs
/weqXtnhDAj4MDj8fPv6gOViFQe7Esfa0zIscD7EX2xwfuHykg3/+NkdLlwN
e6NvjeC7TGgWSutShvNh/oWYx+aQDjJGTAkaX6wOHxatVzgbAXM/k0MFON5k
HWQ2is1nesDgcKB7X5PJYkkHsLuNGRyEKyeVnE2RgLr3n/2OYKuI/+picL7G
J5WXs16Kwvng8HcQhesHp4OdIg4HweYywvmQ+GSC82NUI2TO1bA4KOxasC+V
TxTqH1aIPmYxaHpidRABu0cM6l4OB/c1R5czzJCF2FfM6dALSrcb5BxegMx/
wwkxd4+8A9hdDVwOa4V0+NLjFBy2g+ODC+K/Jwrw9FgNCo/Xig4FIPv9eRw6
bTx3pSkpQcLlMZ9D+eFtrjN9laH+EYDYe1nZoRWUP0wEHXQV5b/kiKlA3SOE
Fp8icD443DRF4Xywv9+JOkjNi9M8PUEFEp49MH+rODxwjXecJSjq4HOC3Xa2
KVS9nwg8v8L44PjVQPDB8T9NyeHLvo9b081EHcDpP1XJIeTt5Y8zHiL4HqBw
tBCH82H5Hxy+PxB8mH0A27jEmQ==
             "]]}, 
           Thickness[0.13175230566534915`], StripOnInput -> False]}, {
         ImageSize -> {7.593006226650062, 16.338709838107096`}, 
          BaselinePosition -> Scaled[0.32439307852814453`], 
          ImageSize -> {8., 17.}, PlotRange -> {{0., 7.59}, {0., 16.34}}, 
          AspectRatio -> Automatic}], TraditionalForm], 
       FormBox[
        GraphicsBox[{
          Thickness[0.1287001287001287], 
          StyleBox[{
            
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
               2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{
              6.281249999999999, 11.2953}, {6.281249999999999, 
              12.512499999999998`}, {5.8999999999999995`, 13.6922}, {
              4.921880000000001, 13.6922}, {3.2531300000000005`, 13.6922}, {
              1.47656, 10.2}, {1.47656, 7.57656}, {1.47656, 
              7.028130000000001}, {1.59531, 5.1812499999999995`}, {2.84844, 
              5.1812499999999995`}, {4.468749999999999, 
              5.1812499999999995`}, {6.281249999999999, 8.590629999999999}, {
              6.281249999999999, 11.2953}}, {{5.184379999999999, 
              9.615629999999998}, {2.6687499999999997`, 9.615629999999998}, {
              2.84844, 10.318799999999998`}, {3.0984399999999996`, 11.3203}, {
              3.5749999999999993`, 12.165599999999998`}, {3.9687499999999996`,
               12.881299999999996`}, {4.385939999999999, 13.4531}, {4.90938, 
              13.4531}, {5.3031299999999995`, 13.4531}, {5.56563, 
              13.120299999999999`}, {5.56563, 11.975000000000001`}, {5.56563, 
              11.5469}, {5.52969, 10.95}, {5.184379999999999, 
              9.615629999999998}}, {{5.1, 9.257809999999997}, {
              4.8031299999999995`, 8.089060000000002}, {4.551559999999999, 
              7.33906}, {4.1234399999999996`, 6.587499999999998}, {
              3.7781299999999995`, 5.9796900000000015`}, {3.3609399999999994`,
               5.418749999999999}, {2.85938, 5.418749999999999}, {
              2.4906299999999995`, 5.418749999999999}, {2.1921899999999996`, 
              5.704689999999999}, {2.1921899999999996`, 6.885939999999998}, {
              2.1921899999999996`, 7.66094}, {2.3828099999999997`, 8.47031}, {
              2.5734399999999997`, 9.257809999999997}, {5.1, 
              9.257809999999997}}}]}, 
           Thickness[0.1287001287001287], StripOnInput -> False]}, {
         ImageSize -> {7.772871731008717, 16.338709838107096`}, 
          BaselinePosition -> Scaled[0.32439307852814453`], 
          ImageSize -> {8., 17.}, 
          PlotRange -> {{0., 7.7700000000000005`}, {0., 16.34}}, AspectRatio -> 
          Automatic}], TraditionalForm], 
       FormBox[
        GraphicsBox[{
          Thickness[0.08928571428571429], 
          StyleBox[{
            FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGJ1IAaxQYAJSjNCxZjR2DA5fGoGm15c5tDCTGq5gVpu
AwBUHQK3
             "], CompressedData["
1:eJx11XtIU1EYAPD5mkS12ZabbOrm5p1sGT1mpmH1RZhZUkuDzAxLslUW/tPL
0uylEitLC52mqRVZYKGEWVZqhdkf9rT8QyKHBikqaJTZrGznHPddaHTgcvlx
zzmc7zvfOTcoNSM+zUMgELg5nlTH4+54bNEpK8pmacF6QXwkfLoOzkTFNu0s
0sJxz7bzCxYb0Ns2xodUxRrgtiRUZL6iBVO3Mmt70f8d98J76eUPBvDZaupZ
aOZtLXW0nxp0mNHR7orQrZbmk2F9M9D92X3pr4emu7j8qvbBLzPveYZb0jfB
U/OXzkA3rKmLKI8UoVm8Ehdnfa0zpdv1aBp/I+9GONnbbtWDNLNo/0tPCUyS
lqNn755ZcDE/N6kzSg/+9bJKd5sQhvL2WRY+9IPr3TV9CzyEUJBoWe/mIwfT
59h3izq9IFftzXVckkEHaXF/ljs9ROKptaNPybO9dj8fdzEN84EvmubR6Du1
Ljvatm5g2+/KCXRE6txlXjCJDvkaPFB2xg2O9Ix3G9f6Ap13sweaztciRh8l
70EftDM/zvm2cIn+r/yl6EzSz8L7DqmPwNkuVjdVNaeJZGhnvPnk/V6Kvp+w
JHGyXYI+TeIXitDfm0cbzF0zIYuuk/fG4c5Ra7UcTev0kxzHC0gDP6yXb6Rf
sR/Lj14Cm6bJ8o0pGkgi8T2SoZOJkxXoHTsd7YYCxKTufwSh08h7VdA/39Wg
InEXKKCH5LFaDedJnZgULM9KNcTUttUIIhRA0+WhhtekXkIVcI70q1P917T+
tqhwfSwOFduvet50H6RKNN1vlRLH0/4blCw+sZrleXYg9O+ZM1ZSwaHp+Wzg
2DpGAth56ubYPJd5v6Tr420i+xIUAOFRj+OLnzjH+7PvSRzLx4gSbo4NHO64
oGXzTSjYOsVayKP1IUPTfT0mQa8i+bP64vncRfIvlLH7SmKYqjcZ3gc0z1I/
NK2Dg4FoMxkfrkF/1AfUTl7TgH14sDVypR79e+yArbwwBE3P+V7eq1uyAyK+
6Fh+CzXsPovRgbarN0FwVgMvmu6fE87XsbznaKA3Ud741sahaf923ifIfVXC
wYFn96JLKzQwn6zvNAcWcn8/5X2IfB/m/Sgja7jUS4v7+e//4C9x+3zH
             "]]}, 
           Thickness[0.08928571428571429], StripOnInput -> False]}, {
         ImageSize -> {11.196144458281445`, 16.338709838107096`}, 
          BaselinePosition -> Scaled[0.32439307852814453`], 
          ImageSize -> {12., 17.}, PlotRange -> {{0., 11.2}, {0., 16.34}}, 
          AspectRatio -> Automatic}], TraditionalForm]}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, FaceGridsStyle -> 
     Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {{0., 100.}, {0., 3.141592653589793}, {-171.2494765451225, 
      0.}}, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7436921722653303`*^9, 3.746215935955738*^9, 3.746216030965929*^9, 
   3.746281924326741*^9, 3.7462820148561163`*^9, 3.746300858747881*^9, 
   3.747141332378271*^9, 3.747141461993313*^9, 3.747141506811124*^9, 
   3.747141977301017*^9, 3.747146707667429*^9, 3.747148001703732*^9, {
   3.747167418644867*^9, 3.74716744410367*^9}, {3.747398724172958*^9, 
   3.7473987332827473`*^9}, {3.747403043279121*^9, 3.7474030531967163`*^9}, {
   3.7483515618688602`*^9, 3.74835159849802*^9}, 3.7483563294626017`*^9, 
   3.748371102275363*^9, {3.7483714448699636`*^9, 3.748371465545731*^9}, {
   3.748779553101573*^9, 3.748779567226613*^9}, 3.748779638551635*^9, 
   3.7487797270195293`*^9, 3.7487797860621862`*^9, 3.7487800275267563`*^9, 
   3.7491633755218973`*^9, 3.7491640028529043`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"d4fdd209-6344-4398-9ac0-d6ce38dc2810"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Rr", "[", 
      RowBox[{"2", ",", "r"}], "]"}], 
     SuperscriptBox[
      RowBox[{"LegendreP", "[", 
       RowBox[{"2", ",", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"efe", "[", "2", "]"}], "[", 
     RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "2", ",", "rf"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"MaTeX", " ", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r\>\"", ",", "\"\<\\\\theta\>\"", ",", "\"\<\\\\psi_2\>\""}], 
      "}"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7487798496470633`*^9, 3.74877986028631*^9}, {
   3.7487798910590677`*^9, 3.748779924047818*^9}, {3.7487800746643677`*^9, 
   3.7487800786612597`*^9}, 3.749163396946899*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"26668a5f-3113-4926-b77c-6730ec6d93b5"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
7jEQyMnuzaD9Gjp8Oae39R8bao9zEY4LFrtomFN76KPVujsurtKL2OP8w4eE
S6scS+j4hfGuf3tVXtxKL3rfCKPnMrXBm2PkAogfnDfQ4PhB/Ld4drDUPoM+
F+cKZs5nlxNxfmKKn8y1HrReOD9wns/WAfF8fvud4cdXUHucE+jL0RlxWy7X
eO2Kn96kndxNnjnB+/lvfvOcqauCZ9L1dsTnTSlPd0eF+5H2hvduvTSqY85n
X+Gp2Cc9SpI0JM7jzWl9WtV7iobEOZnn9ZaWVeM0JM693NqgpNl/oIbEOZap
FSdNN8hrSJxLqUzsUja/RV3inEnY7lwv/md1iXPdNxl77rmsCYx/7rmU5Ux5
uOdP4pnyc8+TDGLqyz0fEsLowz3vUVISt0E9X0Ni3VtjxLnyHtoagmyzeS1X
6+6Scj7scefPtmfqAr0NAa93b39N+MKBw/rbxqgLBi5uMwkOfk/4/F86DvZD
1AU51v6TPi6ppzo8zN7dqV5NIB89R/+NI9WzfLWHTPodNcGAt3nPY6vo+q3K
8V52t//Vc+GlJwfGptF1Wt7NhsmPmtQFSQG5e9THUD2zThj0yytTE2iuV22J
PU7XUT/4qt0SKKoLTt6d8GvpIapnlVHztARPdcHNKR47DsyjelpsNOlnd15d
sHHi0M1jLKmefbd49T7ZS0PwLURnlk0/qmfZmK0j3vlpCDLGFJx4XU/Xi3oz
5b92+HLn/OO0PSiXivXnrs/HufwtH/9TXZC+Uzlr00SaB1Zs1O9af0RD4n8r
HSrXXH4/T0PifyXTdY9NiLDTkPjfR4zlX+NYXQ2J/eU1chnN97prSPzPYnWv
ffMu/1WX+H+EK8O557ddGT/cc9QqzHO5+269mXJyzy1frBDXi3veeA+jA/fc
r96OLuFvP6kLEv6ubZ15uISUxzeqUGllvLrAtveVibID6b7D/XC3g0aG6oJz
XXcdnB5E9xd6Tt+0/m6jmsC6OTSk7yOqg/oi/8gBD9QEhjKH2kZE0vZ5Kb14
3OWXagK+1/kwNUPa3vrU2aQkd1QXpG4pu5oZTHXQeDAk1NBGXfBYNkH7jw5t
bwF+/Y7m71cXHHh6IbPxM9Xh2cz7OWVyGoJX2b/N1mX9Z3/NUNxPfbv8OeKy
jbbDSyYzY5zHaggcHO5UhMj8px1uErfnz0trdY2/VpJy6viLn9trzqRknWJ6
viJjtLhfaEy89XvO9Q+ENzLl9znKu9ZaT88tpPiJ+9fmrZqz/vz5QucvjA66
8w6F63f5RnU+Ke6nsk8jLy5No/vsigfFerZ3fGlR2oe2N3smbuz7rpCXtJTG
yeRw8fuafaGnVsNVyjNbxfFn4d4vFistaHtrCRO/96DIytNTkyjPGCCOY6qb
5dYO6Ur1T4oUt5/WoS8TTAMo/6ssjoc3rrWqRDym8cFvu7gdmjiN7pNsQN/X
ykMBxwoq1CXOCwVHNpxWWKwusS8mqzS/daOTusS+z8nqlkT1E+oS+zunVb+M
jFPQkNiHnThWHJf+GrbneSnvJf5zB5b9qLXWELSHHRtpeDyb8BVMfHsc8lVw
wOsJ4aaR4nboetXiavrq54T3UhM/l7teveiNuJzccztFTL245162zxTrILGf
flCsG3ffueT179FVwzUkzneN2bhxqNNXdYn/T0WF9g95mqcmWPKyJWjMOLov
M9ZtiPvt62qC109jbO+dpNwH+vy68TZ/Pu1Hg8aL+1fdwEczjne5SezNy8Tl
4a7z73iWWiHvqiGxj9DGcO5+kLRxWdr4Is2/tPJLi5/S4oY0naXFH2n5hrRx
U1q7lRb3pI0L0vqdtPYjrf9Ky6Ok5QPS+qO0eC5tvJMWZ6T1C2nxSlp+KC3P
kRZnpI1T0sZxaXFVWhyWlt9Ky9OkjafS8g1p44K0cURaHi4tn5Q27kvLi6Tl
ddLmBdLyW2n5pLR5h7T8WVqclBYPpcVPafMgafm8tDxKWp4pLR+Qlj9Im69J
m3dIy/ek5cPS8hlp+Y+0eaW0+ZG0vFRa3i4tH5M2zkrL66TNi6XN76TlLdLy
bWnzEWn5p7T8QVoeK22+L23eKi0fkzaPkDbP+r/mRdLyK2nrGNLm49LyDWn5
ibT5o7Q8UFp+Ii2flDafxTokqVcHjWLvZUHCkKXT7XghYwg3nXKq+7nBfsKO
2nJ9ea4C4mfMwNHDZld4Eg77F2Pfi0L9PMn6OeytQ5UmBiZ5EA57fc1Ck3hZ
D6Gvgk8nXgy9X3d8n4KeK3a7Ew77HgVHw38puwvPNJ9oFW2m9+u6J/Vqz5jj
Rjjsc88V7Wh770r2nck9wDL++xf0diMc9iHtYSb2ia7C+Nl/WkQ+9D7ehS8C
EiteUA57+dX5Yx9ZuJL/FcJ+zV7jG7kZlMP+RP6Q6FU9XYX6U499Ec3wJPY+
sT00PbZTDnvekwa9t29cyLo07N8+TihRWepKOOy9rxppxea4CIs9XT6IFtF7
gB8tMtj4ysGVvHf0xxT1JbWPe9H3Dj5+iyjV5oIveb/gR1bZPCwooe8RvOvv
JV/7L6bvC/zDtyEOBsvoewFPO6Ys2img7wW82GzHW61rLkRn8CUV8X+ytF2I
nuCdfhvFrsx2JrqBz+pY0qlqmjPRBzzEOuZQl5HORB9wXvVHq42azsK5fmuK
eAIab2+mrm/2C6b9Bbx6r/ql1GtTiG7gqftD29+7Ut3Ax/5jsDXFl+oGrtQv
OUjvoxvRDfzQ4fm3BpS5Et3I/bE/30TLy7oQ3cBFrqNS0nSdiW7gFYYFhb/X
OBHdSDkHTnT9puBEdCP334ZXlaWddSS6kXtot9/Tq/ZzJLqB567wcT/3y4Ho
hvHUISvK9Quf6gb+UmPJq4x/qG7gSjVKFXm/fYhu4KdEnrMbXtP9OHDdh8rj
kl2pbuA/T1+XtdShuoF/Vm99mjDAiegGHrbl5Pgrco5EN/BRR3P7xIx1ILqR
e1x3HdlXc8Se6Aae0jHpVYmrPdEN/HL+9quFY+2JbuCvS037tzrZE92QF3XN
G2kyR4/qBn7my6UZk/lUN/DkZf2zfXOpbuCqz4cYvVlEdQN/su9zSFGxK9EN
fI7/rMm9+rsQ3cB1FSye9XdwILqB55k32s4rsSO6gWtvvHTF6JAt0Q28afUc
9w9nbYhu4JsXJAlcutgQ3cCXOQWY1BRaE93Iva9f3G5o/2sP3ZDfNvIN9nwZ
SHUj950WLSmOVKe6gR+L9wpx3OFDdACffer0sF72zkQHcJOaLY6bv9sRHcAb
YibOmapqS3QAl3dWfi8bZk10AHdsvXP9db4l0QG89kbYhrWjLYgO4O+6/ZOu
f3US0QFctNox1DRQQHQg938uSfge2Y/qAG76a/uqPw+nkHqRfe2wLM0NKnbE
D+Y7bzh6ghtw9AT34ugJvvwkW09w3fdsPcGLo9l6gtc6svUEn/yTrSd49XW2
nuAPu7L1BO/P0RPzzeob7P5I7ufk9EfwIZz+CP7PM3Z/BO/G6Y/gSb7s/ghe
1IXdH8H1zNj9ETxuPbs/kvs2V7L7I/jkf9j9kcy7Hdj9EXxdPbs/Yt2Ax4n/
4CGc+A9+4z07/oN34MR/cIMH7PgPvvYUO/6T+zwHseM/+J8N7PgPvjWdHf/B
dbax4z/4FR47/oPH3GDHf/DJL9jxH+tCEZx8A9yBk2+Aj+TkG+CT57HzDfDC
Pux8A1zmEDvfAB/UzM43wNsd2PkG+AI9dr4BrtaXnW+A64aw8w1iv4Wdb4Bn
x4rzDeiD9UAVTh4LvmMzO48Fn7eSnceCx/1i57HgSl/ZeSz4kCPsPBb81jh2
HgvuUcrOY8GvfmfnseAf/75k5bHk/kwBO48F138tzmOhD9Z7dTnzO/CMQPb8
DlyRM48DP6bOnq8RP/nseRl4zBn2/Avc6Bd7ngVuHs+eT4Er5bHnTeCH7rPn
R+D7LornQdAB6/bVQWvDDL5THcCzmw6cCa3zI+clyD2QZ6M0Q554E33A45n5
L/QBHzBVPM+FPuCNPcTzWegDnr5GPG+FPuBz/vj9v/kp9AHXeiaeh0If8KZU
8XwT+oB3WCyeV0If8LVF4vkj4o9z7Odf7Zr3+Dy+a9Ewt3BS311vW9pfJ2Xz
2201ByuepvUdzqw/7Ln9yV4QQevrOr2bvGFOGj/io/bYgERaXxfG/8byqH/U
ftD2gHWSVPeY4NxTtD3g3OkZf+MXpxbT+mKdpK9PWViPKbS+KOeGuFOWd7xo
fVHO296194v9aH2HW0e0bvrymt93kVP7CDVa31OTzpla5z3nfz579vhgHVpf
rBeVd67Zv6eSxoeIvGcBg3Wf8NsKLte4/qHxAf4vHP27nO9J64t1rVl1jxZ9
lqf1rbu1oX+kdwl/9re+N7ofp/EB61oaikNMtGe60HkHU06d1IRdl5xp+0c5
e1+yvRPi7ULqmzr0S47S0ff8oQc7qixsCSP19TmqXFan+IavN7q/9pHDNB5i
fa/jpbozka60vrPuWpZkJVTyjfvU6fKm0/rCf/0Zr4shI+h4gXVIU//BQRrr
6Xix6MPy+8teveXrp//p/FfNmdQX65Bz+x+rVqmi4wXKabHi8d4DV51IfVFO
rQOlMsFnnEg8nMOUU8EuMiGh0InoMGD4sUXez+v56d1Hn/vwnOrw6uS9VCOz
j/yONro3Hw+mOmCddoPWwBe9cum4eSUi4GR6zAd+fvvjsM1COm7C/9nZkzbv
daH5Bs5v97BPrlVfRfONX3XjEgs61fFP6CpFne3sSHTAerL/zJlODS8ciA4o
Z/Dhnvt2/suhA8qZaGVo8rzWgeiQw5QzdM7r6doVdJ7unHpuwOP4Rn5YFX+W
bS7VIeDsKu/YyG/8grkL5x85R/Ou+8z5t/05J93Dh1EdTGf3nvFx/xf+oK/7
halKVAf4r1wX7xsTS/NVnD+PbR+3xcPZnuhwY1HrYPm9DfwB3tGKNXF2RAes
8+/XW5KXqGRHdEA55fME3hZydkQHlHNb6RdzpSA7osMEppypqgOih7XT+c7m
ARt/NfX7zper62R9MiOMjAt/fxXL6Bu18JW8RkwyO0jnNZVXpvdMnd7Ez4vo
MrVjK53XwM+Hl80G+/vak/raMOcDHe/l5ycsoPMaEeM/r/OJ4229bUh9sc+y
f/vzUQdFVqS+c16pdp3q2MxXjtRpSXO2IvXFufo3gyeM3zzCitS3iinnwP4T
g2u/WJH6PkmLKO17rpU/X0+p6uR/5ok417p9vIHchj50ngj7uG35HXYNp7r1
ULe6bGrdzq/30JPX+c88EecG1/T+o751IM1X4/9uypsb8pu/u7xLcdEmH+If
fv72V/kwv5TOB+FHOX7ildkPbIhu8FOXMkbb/Bytl/tBzZ1BFSJ+7W35rIrL
9D3ejI/cv+PnX/7CpEkrfp6m7/Egv/2s7PA//A57lRQHR9H3CD92KtUNXfVp
u8X/fzXez/ruvILOs+Df57Ha9wmN9D1in/FtTWil+lxr8h5HhVw49rDHX37b
3bslJl8tyXv8xPy/YNDYbQfi3SzIezzElDPGZ2r+4kWTSH3v9VhhOumqjOCQ
VtMSqyLaf8c33pm8uJgncArpMMzgMO2/uBdiyTkPqx+/6HyzMeRz4bapPIF8
8cm7M23pfBP+96dfdTCsdyQ64H+4aY9Cm14mOxAdVq48fCPQRkbgWyKbf93P
nuiA/d/FX3ePtLCi/RflnHPl+a13nrZEB5Sz/5gOF/fttyE6oJwJx+ZFNPnT
+eYn9y96z9fICr6ZB59Nrafv/eDNHme/9pQVaMTd+h47kub/fkbGRl3TOwh6
D/M3u6BM4zzO5R65vlp4eBmNbz0O+V/SNuggCHULDX0soPENzw0/mnr+W5Ez
0Qf79YtTHN+P+Xc8gj4oz7hj8+ZeP0/jPPbriywXp78vo3Ee5VS56a1SqUfj
PMoZojjyzPPjdF6JcsZ8uNxxVSSdV3bZHtA/3E1OEGleJNvWM5zoky8bvy++
sqPg2mv3Kbc2UX2W/HNEMy2qo+BwfoDJhY1UH5xzyPVXTS/tTvOBUe/uHr3c
Kis4v+xsjU0j1QfPnXfvZflMfZr/4DzGWcMjfQ/60/kRytM23ebauY00H8B5
jEs/733yeUfzAZSz/v0Hm3Ifmg+gnBrjpt5PqqDzR5QzvcfLXpc9HYk+ei/u
df45qJPg2rmC2fssqD5vLL9u7HlKXmA8rutB5Vaqz+6LPXsYjpMXxHSO05Lr
RvNDnGM53SMgUZRG9XHTGrfDrkBO0O1LjwcvNtN8Cc+dn1HVx/0p1QfnbcIy
qkc1BNH8EOWJW7TQS12W5sM4b/Mnykdj6lyaH6Kcj4wt9nT9SeePKOcTS3/R
4G3OpL4d1gYuO7KgsyDBO/9aaDSdD179Hs8TdugsSOr0o/OtDbS+OHekkVun
n6ZN8/+54UcTyjZ3Eth8tbBQHUzzf4e+Jq2JHzsL5PwWqCVNofMdnI/adNx5
kWwTrS/K86Ptw0feQVpfnI9KkV1x12Aazf9RzimhwY3LRtD8H+WsPDZ7Yod2
ui8Ww8xTQkI/+I6wciXcgZmn9Pg6cHrhTWo/j6lXWi2b2zP1Ghks9oN2xd1v
hc6Yp8y7lHxlbrgf3Qdh8vn3s2bO+fPFl/iPZOYXV+JUM7csp8/VZ+YX32KC
d1t60ffozeTJVSObrm9f7Ut4KZM3Xn5memacDuWBTB6loatyfEipD+HIN+ZH
bRRVHKQ8M6DtY8K7H/ynzDgO3lDx8s6J2Db+nV3Xuw2Kp+t4sF8VG9w4VcWd
cMGyrGqnez/5+mmdOnztQTn8NO9lc4z7i04pT1o8kI5ryBOezZnyqdNcOq6p
T7BovPbnO3+C0R+nltHONJ4z+UbkKDFH+4T95wHsPAT/03nLyUNQr+3bxHkI
OMr/IOxl+nFdmr/B/sGOcoUxGycRDh0UtKZcLNsjIBx+MoewOXQwYvygnaOc
zxXGPvTiCQiHPq3dxBztR4Op76iy9AHuPHPClRl9Tr8Sc7xfIyZvOe8pzofx
XsB7hmfOijKn7wt5kXPLhewER/q+8D/KORmOhh+20P9dIr/i7VqiYX+J7lMj
j7oTs2ZIwXCaTyJ/MOoyUzDsKf0fK/KNM0fSD9d4/2efghlPlSrth49Rpu0f
40jlgPXDt0dSjvipPDWtrOIp7Y+I5x2jxP0OHPE8fhG7n2I9asDpXYGp/87r
4R/xqndzpPZoaz9ij/WZDfPZ+/VY9yg8+UP3yqUgwrE+4Pnx74wu1pRjHh14
u9jrVM0UEpcwr1zXujJqozPN28EHN+3puncHtcf8a8b2fl82jab24EpHxTrD
HvOXjd0WDk7WpPbgMnPF7xHtBPtQMVfmddzQzZ20c/CnbR36LymeSPM3Zr/m
/d7uJqv1aLsCb8y/20d3OY3DaD8xTHnA0U4MmXqBIx/T5egDntoo1gcc+cmj
ArHO4BiX22vZ7wXjVznzHvFcrAvl3H88Rk6LlgfrJ3pDX3Ud+iuMcOSZoQ7y
j0bWUo786sPxxrLZitQP8orUl4flv5hR7s2MgxinyHoRM05xOdaXvnH8YB3G
7AT7uViXuMSUEzrg/4abmPkm7JG/vdBh1xd5yzSOPhjfs4e0Tdb2DSf9COdh
ZmeJ+x3aD85Vhpp0j1rRj7YfcJW0l3N/hLuSfop2clEw5yvvFR3vMN/JHcoe
NzFvsrTflPL7ow8pJ/yvTJTZvFGFtivkCfGcdWn0lxNdd468c5T6x/pDisKd
xffO0DiM/+X159QLvGKvuF4oD/Ir7vvFemw3LbGe8I91gA8bbpVpKdI4H3Jd
/UnV9l/8lwxHOVHfTqeLLT4m0fJjvPvM5Ang8G98LXtCr+WUo/ylp9h+8Nzh
HHvEDa/Kym3ecXS+j/LsSb07Y6AczQfgfzDDkQ/A/sSXjntfLLQjHOVf1mNf
jWMQ5fAzjGOPcvox6yfgGN9VGD/IN/Bcuxjlk08j6X0p8F8YLebIN2DftqC6
UHs6zUNQToNwcR4CDp31Tw3uZ3bDknD4X8jxg/J35dhD5xWCeWs7rab77yhP
0ASByeWBNM+B/1pTMUd+AvvM2js37C0mEg77pA9ijn4N+yjn2dkGG8YRDvvD
TmKO9oBxM2Vw/72WwTTfxv7CQmb8Bcc+RWfDbRp9dSnHOKsQMCvH/xPNE7Bu
f5bJE8Cx/h+w4cihoZcpx7gcY9v/3IJ4yhcz6+GhA9l5CNbVZ5W0CS09KMd4
LR9ivXKHFuVtzHryJE6eg3Xp6aLITtPbaX/BON5/Eju+YT12l3mcTOkdyrGu
WzfW1uVHDuVYB05l4h7iA+YR35k8EBzrqxmcvBHnW8LSxOM7OPLVDzFddt7Q
pPEN65+ZTN5Izp0y664/OXkm/IfeFOcJKD/G99Jgtp5YVxnE0Q3jfrUN+z1i
nUGW876QD0T6s9sP8smrSex2gjxhJKfdYh661kDcPjGOoF/Mjx272LgfzUPQ
L0IYjriHONA1dLGd9nsnwhE3zs7t3Kb8k3LEga9T2faIY54ce8SHiJW3FquW
0XUbPLfF+9eQk5XmhMP/ZYajXz9m7OXrBeWma0YQPokp53tRz7EeT8YQPpXx
k1nHtv/GlNOWY49yVkwur7NI1iM6Y19vcNlyxRldqf7Y/9LxDN+yK42+L+wH
ffh4JPP5BMrJ/RtTL5Vf+c84hXHf4Ix9wMAD/4k/TD6217Ju8OQ1fmRc5p4/
B+eeqwfn/k8KnPv/L3Du/9rAsW7D5Xhf85h9BHCsqzenXK2eqEo593w7OPfc
Pjj3/wjg3P9ngXP/dwbO/T8dOOL2F4+IuCH6lGNfsurS4+6af2n+ibhaf2tK
X78yyhEnta37ZM7NpxzxLcj09dz1mZRjXjxgaGNb6QXKkU9Gtwce/VlIOdaN
r5bP4PV8RznWSzVn2t7W70zLj3XC4R9Xn11jTDnW5U6Yi/f3wTEPPR99r3BG
MOVo50Jm3ZjMF5j1pUWc56L9W/LF6/Dg2K/sXcEuP8aLOmb/Ahz7epkcHZD3
KheK93fAMb5M4OiJ/YIxzP4mONYNvlix3xfivCuzL0zOQzLrBls57x1x/lm6
eD8dHOsJSZz2gzift1B83gAc6wypnHY4k4k/ypnidWnwk8w6YQLn/WL9Srex
5sP80/S5WHd6dUNjcs5Jyh8x+Y98DPu9c/+vCs79vwmJD+Zagxaey5fgbSUb
y49MeynBD2R3s2/u9FaC71yfvSf1lGS/3ho4vVt9smS/DpxVFbXn8z0JP75a
KdNDRkjGw/zDSnLWSyXjocvh31kFhpLx0P/TyibZTpI6aBqvzRi1WtLecpPp
h6QKyXjV2fHMklNjKyR4GT9/5d8DkvWdlHL+ylovyfoGfJxr0z1NsvxnV321
XpVaLOFftD9RK3L0Ywn+f62XNH2kvZf/a/mlvRdp7UGabtLa1f/1vUhrP9La
8/9Vf2ntltuPcO8c5iPguNcXfIZnimxIN/odZHAfl/LzwkD6HWTw0ZePPxw+
gX4HGdw5+tKkfvPod5DB5TaLiuPe0+9Ng/f+mVBXF0+/gwz+xmn/MT8z+h1k
8A/1sx8s6U6/gwxu9njJMvlP9HvT4IFf71aPvEe/K92V839A6AB+2LnrZt4+
+t1tcNVjQs8FNfT75uAN6k1yc67R75uDt9gkhPHq6ffNwd+KPmcY+1AdwJ9v
Nt1eXka/bw5ek7147A8rF6IDuHPCz5hH5fT75uDeCucL2lPp983BF0bMvp6+
3JnUdyGTn9y2+26204jWF7yr6lHfmbNofcF7lenbuo+m9QX37rgup8iT1hf8
zJMfT6IjXUh9wTPnarruWetM6gu+PvrP1JgaJ1Jf8AkjvleUzXMi9QUvuXDe
78EgJ1JfcLXJnR8HPnMk93mCv3YxLliX4Eju3YrgfCcR9xNGcO7PhG7g9bJN
4xUe0vuuwQ+nDLDd00DvGQZfo/TVPf2AK9ENfFXWpsxRri5EN/Cljy1uva52
IrqBF/zWTvv23JHoBj6t6tOawr6ORDfwouc/ZyjtdSC6gQ8ZvsfS0N2B6Aae
ofu17aauA9ENfK9V4VNbGQdyL7Q/k1/drt/o5e9Ev38H3lbY+3yLgOoJbuL5
ff8HN6on+LGofnv7zaV6gj++V1VzII7qCX5u0+xPl7tTPcF9O2XqPv/iRPQE
X8/fsixnrCPRE3ykwekX2yvtiZ7gQT2mdOxQaUf0BO+zefUNu9F2RE9whfd8
FbMaW6In+NThE4N6y9gRPcHnPYrWvrbbjt6/zaw/uNSvNCifQPUEv+vr5FjV
l+oJPmONitnFQVRP8CsT87tPGEb1BP8nwvtwwWCqJ7g23+Vaw2h6TzX4rJxL
hR3z6D3S4K8Uyn6EXrQneoLf6dqzcG6bLdETXK2ly81t62yInuDNRStULgRb
Ez3Bl0SUBi/eYUX0BP969bfeXGcr+p0Ohg+LO9Sbf9+K6Ik89mDPcKfxo6ie
4HoPDw+rafcneoIXLmt0nfzbi+gJvkg1O+hHuzvRE9w73aVdu8aV6Ane1eTI
mAmbnYme4EH1B33d3zoQPcHl7Js2zdlA780G76zoOM44woboSfzPOpL9dKoV
0RM8UeF3inOEBdET/E/B8S3XYiYRPcGPpsWOe/bJnOgJHnH8/PS6j6ZET+x3
/16SOmfVKPr9CHCMp9AT+7B7Xabs9VOj7RN8CKd9ghfNYLdP8LUT2e0TfNtl
dvsEf9CV3T7BV3Vmt0/w0kZ2+wRveMBun+BJ09ntk5zry2G3T/LcpeL2Cd0w
T+fmIeC9OfEQXIYTD8HjNrLjIXinjux4CG5lxo6HpDx67HgIvkSRHQ/BN2xg
x0Pw8W/Y8RA8XI8dD8EHPBDHQ+iAdVQBZ5wFT9vKHmfBlRXZ4yy4ZwZ7nAUP
fMAeZ8HLf7DHWXDn1+xxFrz1EXucBR+vyx5nwWO02OMs+B2BeJxFvMI6gNye
frONbtH4D/61n4hn1kD7F/hbW3ZeB35jIDuvA49+xc7rwId1YOd14DIP2Xkd
eOIsdl4HPjiSndeBP9Zj53XgT86y8zrwYjN2Xgc+0Z6d12Gfd5vH6em1fen3
KcA/5Zi86e5Mv28Cft2Jnf+DXzjCzv/BZdXY+T/4Hit2/g+u+4ed/5N7VpPY
+T/4pUx2/g/+dTk7/wc/J8/O/8ETQsX5P3QDH/Hsxtre15xJnMf6Xnpp1sHb
pXTcBHfIS7GxXEj1BP8SWNTf6yLVE7wHZ14JbuDMnleCP7jInleCq85izyvB
V29gzyuJn2b2vBLc3oE9ryT8E3teCf7qHnteCa75UTyvhJ5Eh9m7ytbn0P/L
uHD+DzUy8udpnsCQ8O2Ok7ZODp0iXHx9jBVPw5jwHwPeLdmm5yssvT17DE9j
IuHxl4cmL/TyEg6a8bwHT5nO07VNbpUYpHgIHeuju/C2WBF+vGjxDK1gd+Gy
aAUZnjKdpx8YO+CBzgY34ddrg1tFneh83PRlj7EdN7kK5f82NIvu0Pl47TSj
TZ0sXYVqgrxvonV0Pl6h13lrXi9XofGqTfUiGzofn7fD8WXKVxehc0FAragT
nY87niy021jsQr4LAK5yIW6Za74L+Z4L5q0nbdyH9RvtRe7nB18iKFlj6uZB
vrcCnn3e59k7WXfyPRTwjVunCRxU3cj3O8C3Gppa50e4kO9rgA8b1rFepsWZ
fP8CPKftteXjY87k+xTgevq3V8UmOAs1mXuqwStmPZ3R57izMG/1ARNeyAQy
D+0f/S79j4qXsLv15168kZMIVz9iPsWxp4dQcD+xGy/TkvC7nsFdBh5xE0Y7
a8vyRtoSnujgPKjqsKsw9dyDBlE/Ol9OnT9C9uVeJ2Fm4+7PohJPwg+2Cr/d
H+ckvDs64qNolzfhYy78/bav3FFYucD4vciHzpfnl8v1XjLPUbie+Z4C5oPf
31XdmVDiTr6DAL5uaV5rJd9NWHd9VEee0IbwMJWCqWUDXIWz9TS+iA54Ev7U
R182eqWDcE3U14+iYG/CQwOzVg0IdCDfFwO/Pu03T+TkIBxz8qAi74kFmU+l
RB5QOPTZVRhmYC7Hc7Uh/PTX1NV5412Ekw/P/yQa6k14j5HpyhkttkK/msk1
olo6X9tvWaU6MsqO3LeP+cWLnhPCw5OcyX3s4FmOQTs6/bAUGjH9GvnwPe+b
j90UA4VLmH4N3qOXqlHwam/Sr8F3fc8pmujhQfo1eEuzX1n+EDfSr8Gfjw80
fN7kTPo1+IYzQgf3cY6kX4MP6brld2uWDenXJJ/foBAdcMaK9Gvwxau+y965
bEH6NfjT2P0Tut+fRPo1eO9rO0435fJJvwY/Z9mwv/TLBHK/N/LhgsTfNjLD
fGh/Z3hW0LDG5mf0+03EfvemK2t2u9H+zvBnI5rcv/0bn0l/Z3jFu/uDtkQ4
0f4OP/MLHNs62NL+zvCtvVNvmRZb0/7O8JZhbTbHZK1pf2f4yb+prv4Xrci9
9OAZn/gnTwy2FgqZ/o78dl/CgJz6cE+hMtPfwT/fjFfoxXcn/R38UX3Gzex0
V2EM09/By0Y2LVr93Jn0d3DD2NyJPzbakf4OPi5rVfzkXnakv4N7V5SHH260
FVYx/R28+HxR+IERduT7KchLc7OGX42sof0dfLaW3aEAV9rfwVWLYu5VDKf9
Hfzc4Rkni6Jofwf3b3mZ+1KN9nfwzvI5DxTK7Ul/J//XOBizK/23G+nv4ANT
ptUI/s0H0N/BT03MNUnq6UT6O7gg02RF1HtH0t+RF00q7qk/ZL2bMGF03h5Z
XieJeW49vgvMWU/Owfd/pXynuyvne9z9mHgCfjpuwjOZzc5CvUOpuTLxPUkc
Jvf4Tb2RyxMMJXzi+xszJ18NEdqNT3XipRtRrnhxe8huP6EL8725CM69gj5S
+Afme4Xgw12nnlfODBbWcbgewzGf5frxYL77AP7grbJh8XFfoReH32O4GlNf
xGH4STz19LRMfH8JXsToAP7FdfIq/ooQoewH/4s8oT7h3vKBva45B5Fycv3Y
MLqBZyeP2TRI0U848uc9N141XS/yulWj293Sn8QrxH/TYHG82iLqMIlXTdeR
figouehu9SJxHryZifMoDzjKAz9ob9cZP4j/sD9hyo7/4A4Z4vifuKX5r+gb
5bumnbzTttWBcPgvCRXzK//7Dku0E7Fv2Je+fovAjnDy/8o0MZ/v2PenaBFd
p7rSx6z7ZjUbwmGf31vMNya/bxKNcyf29lPM5YL60HEH3Hq1eNyBPfwEBIrt
MR7B/sFS9ngEXpDLHo/I+p6VeDwi/ZGJ21uGPO966xj9HhC40bX4UcX2XiTP
R3mcj4nXxzA/gv1yZp3WlmlXiKshTLs6MempGS99POFfa0fHVg7yEg5h2j93
XegJ087BzzLtHM8l4wuz3g4/iG/ws4rpR1wO/+C178TxhMf0I/CzmwdMuXeX
9iOuH9QXPE9BHH9gz72fGXEPPGOROO5hPAX/OF2cP2NcwDzrw94Q0d18uq8H
TuIPE9+4+57QDXwmM5/F/Lcr5zvO5P0yvI1ZTyDre9gfLGXPoxGHH8e46qmu
oX7AVzDrOfg+Dtrn9BqHrNUD6PezCH+eLOfq6UnqxR2P4Ae8P8cP+FDGD8Z3
8A9HDMzkK+j3zsDfPLGd0qObK9WHaeeGzD4FngtubXBzxKtx9LngjpbV6Zmx
nsQP2m0is3+E7+TivSxx3ChX5BJC/IPH2s2p+ZvpR3Tgjr/wA/7Db3rLYk3q
h/ALVfXTnakf7jjrIWV8hH/YLw24PKd/M/0eNOz1mfERzyXzvgWmvrI/6HeR
YH+fGQfxXO44Bf/g8vkqmaZLqX/wkLmasi3TqR+MU1w/4B/kvpkP9aJ+wM8w
7xF+uOMU0Z/zPWuiP8NPMP5hz41vsAffIWTXC7wHp17c+AM/4C/8xe8FfsDT
54v1hx9uXIIfcCGn/YAHctoPN/7AD3g0pz2DqzDtGfEW7XylweJXyouChZnM
94i57fyiFN6POa8LfuxomvqChinC/hx+hOFxzLjAbf9/asTlAbfZIo7/o5l5
LvgjvZRN+lmBZHzhvl/UC7xBTpyPYR0M/EPGlqnmowKFiUy+zY3bGNe4PJ6x
57bPoYw9ly9m7Lnvaxhjz+VLmXpxeTiTV4DPPiNev8J8ClzWaGZU3zwXYXqF
5m2ecAgpv0BuaKZXcSgZf8EHF5i8udJ9qvCdlPkF8lLYCw9vqi+6SPMN8Bjr
ASUy7v7Cy5z5SOn/z3xkGaMPtz3sZ8oPvqn/hsu/V4QKRzDlAded++rJFpG/
cKSUecEGJv6Dn1e++fZC+DThEM55jIHMeQx8R5vrR5tj35+x38aUnxs/DzPl
B18Yl3hIYBMqNGDaIbj9WXE7HMXUC1zjdpRoY6w/0R/t9kGBmKPdcts/3ju4
CfNc2HPjGOzBxzA6o7+A2zP9DuUBz4gR67+P8YN2qMC0t2KmvYHLMe1tDOMf
fCGzLt3OxAHwWUxcMmSeC76XaYf2TDsE12baIfI0brtaz2kPF5j2AB3Qf0t7
vnfZ5hhKOPKTBwxHvAX/ccTA5eXEYOIf+ixj8jHkk+gvaYfE+ST84LnKR8V+
sN+B93jcQ3yOBev24EmfdGb2KfIWrmDiBjf+ID7guVdNxPEB+yYofy/OeQPw
1gPi8waIt9x4iPqSdXtmHwflh59NzDkH7L+AG49jn1sAP1zHPrdA1v3s2OcW
yDqnAvvcArhyFPvcAnh2N/a5BfA/t9jnFsDl94rPLWC+jPo2PDW7U+npQ+oL
/nyKeH8KeTt40nzxfg2Z9zHx8H7fNRF2m+j3asn6zFXxviFZz+R831kaP8nM
+9D+rT+8Wmd8n35XF3y/ing/F+vGJG9cfmWOXoSP8AKTV5PzZsx3n7Ol8OPM
cxHH7D6WmX7r6yXMZ9YnwSevEa9PLmKeC961Ttyekc8jP3zI5PNYpwVfuEe8
Tov5BTn3clQ8v/jWyWwkr5qeq9kcMeRTQJY7WfcGT1k1fdZuDTeyXkruVXDa
7zMoja4D47nho8TrwJi/wN72qXj+opt4tTuvgfpvvF1+f8AZV7KuCD5/eYru
dr4rmacjblzSLzhsecuLrOuCm80R7+MgDoCvihO/L6wXIW98bC3ez3rFrAsh
TvZh9vViGT/gZsw+IOaPpF88EJ9fwr4Dyu85PO3amG8Bwr9M3AaPDElW3tQ9
SLiac77xGnO+EfNu9Iv2CzGTqvPo91XBD/480iNgLG0PaOdK08IKlB/Q75Ci
3QaPXHl38AzKue1zjZTzlrBHO9wW3/3kwMuewq1MfwfvNPL8iZb31D/icNUK
sT043kvcCHF5EDfAu/wst7NdR59L5gWh7HrhvZgzOiQzfsDfxX12GvtvfDjF
tB/wTZ9H6Scme5N8Ce+xQ0ILb/wYf7J+C+5i9S5g1C1fYTTO2zP1Pc/8n+XS
ky1Hg66rS4ynkbY5+/N91SXykEtHZnmV6GtIjBf3dKyvjXulJjFPDPK5fL9T
s7rEOsNsxp4778P3a7h5WjVTHm4+1ocpPzf/wXdbuHnvrs0X63N01CXG03Cm
Xtz8XJoO0sovrb7SnitNN2n1laaPtPrqTMv+JVKn58bX7drufSiW3u8Ejvs/
DzzLbxOdcyDtYcDKD5VFr13E38Ue4UK4zjr+2vcv6f2Z4Lg/s//kR79FfAdS
Tu9DO+UdcZ4nz5nwP2lXjrTaOQkn/u874Or0HLLMOvmmkzPpvWTguH8S/8OF
PrgfcnvW63bRY3vCV/aU26pi5CQs+N/+nYsz4c7DXy0dsddB2Fbe5Yeolp7j
dZ/Wsf+rUHthT/XSRtFxd8IPDNZa45VA74sj6yfMfY/4HjreY+KPkTqlwxzJ
983BJ46Kv7NmhD35Xjl42TqfCd1W2JLvj4PPO93YV6GXDfmeOPj2zkEj1zRa
0ffLtMMbRSG7Nts4CNOZ94h2O2LUhN7zGx2FT5j3CH7ULPSl2hIH4QDmfWG/
bM5r09nCU85Ce+Z9gd/Uy7r6NJK+L/DeLl1GKqx0JPqT81d6m8/vH+RK9Cfn
uy6V7tEe4EL0By+foHlSwcmZ6A+eqXXLbGGuk7Bdd4ghT8gncXXkheYpE0Z5
Ev3BKzLKr22/40r0J+ev/CfEm5i7Ev3Bu/dcsrpHjgvRH/xZl1nXbhq6EP3B
F2951PD7kTPJQxA3+kedrmx64SkcyuQJ4DPGdVO5Z+IhXMfsm4DvVLM/vDDE
jeyPgE8/My8prNSV7IOA/65okJ24xJXsa4D7K3Z808vEVXjkyfmvop/0PNKE
tQn7Lyi4CnN7rqwTXabnkTKUlvU6XUHvBUI8xz1jzxkOe9wzFsr8LxjtX525
pwt5JolvzPkE6IN4+E9qscm8i+4kjwIfbHbFtSzDlZw3gJ+B3djnDcBbNorP
G6C+4B8fyLak9rYgnMwjGA4dyP8Tzx26N0Z5EuGw1z0r5tAH9iac+6lgf565
nwrtk+zvb83ZOX+vuzAI9xswcXIac68C7NGvnVPE9nJMfMNza5h7BgIZP3gv
icz/7v/B/UiM/wrm/57rOPPibGZeLG28kzaeSssTpOUDiM/kfNeshvFXZtL7
+sBTchd+sO9N7+sj/yPreSWo02B3Mk6BLzte57B6N72XD3yixrY+s73ovXzg
HY9vHa6jTe/lAx803qV+oBy9lw98veLgy8PfSe8XqBfGzeQ7MUmqP+m9lOBH
RU3PLffQexfBx3aWq+l5kN6jDj730/u4hqX0nm3w3h2H+Xl0p/cogq/mf3r9
KJ/eowieFnXlrE6KMykn3tcdR03VfWtoOcn/pKbnytkPouUEH7bhwdGDfd3o
vccM//1qw7LkU/T+BPAlSl1colzovZfg7f2f7lCXpfdgg+9sM7UYkedIyon2
2RQV9j66Ny0neJ9Os9PNUuk9qCR/2HK4b/Ry+n7Bn1yaUv5yHb2nFNyi4Og0
LR96HzX43EVz23sYOZDnIr65JQWf+jGIPhd8yOXoK1XP6D3n4Ff7xkes+2ZL
/IMvGPNP8zwtO+IH/b1d10p5WBW9tw38iWxGsNlgK6IP4oww/WpNsRa9bwQ8
VGWbaNcimteBNy2auG1GC72fB/yj0p1f+UPp92vAZ37bnZAynd6fA35M7m23
qGOTSX3Bp3XzNBZUCCTiYRYTD0l/YeJh5jbDqlb///QLhvNfvUsPqaX5JHiY
Ynu1yXD6vRiyH3QhQkVWmX4vBrzpt1nmmVHWtF/A/26VzFsH6H3U4OPyR+U9
nkt1Rl7U/my91dIcqjO4x0Qj88natD2AC1Wt/RUraP8FP7Kr/MGwfTRvBG+a
88mopwa9JxzcconDOKM62n7A+ywWBk/rakfKSc5HyasN6KVO+wu4XNmo77Hp
tJwkT7uenPltFe0v4KvOdnu1bxHtL+D2yVfiV5nQ/gJeUq4RvaMP7S8YL4wW
lJSYaNL3C34if+LQnypuxD+4glKOxfc+ND6Q+36vzL44tdSR+EHeNXhJh1Tb
Q/TeWsS9iw8Eqz5HSJ/XwJ7MXy5Zx7/fTL8LAH5Sv1pNM1f6vAZ+EDeMElR6
j+tK71sGn+oYrdGiRO9bJvsLU0R9Gz2lz2tCOPkV7kGVNt9BecA9ZZVqjSLo
/djg0YUN7+X06f3Y4A0nWiwuGdD7scFV5Tr+VJ8vfb6DciJeyebq5Xocp+UE
990u7u8oJ1n3u3Bj+Y8mei89uOVN47mLp9L7zEmcvJ653EWWxgFwWwXNmxYl
9D5zcp7qls0Vg7dWpJzk/272ZuUPU3zIc8E/LWbHSfDq7uw4SdYDG9hxEny9
PDtOggcqsOMk+DgmnyTtmYlLlp9VbX79sSccccD83T8dnebT9wteWf04fq+V
A7FHP9XYnG/g2Yu2T3CXLVGnQ9Rp+wR/N3fl7djpjsQP+uO1+AeaD7fR/gLu
dT2yeH8+7S/grbU9m/cMofdmk3wyb/qt6xlO5L2gX9cs0MhbVUDvtQYfuFaY
9e2XBykPeOO37XKNM2l/B79ycFlWVmeaH5J7Gt8sLl+9gsZn8PKRVk5ze9H8
Cny4lnrv9ts0j0KevPHJ9gyDSJrHkvW62aWjknvTcoJP9fE4Ofo/35cBn7TT
WOXTf/JYMh8MH9E815vmseAjtsRaZejQuA3O6x4TdP8/eSz4dYMnI2+8pt8b
Inkps19PxkGGK/9TbPN0Lf3eKOJeNTOPIPesMrzbFO/vv3LpfbbguC8O9uR8
st/Cq+18+lzo3H+2+LnFUuabcznrltx7eNDfj/347VWWTe/bJ+cG7cT9HRz9
S66scsLsLHpPL/L8btcDs0/OovejIj7jHlpwsi7nL64XONkfDBTrA456NeaK
/aP85P8gzD2isEf5X8VMaItTpTrDfs1Cdn9BPOHeRwc++tDlJSUL6P1yKA/3
3jbYB1v3+RAiCqT3j3Hu95P2vyRSL0bneOa9gJP/dzD32f5/6kI5Jw==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8V9Mbx7/f+73j2Ftk75mdlZHMBtmRUAmlvUiRSMjeZGdLIQ0kEUL2
XllZ2Vv8Cf/Pu8/j5fXq/J7ne+6555577jnP+DzPaa2ufQ/sk9VqteuLWq0h
uq3+tKrXakn0EF3YUeUg/T5UdCeVg8VPFr1f5VDx94pOiDY7Fb6+gmhn1R0d
bR4QnaLSQfxjojNUOoqfKNpG5RDxg0QHRv2xot2i/Wnq6wjRFUUPUDlc/IHU
0TbufUr0SZVO4v/UuIfqPS5Tm9mqe1rlKPoRXSn4dqJNVI4Uv2Sq1b7Ja7W9
RJdS+Vb83qJJ9Dz1k6mf4Wp7avR/suiQzGPamXHW/by1RbuqDBe/jugxPFP8
WqJdVE4V/4jaP5z5HaaJPqhyGPNW1mrnc110Z5ULxM8QvSZ3H3/rnXbR7wvF
P1r6O7RQWazu77ODyiLid9NYk+gXum8Xvqf4efC6voH4uup+0f1d1M8Woler
fiOVRXXtR/0+WvWbiY5T3YGq66Xf1+n+00VruedvXdWvpvKtSg+VLVVuUP31
Knep2QmiPeK9mKeTVFau+9sOYN7rnstTVFYRv7/GtILoz7m/5+EqS+h3i9Lz
P710f91V2qltG5VjxO9TeH0dpbKU2j+k35uJ30b0L83XKbp3gfq8Sb+P1/UN
Kj1DdLTKVF2bK3q6SqU280XPZZ2q/s9o00z1fwS/u+79qO5+RqvNRqLH1f3N
Zoi2VllL/ODC/Wyme4/XPW14V9ETVNqKz/Qul9fN76r27Svfu6rorbp3dY37
DfGTeRfxr4t+qetnqdzBOhC9gPUu/kLRL0UXV5s1c1+/X/xP0X4t1fXX7zPZ
j+K/EB2psrz4gao/W/za4hfwHiqzav6m1N8p/uNof7X49+ruZ4z4VoXXxu6i
S2m+p4nfR6WPxr2v6NJ6x5fV75tqu6fosMpj3lv0YrVvhhxh3yFDRPdU+UZt
96hb/jRRu2VFz1Y/U/WM7VT5gehiKh+p/n31WYl/XPz24hvq52bd21JlP/Fb
ZZZfucoBKkepXS/12U78Uurzr/jWe6iuBftH5VW1ubLu8e8n/iX1sb/4I8Uv
kbyHhou+rbr2Kqurnzdoy14Q/77at898ran6bab7rlX9SZXndi/Rp9TH06rf
UXQRjf8V8Ul0Ctfrfud2lfmVRUepXSe+id7/QvGHi/9G/K/qt6v4LUXPVH0b
8R+qfqT41uI/EN9H/KbiZ4k/Vfzu4t8WP6HwmJcT3VYlE/853yrea3nVjdOz
D0Seqf9eurax+Cd07/f6vb/4NUXPzt3mM9XfpvYHIOdUf4rqW4l/S/WHi19C
/APie4rfSPzj4rfO/K1Zt4cX/vYf6voBKvpZu0NtPhazvPjR6vMQ5kv8vao/
VPyi4ieK7yB+MfGTxDdXn7epz+/0+zDVLy46RfWTYm6XUH/fqqyDXlCfncT/
KP4jtT1YRZ+2NkHtb9a77CZ+WbXpp/qtxM9W/eaFZeRXqjtX5VjV/6z6C8R3
Fz9f/DC16cC7FdZFg9FN4g9SWUn3/ppb1yFvtyisB45TWV7XztO149TPLw3r
yU4qS9etJ3uqrFi3ruiisqz4/mq/tdo/q/bnI2vE/9qw/FuBe/R7nt7hU12b
qpe7qfK75KoboLptxD+n9sdqHH/zHVV3d+E9sozoyfrdQvWvqs0Q8TuKf6Vh
vXBXZr2Czt9fpRD/uNpMVJuNRXurbCL+SbU/SfwO4l8W/2zcOwT5oXoNpXaX
6o/I/a3vFH+f+OuQAfSncr34lUQfULlF/OqiD6rcKn4N0UdUxotfT3Q67yB+
XdF79b7jxHcurZeuFX+Q+Cm6Nlb8qrTJXb+i6ACNqbneo+C75L53HdF+hfVb
LjpVv29W/WqiN6iMxDYQPVnXVtYzNhZtW/j7/Ig9Ufgb/sAclLYRLhVf19h6
ILuYgMrrZzvx/5T+jtuWXleHif9ac3KT+FF8O9G/Sq+T5ryXfp8hvi66b+F1
9JP4g/KF3dbu1r235NZRizBnue2KRUW7qDQVP1ltOotfGd0hvqv4VcRPFf9w
6LUl1fdvhdfPddgI4ueL/4Q1q7IudovadxK/gvhx4o8Rv6r4B8UfKX5F8eNZ
b7n34HTxx4tfD/0pfp/S3+Ip0ec0l3vzLqwJtblEdEm+m8pZ4gu+Xej0pnwf
lQ3rttPQ6c3QI+Jvy20vLRa6D1tlVdVPVOkufhXRG3XtTLVpiN6lcqn4pfj+
KpeJX5r1pXIFMoH1pXK5+GVER6t0E/9Tw7pjAW3U59W5bYSStnqXy1Ru1QdZ
rfK++a60XkI/YW+9rOvjw966J+xobLnDwrZdnL2me6/R77tF16p8/X7183vD
e/1SPffRsJ2xr9aubBtOUpuNw2ZHfq0iWXClft+u66tX3rs/qE3beBZ216Sw
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
0Ifqc4J+75EZyx0a7ZvGvOFL7lDYltw53n3XiHfsEvEi1j1xh69zz9P2ReyD
+BaskdYxtxtkXjfwxLDgwfrA6trEnF9WGYd5qDS2Rz/4d7xXu5hz9iHtsd35
5kPiWeA74DwrJuuRhWtG83RAZgyNdYu/TAwMn/nE2LO8B+89NOaKa8RRmgSl
/eCaMSOwo+WT7x0cz8VWBBPPQn+hu8B4H88cixkc+pFvj46kbmDUX1oZG3mw
9BgnxDj3CrmBjEWXvkVdbv8YnAU/t0fw2E7Y6eAy2F7Y5tjK2Mn45d9Emx7B
46c/ped+mtl3wKabF33eprpSY79I77hI+LD4stSjn3uVtidZC/grI+NebMJP
MtsHtMHexN8eHc8l5oH9dnbwjIH2H2f2iY6P9jyPuMnNmXHCxyvbB0erzypz
nOaOmvufG+3L8LHx9bEPf6zbNwcP+DHa867YLc/UXP9lvO+1sY62iFjNrzHO
lNk+I4a1ZPj7LcNXo57f2N60Xzps8PkhM2eGD3hPZX+E74D/REwAe4v18WZQ
7C58mrejXfvgiRkwN/TzkOoXyazviB/hv6H38B0/zBwXvEb1H2XGYcFVqf8g
fnP9xmgzJ77JuuGzvvGv7K3bVqffoaXtu1mVn8U7YWOPjjbMyUmarzvV56Ki
kyq3576hoV/QScNjHWIbIc9frlvHgefMDhk1pfI+RcbfGPO6WmFsEv99dfRO
7m9I/A05/1TIwFGF9+vphX0EvifY4/zcMungws8gNg3WNDLac98Zhev/vZdv
TiyPPf1k7OsVQ8aNKOyPMDerF46lYY+i09Gf2C7oUNrgr+yQu4+nop9ZIcsP
LfyOzCdxzzyzrzgvZP6TIXtnsidCPtDHrOhn3Wg/t+Y4IPOJzUnbx6M9djD2
8Cei/TL3RT3xfXjiI2CYj4UMhPJ7UMg9YiHYi8RDZkQ9GCFxFLBvMEPi69T1
jnubxHXqscGg04PvHjwY4+KZx7ZUzX0/Fv13Cn2EXiL+Qsx+QM3xZ/BKsMqj
K8tC4pYPRRtwTGI7D8ez+sd3oa+p8V2wxWhHv+ClHSv7iKNK9/FQPItxTYyx
Ef95MOrBtA4W/Vx65JzKmOT9gceSe4GNulnE9O+ojLui5/7Vd/zGlns7Mx63
ds36DrwYrBjKb3Tfw7r/7Mz4/7aZ/SAwkUOiH/qcHrjcjaI3VO7zetHNwcJ0
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
6Q==
           "]], Polygon3DBox[CompressedData["
1:eJw1mwf8V9P/x++9n3NHUVEoJb9KSrLSUEqUQgjZI1RSmdkRMspKQnaRldEi
Rcome2ZmC9kjZc/+r2ev8388Oo/O6567Pve8z/v9er/e59tyyMi9j8+SJBlc
S5Kg/x8qk2SJDrRS/3r1zyqS5F31X9fgtVWSnC38nvAbwtcJnyv8ofDbwjcI
H6prZqdJ8o2ObaL++Rr/WP0lGp+i8Yd17D3dv4OO3aj+eRr/SP13ND5Z48/o
/2eEf9U5r+dJco7GPxB+S8ev1/gj8fqtdewW9Ydq/FH1H9P4pRp/TNfU0W/p
q3eYrP6japVwb+GH1B+m8x/X+U/o/Mt0/n+lr+8oPEl4uMafEH5SeKLwA7rm
WF3bUPd4U/1TNb5Y469q/BqN99H14zV+qsYuFz5S449p/HGNTxBOKj+vs/DV
6j+p85fq/Wfo2L3qX6bz11d/ju7fRuN36D4jdb9Gwq+p/6/OeUTjW+v6KzWe
Vn6/LvH5q0o/r5PwVcITdb+mwnN1fVvhhTo+X/gXPfNt3W+cxpcKv6fjN2n8
FuFuwq/p/C7CB+mc83Tu+WoHc77a8+o31zsdqP5CnfeDzv9c7X3d4x89f6H6
W6p/ha6/XffrgX3ovG7CtwpvK7xYeBvhy4WbCd8vvInwFcIbCM8Xbic8X/d7
Uc9bV22s+rdpvDv2p/Gu/HYd+1hjk3WsVH+sxj9R/109/0aND9KxOXrX73Ws
nfqn6J2n6fznhJ/VOVsIbyy8UvhTbE3XX6t+Q/X31fVPC18jvLbwPjxP56+t
Zx+te96m/om653D126vVUf/J3LaBjdyu/rlqT+n+i9TWU3+mzpms/mDmQPce
Kby5zt1ErVC/hVql/tV63t163izhQTp3pK6dJ7xI11wtvJbG9xZ+QXiqcBPh
A4RfFL5NeAPhA4W303X99Lw5fEP1d1AboP6+ajuqvyf2rP5Itb3Vf1nXT9P1
G+r6g3X9K8J3CP9P+BDhe3TOJYl/8738Vr3ftupXfFeNryP8lcY/1Pl3CD+v
628Sbiy8v/AcnXe98Ahdc5/6z2n8RuH1NL6fxhvr2BCNtVL7V8dmaHxvjS/T
N91B46fo/is1dreOHcZa0fn1NVaqXaX+0xpfpt/yPDav/kyds4/6X2i8F+8v
PET4J+E+ld+hvfqb1vxuGzMHuv8NevZ03l/4y8xzwtzwm9thqzV/i5d0v9t1
v+Y6/yCd31P4HOHJwnti77l/a4kPVf9OtRYabyC8ifp3q22JfQm3U7+JnpGr
30L9e3X9bN3vYI1/r+ftiD0IHyT8HT6M9YE9CtfXNW3VP0FtqvrTdeyeYBvF
Visd2yi3TWKbdYRb8zy1I4Q3UlsV/L7NdO+11Jphu3reVbyvxgboect1fC+d
m6ldqGMFNqLxHaK/rtReE+4d11+u9rLw9jEe1LBZ4R4xXpRqrwr3ivHgLj2v
n/BHes52wqfrHabrXY/VsStYExrfVf2PNd6TeKPvtb7Gr9LYHOGg9pLGe8b4
kFW2he4xXtWp7K93jP5uvO63rvDdut9GwofofrNS2zC23ErnXSTcIfX3vETv
s5i1Itxb/Ut1/Xo6d4aub63rJwg3Fp4lvLHwFsHxoDPxRv1tiTPqd0vtfx7U
M16N8a+ma6er7ab+J7p+e13fXs/oof5manPVP6Xw930lxg9saFuNtajZthbo
fm9l9mkXlZ7zjhrboGZbwAa3rnmOmetFOuezzD77PvWb6/576N1ma+wu3b+B
8O7CM7Fd5lrntNG1s+I4/u+z1Gu6bek1OFr9oanX5mmcp/u/g8/XOz+p+03C
XtXfq7INdtL9mtdsmyep3arzFyT+XqyJ7hprVfNa2Vytp/obqk1TfzO17dTf
Qu3+3GugG7Gl5rXxhJ53ue61RlyPC/WOb+v+jXTsGmIDMSWul8N17pvC69TM
FVh/+OcP8Qcar6t+Sx3voPF11aaof3Jh+305xtt+/AbhI3TPXYkPhe3/xRiv
39R132vsL3yuju0kvEdmPtJF/WfVvhP+U22oxpcSX9X/W210MB/4X83fgG8R
1G7OvOZZ++sGx0KOnchcE8N0bns4lHCh8RUaW6V2vfrD4Snq76nxz3iW2o/C
/6hdEDyf+NafeAf9P0O4dfwNb0Y7aBPfcen/x+yaY/o3uTkMXKaJ8JfCTYX3
gi/o2Onqv41fF56k60fk5ihwFTjQV/ir0mOcs3ZhjgBXgNN8je8mpuvb3a/2
QeEYR6zbRa0H4zr/g2B+cr7O3VR4Qc0c41vsR8dO1bXz1T7U9Ztr/FHWssZ/
zM33tqzZxrC1edhgzWuStfknMYN4qGd01rUPCnet2QaxxelqG9Vsw9jyXWot
a16zrF38/Gp/r3scrHs0UlsJAWe9qv9H7ncZpn4n3f937id8pHDHynPKbzki
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
9A==
           "]], Polygon3DBox[CompressedData["
1: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

           "]]},
         Annotation[#, "Charting`Private`Tag$121212#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNVm1olmUUfp7n5n2eaElm5a9yFOQPqTUyxIZzNJlSaZkfUzMt7VtJxZG1
sjJLW/mx1tRNWyY4tA+oX2Fhgpm50lWwjWyjrVzbMCc2KrEhsa7L6wqF93Cd
57z3x7nPuc657xsWL5+xLImiqB8SIGvjKOqB1EG/HH/sho7fBeT3SejjoQ9C
DkPflouitzDxp5zW4Lhu4Nwsij6APgeYD3wf0htp3gbPvRv/VUO/CzgNa3wI
/V7gxFhz+zAm9dwl1vfSP+j/AMdBSjG3w2O4z43w8SNgK8aUWu+zP9y3DDgA
rIJ86jF3Qorx/Tj+G4StN42iepxnJnxpyem857zf7KC9y4F1+G8+8EdgCdZ4
CPZRkHrIGkgR1vsYWEHfsO5MfA8HnsD4MoxvdKwO43sO1tkMPAK5B/p24NeQ
+6BXA2/G2E7IGK9NvSoS/mb9qkxnOuccnnIel2CNLuhLg/6rctwW4bsB+mJg
v+cUQLZiv3rYfs5pry7vuxO2SfD7PWCG7z3OxchEeWGOyjPZZwPvx7hd0GcA
50F2Qn/ASB9ug3yFPbbAtimnXMWJcrcZthp8VwfxpA7YCbwD8jLs64GXZfJr
ArAv1hno/+eQVdSxThdy+RfwFoz5AfJ0UH7Iw/HOaaF5Tm4zh8xlJfRJ0Ccn
yhnX5h6FkIFI9lPALfB7F9b8FfhmpjkjMwn1WZlixnx3e94UzyUPb3ccTue0
7sJMPDwI21PA9lS+FKXK2ThzkWf/BbiCNsgQxrTgux0y2jwc5r3ox26fkz6Q
l//ztNzxZFyfxTluxZjngHmJxjMmzMtE19HwRPEtMJ8bfUaOKXUdke+fxYp7
JfAQfYb+dpC9Frg/p7orYtzw/SX7QlAdp+4V3anmFWD9fbAdcB2djfTN9Znn
g/ZnRKK9iiPFjvYTqeLBnI5yHD6J1dM6UuVhDMaWZMpDHvAQfGqALxvtI8/F
s3PtSq/f7jpk3bXFiuF86M3A1ZCpkfiyjnUSKVdrXY/cl32BuWas9vlc5Cpj
+wjsKzNx48pMtZW51lhPG8xb+k3/2T+Z58nJRc6SS+RtjWPO2G8P4sQO4BuO
OWM/1b2XPbjMfXIecJZ7HXveg5A/oC8Iih/j2O88VMQXa4w4DfhMkL+rgniU
Z+5tcr1/m1Pc4ljc7XH9Fro3sT9wb9ZIfqJYHHCszjq21ycaPzqn9b8ANplv
g+YN+UMOLA/K/4ogrvKeIKdXBnGtArgeUgvb68CtzuN5/Hc8Vm3RV+aC/Y75
qDE/9rv/N7hvbDR/vgcuhQ//wnY6VX9nn2/22a9JtGad+TNk/nD8edczfWB9
d5pv7Hfvug+zH/+Zinfst7XmJ8/c6PxciLl7KXvqGp/tFWLQ/bstiBPkxjtB
3L4uUd3sdT2yt6/OFHvyk35encjXsZn8PZkq9qxDxn+BObMwiJ/D3PeucK2x
5ji+yT6zXo+4ll/FnGPQXwvap9k19Xuqvca6NzJ3+ZlyTw7clFMMjrpOGcPj
nstc0E4/O6C/iLVb8X0G8rfrlDks8dl5rzLuvHvJR/Zd3q+sj0HX4LWZ3jJ8
5zxKLsH2WNA9Rp4Vex7vGt7P7AfkLu+p73zP8r4ll/vsA/PNvLc6/83mIftH
r+d+43cX31/smR3OEXNHnrPHM4ft7lE97j8F5l2b+1WVa4z5YM9hLPLs5xn7
U+13SBNwuu903u1zfZfzbn/Yb4lFvl+XBd23U1LFj/fU80FcfwH4BDkH/cmg
+h5wbPlm6XEfmOD7fXqmOmlxjTAuLwXlkHXTdol96JL4tTjvR/1O43uNPq5z
HBgj1hRjdMzvPb77/gNL+X5c
          "]], Polygon3DBox[CompressedData["
1:eJwtlF1ojmEYx+9nt/d9VlN2wqG3HXCwbAonlllamk2TfIs2bWxmbLMxxhhj
8zFCPoYoXykOnIuDKVEj+UpRpi2vhjXykSTx+3fdB/+e//XcH9f/uu7runKq
Ghc1ZDjnVoEx4Gns3EHv3C/4UNK5waTxh5FzdawNJpz7jH0NezF2PmiF34ts
/0zs96xfx14GT/PvAbwP1GBPB23wR+Aja0XYXfAvYCz8BPfPw38JOA4v17/I
fOTB54IP3H8DewV8eWx8NhgPXxqb7xh8C/r7wnlpbQJT4LkgE74QnId3glnw
nfjthf/DR3vQUIg9J8O0jWPPD+xR0BzbHu19gb0Lvt9bbIqxy1uMsvfBn7G/
x1uupOeIt5zJPuQt99V887HTYC28HgzA94CN8Dpv2vVvA/wtZ87wPYZdBp+M
xsvYl8CphMWk2N6FeJv4PxFeCTbDX/JvO9+pxNcNfwXWe8uJclMNfhLfdzCA
1hbW0vAk61u8vZnebjX8ObwCfGX9E3iTtBgVq97wKHy3t1y1gw74JDRm4XtY
91OA67zFLs01IYYhZ3sUW6u3+pLebfAKb/5VQ5XeYuhQ/kNsujMJvxp86U7d
rfhqveVUuT0LNnl7M73dSdANP8wdxfi6CH8cW8yKXRq2wlOx5aMZ/iQ2v/Kv
GtrhTZO0XQBrvMWs2E/rTb31lHrrt7P+mKAazzCf8i3N0n4F3IUXgDJ4KbiT
sHzf4nyK8yMJ+6c19ZDqNS/05+3I3m8l9s3Ieki9JP2qhTbs10nrH82CjtC/
S2LrdWmStlzQEplPvW8BSEWWA53PYn0a9ozQHw3ecquaa/SmX70k/+cS9l56
S+VTs0MxKlbVsN5bOVWdSqO0DuPjD3v/gnrsvd5yqX+d3ubBfXhPmA85mfSG
t/orD/2vXuhlT0nQOxrqpyjEWwzPdjbfUpxf4C1nyt0IZwpZ64/M/wFvtaIZ
qbkpff2h/zXr1PPSJX2aBaWx9apyqFwqB/O9valyU+WtVjQDNAvUf3q7bHLU
HuaV+l9zQL36Hx7ewZM=
          "]], Polygon3DBox[CompressedData["
1:eJwlkLsOgUEQRofNHwoKTyBeQeEFtCTyRwSlB6DwEuIacY8EtSdQu98LhShF
odBqlM5ki5Odb+abnZ2NFEpu0SsiIXDg5hM5Egwg6hEJoIfEMeIfpI3ICd2D
D/4gzSNyF/QVxsbm4njr6BbUiGeQorZBP2FKHMf34o4u+gAdcgt8ZWigz5Ax
dm4FmugRvOmZoxPUto7Na30CWXJrdJJ3f/H1iR8Q8YvcOfPG+nQ33VHn6LwW
9KitHNujvfqWNrk9Oueze+g+Owhz343TNXY3/R/9pzO+pWN31z+oov/SszOO

          "]], Polygon3DBox[{{1865, 234, 1429, 1500, 919, 1866}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0k1Mz3EcB/Dv30OZi2cn7b86OFlzcLA2XfMQKc8iqZBQnolSykNIEkpE
yebq5OiShCTEsCZjzWY4tMahg63Xb3N49f68P99vv/1+reSCspzSWAjhMVMn
hBDND/34Jb9NDmG6HOG3OR7dc/ZXViQ6cz/V3GP3PSGEMfNMuyXRff2fnKVn
yo/uxJit5+qjzhP1uXqJPmiOk2ZfrrfZz9fnyTp92LyADOct+k/zQpKcP9D/
mKd5p0XRc+we2c3QF+vd5jnmdHOKs3d6LHpPvdF3ZUwMYSnLWM4Keuwz5UpW
EZ8SwjO7LPNTuVpmk8OAvka+lGvlOtbTp2+Q3XKj3MRmPui5slcOeK8t5q3k
sY18tlNAIUXsYCe7KI6e4fd2yxL2sJd9vLYvlWXs5wD9dgflIQ5zhKMc4zjv
nZfLE5ykgkoG7U/JKqo5TQ1v7WvlGc5yjvPU8cbZBXmRS9RzmQaukOzv+Ml3
N5qfy6uyiWu80K/LJ/KGbGbI81rkZ7ub8pVslbe4HX2b3ia7ZJ+7d8x3aeer
XYe8Ryf3SeDLpBB+/P9/HwfC62Lu
       "]], Line3DBox[CompressedData["
1:eJwl09lvTGEYB+Cvs+gy1dqXtqrVsZVBUYqipQtqSXop6Y07LrjkXkTiD+Af
ICIiIoi4sMUdEVpqOp0uXFpq3/fnaNJfnvd9v++cM3P6Te2+Q90HC0IIz6Uh
FoK/cDoeQqN0yBopkhvJELayTb7aNK8ohFGzF+oRrjVfJ00yrC/mTU7j48IQ
VvCbvXmzlxxkjdl6qZWcvoS3eM/+6eoG+W7vq+h56g1SJ0PWU5whP6y9lrR6
vuStlXKm/DQfkwXqB+YLOVFmyS/zN5Izb9G3ymb5bfZWkuo/HLD+joX6Mpkt
WbO/Zu9lkX6xlMt98woG+WCtnktkklTKSimQj9aWslkyUuNdZn3vyerbrOIq
iUm//pP9T7hMv1GWR+9UP4V3OIerJS69+s/2P2K/z1NttknmykOzqdwi7ZKQ
L9G9feQM2xKuUbfzKTuYZScHuI05bucgdzDPLg5xJ4e5iyPczVHu4TOmPL/V
YUvHxs9bnC36Oh6bEEKfWXQYD6vvqg/wCnt4ht08GX0uHmfC90vbX+n6I9Hz
2aNvsr5fX8+9rGIXy9jMAmZY4fpO+6vVp9RHozOhLmU5L1kb4/Xof89r0fnh
VZbyMlPRPpbwIot5IfrN8DzdNpyjR4az9ApCn/t7JeGEpjf2/7iExuT47+8f
tMhlew==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1537, 1699, 2105, 1536, 1698, 2104, 1535, 1697, 2103, 1534, 
       1696, 2102, 1533, 2155, 2018, 1532, 2154, 2017, 1531, 2153, 2016, 1530,
        1695, 2101, 1529, 1694, 2100, 1528, 1693, 2099, 1527, 1692, 1979, 
       1948, 1949, 1950, 2210, 2073, 1841, 1760, 1893, 1820, 1871, 2209, 1870,
        1839, 1759, 1892, 1819, 2077, 2208, 1994}], 
      Line3DBox[{1550, 1705, 2111, 1549, 1704, 2110, 1548, 1703, 2109, 1547, 
       2159, 2022, 1546, 2158, 2021, 1545, 2157, 2020, 1544, 2156, 2019, 1543,
        1702, 2108, 1542, 1701, 2107, 1541, 1700, 2106, 1540, 1952, 1980, 
       1951, 1981, 1539, 1975, 2230, 1767, 1842, 1766, 1898, 1538, 1896, 2219,
        1764, 1840, 1763, 1895, 1917, 2078, 2233, 2012}], 
      Line3DBox[{1564, 1709, 2115, 1563, 1708, 2114, 1562, 2166, 2028, 1561, 
       2165, 2027, 1560, 2164, 2026, 1559, 2163, 2025, 1558, 2162, 2024, 1557,
        1707, 2113, 1556, 1706, 2112, 1555, 2161, 2023, 1554, 1954, 1982, 
       1953, 1983, 1553, 1955, 2060, 2160, 1845, 1773, 1902, 1552, 1901, 2220,
        1771, 1844, 1770, 1900, 1551, 2214, 1993, 2011}], 
      Line3DBox[{1578, 1711, 2117, 1577, 1165, 1576, 2173, 2033, 1575, 2172, 
       2032, 1574, 2171, 2031, 1573, 2170, 2030, 1572, 2169, 2029, 1571, 1710,
        2116, 1570, 1962, 1389, 1569, 1957, 2168, 2074, 1568, 1775, 1956, 660,
        1567, 568, 2167, 1848, 472, 1566, 470, 1847, 469, 1565, 2215, 1997}], 
      Line3DBox[{1592, 1793, 2180, 2070, 1591, 1792, 2179, 2068, 1590, 1791, 
       2178, 2066, 1589, 1789, 2177, 1788, 1588, 2065, 2176, 1786, 1587, 2064,
        2175, 1784, 1586, 1264, 1782, 1585, 1781, 1262, 1584, 1780, 1963, 
       1965, 2227, 1964, 1583, 1960, 1961, 1958, 2075, 2226, 1959, 1582, 1777,
        1822, 1776, 1581, 2061, 2174, 1821, 1774, 1580, 1973, 2229, 1974, 
       1923, 1918, 1579, 1464, 2009}], 
      Line3DBox[{120, 639, 350, 713, 1413, 119, 638, 348, 710, 118, 633, 347, 
       1302, 707, 117, 628, 346, 704, 116, 623, 1362, 345, 701, 115, 618, 344,
        698, 114, 1018, 613, 343, 695, 113, 608, 342, 692, 1406, 112, 603, 
       341, 689, 111, 598, 340, 1301, 688, 110, 597, 339, 687, 109, 596, 1347,
        338, 108, 1017, 107, 1016, 751}], 
      Line3DBox[{1606, 1733, 2132, 1605, 1732, 2131, 1604, 1731, 2130, 1603, 
       1730, 2129, 1602, 1729, 2128, 1601, 1180, 1600, 2181, 2034, 1599, 1728,
        2127, 1598, 1727, 1280, 1597, 1726, 2126, 2072, 1596, 1725, 1830, 
       1795, 1595, 1724, 2217, 1829, 1794, 1797, 409, 1851, 475, 1828, 2232, 
       2007}], Line3DBox[{1618, 1741, 2139, 1617, 1740, 2138, 1616, 1739, 
       2137, 1615, 1738, 2136, 1614, 1192, 1613, 2183, 2036, 1612, 2182, 2035,
        1611, 1737, 2135, 1610, 1736, 2134, 1609, 1735, 2133, 1608, 1734, 
       1984, 1799, 1924, 1925, 1330, 1854, 1798, 1903, 1802, 1874, 2211, 1873,
        1853, 1801, 1905, 1831, 1440, 1995}], 
      Line3DBox[{1629, 1747, 2145, 1628, 1746, 2144, 1627, 1745, 2143, 1626, 
       1205, 1625, 2186, 2039, 1624, 2185, 2038, 1623, 2184, 2037, 1622, 1744,
        2142, 1621, 1743, 2141, 1620, 1742, 2140, 1619, 669, 670, 1392, 305, 
       361, 1308, 303, 360, 1307, 784}], 
      Line3DBox[{1642, 1751, 2149, 1641, 1750, 2148, 1640, 1218, 1639, 2190, 
       2043, 1638, 2189, 2042, 1637, 2188, 2041, 1636, 2187, 2040, 1635, 1749,
        2147, 1634, 1748, 2146, 1633, 1211, 1632, 1967, 1985, 1966, 1986, 
       1631, 1968, 1285, 1857, 1808, 1909, 1630, 1908, 2221, 1806, 1856, 1805,
        1907, 1921, 1459, 2080}], 
      Line3DBox[{1655, 1811, 1810, 2212, 1654, 1231, 1653, 2197, 2049, 1652, 
       2196, 2048, 1651, 2195, 2047, 1650, 2194, 2046, 1649, 2193, 2045, 1648,
        1752, 2150, 1647, 1224, 1646, 2192, 2044, 1645, 1969, 1987, 739, 1644,
        677, 2191, 1860, 509, 1643, 507, 1859, 506, 544, 1324, 829}], 
      Line3DBox[{1669, 1882, 1883, 1812, 2213, 2059, 1668, 2205, 2057, 1667, 
       2204, 2056, 1666, 2203, 2055, 1665, 2202, 2054, 1664, 2201, 2053, 1663,
        2200, 2052, 1662, 1235, 1661, 2199, 2051, 1660, 2198, 2050, 1659, 
       1970, 1988, 1990, 1989, 1658, 1971, 2228, 2076, 1863, 1915, 1914, 1657,
        1912, 2222, 1913, 1862, 1911, 1910, 1656, 1444, 2005}], 
      Line3DBox[{1796, 1723, 2125, 2071, 1940, 1722, 2124, 2069, 1939, 1721, 
       2123, 2067, 1938, 1720, 2122, 1790, 1937, 1719, 2121, 1787, 1936, 1718,
        2120, 1785, 1935, 1173, 1783, 1934, 1717, 1263, 1933, 1716, 1827, 
       2119, 2063, 1929, 1715, 1826, 2118, 2062, 1928, 1714, 1825, 1779, 1932,
        1713, 2216, 1824, 1992, 1991, 1972, 1712, 2224, 1920, 1919, 1593, 
       1170, 2008}], 
      Line3DBox[{1818, 1691, 1757, 2207, 1526, 1690, 2098, 1525, 1689, 2097, 
       1524, 1688, 2096, 1523, 1687, 2095, 1522, 2152, 2015, 1521, 2151, 2014,
        1520, 1686, 2094, 1519, 1685, 2093, 1518, 1684, 2092, 1517, 1683, 
       1978, 1944, 1945, 1947, 1946, 2225, 1836, 1756, 1890, 1817, 1868, 2206,
        1867, 1835, 1755, 1889, 1816, 2223, 2003}], 
      Line3DBox[{1943, 1682, 1976, 1927, 1922, 2091, 2058, 1515, 1681, 2090, 
       1514, 1680, 2089, 1513, 1679, 2088, 1512, 1678, 2087, 1511, 1677, 2086,
        1510, 1108, 1509, 1676, 2085, 1508, 1675, 2084, 1507, 1674, 2083, 
       1506, 1673, 1977, 1941, 1942, 1672, 1371, 1833, 1888, 1887, 1815, 1671,
        2218, 1864, 1832, 1885, 1884, 1931, 1670, 2231, 2082}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{722, 640, 1977, 725, 644, 1978, 727, 647, 1979, 729, 1980, 
       650, 731, 1982, 653, 659, 1956, 260, 337, 1822, 261, 339, 265, 1825, 
       353, 289, 1830, 358, 297, 1984, 734, 669, 736, 1985, 672, 738, 1987, 
       675, 740, 1988, 678, 1094}], 
      Line3DBox[{935, 1105, 2083, 936, 1115, 2092, 956, 1125, 2099, 969, 1136,
        2106, 982, 2161, 1147, 995, 2168, 1385, 1386, 1387, 2226, 1388, 1257, 
       1327, 1258, 1340, 1301, 1341, 1259, 1336, 1260, 2118, 1303, 1277, 1278,
        2126, 1033, 1187, 2133, 1046, 1199, 2140, 1059, 1211, 1071, 2192, 
       1223, 1083, 2198, 1233, 1095}], 
      Line3DBox[{937, 1106, 2084, 938, 1116, 2093, 957, 1126, 2100, 970, 1137,
        2107, 983, 1148, 2112, 996, 1389, 1390, 1391, 2227, 667, 1328, 586, 
       689, 587, 1337, 1261, 2119, 1304, 1279, 1280, 1034, 1188, 2134, 1047, 
       1200, 2141, 1060, 1212, 2146, 1072, 1224, 1084, 2199, 1234, 1096}], 
      Line3DBox[{939, 1107, 2085, 940, 1117, 2094, 958, 1127, 2101, 971, 1138,
        2108, 984, 1149, 2113, 997, 1159, 2116, 1008, 1262, 1348, 1403, 1402, 
       1406, 1404, 1405, 1349, 1263, 1022, 1178, 2127, 1035, 1189, 2135, 1048,
        1201, 2142, 1061, 1213, 2147, 1073, 1225, 2150, 1085, 1235, 1097}], 
      Line3DBox[{8, 1509, 23, 1520, 38, 1530, 53, 1543, 68, 1557, 83, 1571, 
       98, 1585, 604, 113, 606, 1934, 128, 1599, 143, 1611, 158, 1622, 173, 
       1635, 188, 1648, 203, 1662, 218}], 
      Line3DBox[{941, 1108, 942, 2151, 1118, 959, 2153, 1128, 972, 2156, 1139,
        985, 2162, 1150, 998, 2169, 1160, 1009, 1264, 1350, 1351, 1169, 1018, 
       1353, 1354, 1352, 1173, 1023, 2181, 1179, 1036, 2182, 1190, 1049, 2184,
        1202, 1062, 2187, 1214, 1074, 2193, 1226, 1086, 2200, 1236, 1098}], 
      Line3DBox[{943, 1109, 2086, 944, 2152, 1119, 960, 2154, 1129, 973, 2157,
        1140, 986, 2163, 1151, 999, 2170, 1161, 1010, 2175, 1265, 1355, 615, 
       618, 617, 1356, 1174, 2120, 1024, 1180, 1037, 2183, 1191, 1050, 2185, 
       1203, 1063, 2188, 1215, 1075, 2194, 1227, 1087, 2201, 1237, 1099}], 
      Line3DBox[{945, 1110, 2087, 946, 1120, 2095, 961, 2155, 1130, 974, 2158,
        1141, 987, 2164, 1152, 1000, 2171, 1162, 1011, 2176, 1266, 1357, 1358,
        1359, 1362, 1361, 1267, 1360, 1175, 2121, 1025, 1181, 2128, 1038, 
       1192, 1051, 2186, 1204, 1064, 2189, 1216, 1076, 2195, 1228, 1088, 2202,
        1238, 1100}], 
      Line3DBox[{947, 1111, 2088, 948, 1121, 2096, 962, 1131, 2102, 975, 2159,
        1142, 988, 2165, 1153, 1001, 2172, 1163, 1012, 2177, 278, 346, 279, 
       2122, 1026, 1182, 2129, 1039, 1193, 2136, 1052, 1205, 1065, 2190, 1217,
        1077, 2196, 1229, 1089, 2203, 1239, 1101}], 
      Line3DBox[{949, 1112, 2089, 950, 1122, 2097, 963, 1132, 2103, 976, 1143,
        2109, 989, 2166, 1154, 1002, 2173, 1164, 1013, 2178, 1268, 1363, 1269,
        1407, 1302, 1408, 1270, 1364, 1271, 2123, 1027, 1183, 2130, 1040, 
       1194, 2137, 1053, 1206, 2143, 1066, 1218, 1078, 2197, 1230, 1090, 2204,
        1240, 1102}], 
      Line3DBox[{951, 1113, 2090, 952, 1123, 2098, 964, 1133, 2104, 977, 1144,
        2110, 990, 1155, 2114, 1003, 1165, 1014, 2179, 1272, 1365, 708, 710, 
       709, 1366, 1273, 2124, 1028, 1184, 2131, 1041, 1195, 2138, 1054, 1207, 
       2144, 1067, 1219, 2148, 1079, 1231, 1091, 2205, 1241, 1103}], 
      Line3DBox[{953, 1242, 1243, 2091, 1326, 1249, 2207, 1250, 965, 1134, 
       2105, 978, 1145, 2111, 991, 1156, 2115, 1004, 1166, 2117, 1015, 2180, 
       1274, 1367, 1410, 1409, 1413, 1411, 1412, 1368, 1275, 2125, 1029, 1185,
        2132, 1042, 1196, 2139, 1055, 1208, 2145, 1068, 1220, 2149, 1080, 
       1287, 2212, 1288, 1289, 2213, 1244, 1245, 1291}], 
      Line3DBox[{1092, 656, 1311, 512, 2222, 1081, 417, 1310, 507, 1069, 415, 
       1309, 2221, 498, 1057, 413, 1308, 488, 1044, 411, 2211, 1283, 481, 
       1031, 409, 1281, 574, 1020, 2224, 1171, 1401, 1322, 1017, 1168, 1400, 
       714, 2229, 1006, 591, 1300, 470, 993, 406, 1298, 2220, 462, 980, 404, 
       1296, 2219, 452, 967, 402, 2209, 1294, 443, 954, 400, 2206, 1293, 435, 
       933, 2218, 398, 1292, 563, 1333}], Line3DBox[CompressedData["
1:eJwVzrsugwEYxvEXrTR2F6AXIEFCYtAibkBiQJ3qUFNpHboZW4ehi8VqEJYm
TcSguxgtZo3z5gYq8TP883/e5/m+L99Afme22BURc5hJRDzhMBnRhwpuUxHj
ugfsu3tR1x3woO4eZTmJPaTdDezKCZTQ7x7hYQyhGyndje9ccAe/PRHX7nN5
0v7NJzyFaWSRwQS+bEee/fFOVR7VfXJFNya/6gu8hU18/P+PbVt+tm3wOvK4
07/bj+VH2xqv4lK/wm+2Grdsy9zUL3EObVuVr2yLvIB5vOjP+BR/UJEsqw==

       "]], Line3DBox[{1469, 1466, 1339, 1104, 2231, 1503}], 
      Line3DBox[{1470, 1434, 2223, 1312, 1114, 1499}], 
      Line3DBox[{1472, 1442, 1315, 1209, 1493}], 
      Line3DBox[{1473, 1443, 1316, 1221, 1489}], 
      Line3DBox[{1487, 1445, 1325, 1444, 1488}], 
      Line3DBox[{1491, 1461, 1324, 1460, 1492}], 
      Line3DBox[{1495, 1459, 1323, 1458, 1056, 1197, 1314, 1441, 1307, 1457, 
       1456, 1043, 1186, 1440, 1306, 1455, 1454, 1030, 1176, 2232, 1439, 1305,
        1427, 1019, 1170, 1426, 1016, 1167, 1332, 1465, 1464, 1005, 1157, 
       1438, 1299, 1453, 2215, 1452, 992, 1146, 1437, 1297, 1451, 2214, 1450, 
       979, 1135, 1436, 1295, 2233, 1449, 1321, 1448, 966, 1124, 1313, 1435, 
       2208, 1471}], Line3DBox[{1497, 1447, 1320, 1446, 1498}], 
      Line3DBox[{1501, 1463, 1319, 1462, 1502}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvHlUT+33Pp4yJSKigUIllUQiQ2pHQkIhRZIimhRSNKABaRAlaVbSSPM8
70bNGjXPg+bXQYkkfud+/u9Z6/muz++/d3/utdd97rP3ta997X1eq42Xb5y+
yszExJSxmImJhWmuvy9QpRt5mvPjEIrGmF/4uaYfLY90za/hSoSBvA21QWHN
qPOoW3Sd5jhenD3rc4k1EwSlVe+bqJejhhpXpt1GCtcnrCuz3ZQFwiwXljuN
IT6gYtqUPChkvsadBruywHy33NYY3hSMPpizZmkKhU8yfYr2XciCkG2eGaLB
MShbUvD5Tj6FFYfy3W/1ZEGL7OMlOffCUHK2//zvIgpbD9+XaMjMhogdkRIJ
Va/x4qWS0wPFFJqq71my1SwH7BhlewwPvMTDmc2XlpRRuF/8kMSEWA5MsXjt
5T/giKa6m8yLayi0OFvWMHoyCx68fqV2qNkcZS/l1rxpobCdfyAnODUd9uYm
W0X7WaDKFeZFvm0UKnCaXIrmSAdTj6Lp23x+WOV9ternOwr5M1O9xHkL4OeZ
sVjxvnh8N81ywTyMAt9J9i8b/ubBXHFWYhd1d9wzglKdhhp123pxdf72mmi+
JPgif/SLrWkbin6/JHYsbgzvhBwM/T2cDYdnhA9SlZW4hatfofk7A7/Ocnhy
Pc6BR7s+Osvm5OFOJsbGhU8ovKK2KIJfORusNtcrFo0n47766+d50yj0fCmw
RLo/E36WLtDnsX6P5g7ZfbHlFJa/OLb1bnoGrP5OLe/0D8FzrjoGA/V0HA5w
SfQ1pcM2tvMVPa6+yBgb2vCtmcIUk8rjSwTTwceVtbNPywNXxj9kD2+n8Kml
8xqzC2nAUfty09lgR+TwPNNn2E3n16JjIPtIKnicPvyi8pc1Rqb9fi7fT6Er
Z9TE5t/JIDQv4qZpmBE2ZZXNmn6mcEuv5DU5yWQwYI5V2MV6GCMDBEV0eijM
eL9c6zBfKsy2/ZbbtP4KZDv18fo8pHCZddus1Z4Pc8a5ecm5+nVvRtEq8UvQ
6/4u3IDdjcnrk2FbuDbH4tZO3G1xJEk4dxR5YRP1fHseOJ08/sC7txoVvg/f
4cxk4LpVslM2InmwMu9okkhlPkofGs68Y0Uh25jAskqLHGi6HbbaUy4Fj7LA
jzI6zl36qk2rb2aCUlF13Xe/d+i0z1FiZy2FW08Nus90pMEB+zdez+Tf4G/r
17paHRQKUisa8rtT4PAIz9rtf16ht7FmZmEfhWHCWwJ8biWD1sSa9nPaz3H+
aLLmyUEK4zYpfo60TIJG91TNffmPsfFS/ZsrwxSu/DB+v6w6EVbB5sQDT+5j
5N0Qtd8jdDw5YlBZJhGq9vxhFj5wE8O9Q5fOH6fQuKnqtPWVBCh5vc9wYtVO
EDK7flXiC4UCutvtb1bFwaiE0oodayyh6H2votIkheK2Muxnd76fM87rthw3
5/gxhmcfvAj0i2/FNdl5V3Q5UqDZ8ds+pSc9GNn4NIZXdwT7bZnNY44UwBWH
Y6zYU4sBNs/R+xoDy5JePi+oy4fJfMn+wi2FuN1ua3m2PoW7g7/myaTlQvru
F7rFC1Px4bOBJ/x0nCscJ73T/2RAw5fLKzjz3+GlpMnJ7E8UqsvlZDocTIXP
TyzuxzGCUXqFywE/Op7im4/El7kkQavDSJzUyleYN89xjQkdn6res88vZibA
79JF0ysN3NBhoXR3Oh2fbo8eh8UJ8SCqc2dsQugRjoyrhy6iKHRX8Yn1ORwP
Gq0Cmzfn3MdEPW9mZ9rO6hXb/YYvHqLbMrfvOG6N1N6h+fJfKdR1X/ah0CkW
BDfeWS0lcw8NtuY/FJ+isH+ipnOqNhJeP/RMu6ZijRZRdX+rZyiUiJy9NrI4
eM44L51/udGdj4HDzk/elVMN6Of+hqm2IwWGTJ5zJ2r3Y8o080GVdUMobHu5
hcFRDF+79fO85D/hy/TzllbZ42hgbrJAPqMIOMcX5EuJf0DzitrX/vsovPRw
qW7iTB7ULxzV1HdLx9M3dWJYYigs1ay8n12ZCXd/F1XuiorGYTZbRakmCi0N
Wu7s4UuB+PD2eu5zbzDSth08aRx6v5blv1AfD/OTC5aIa3rhhxpfySffKJwv
NL17t8Z7ECoUC3Na44Jn8jfFbflB84Ox3VJoDYdUkXkq2aceYN136cPu0xSi
6pPLl6i3wNts4TR/wARLqmV87X9RKKaldux5RAik302J5I05hIuYa8OKaH+J
F19iRqbeApuPblPjgBFYxZz2PUnHX1G1XeCrXyxcLD+/0yjoJUzdYNYpNqXg
77XPqjvbSuaMc+WVO/Wvl1HY9PPZSc3SSuT5I/f968NUULpitsDDZwjfxxWM
e1v2YejKHTVPFcvAo2fzIb5bHVh2t7rxuuMovinQWau5vZLGf1b+tHwN+sQH
Hgq6SOdt2R6BB99L4JZMldgvjwJkMz+24sFJCo9f9dlwcKgAen29tOzPpGLa
gIBfAN1fJCQdpUTUc+D+lkKBoZ/v8Z5pYrsazc9aChHePjmpMJX+0//Ztzdo
vkty7CzND68ZR/g+JCeAw4uxcm2aT5xPOrD30nFYSQkFihS8hzB/vgr+VU8x
KlhfLomOP1vW+ZIL38LAgn1/l8noPXzMotUxQ8d5nOvvVI3rG1D7tjTHcqcG
vi1ijq77TeF3+U8n46wDYP2bBVl2bjfhMP/NmfxZCv3HGj9W+3jDSbMdKrwt
DrBsZOwFxx/6/O7RBFPBl3PGuTxo6KNdJIV9nlbWAzdyMKN7W1Y/IxV6tkar
H2gdQzn25GlDoyYMeXjw07NHVXCwWtyMPWIA8162XlPZM4D61mGxpjYNYJyX
9UFCvg3/HJTIHIFR7OrtWGLuWQ8fVh0IizxQgyMW1cay4+NYtvjum2nPajCJ
qOgajSrE6qMqphZ0nmVzv2adoPHQuCB97WqLdMxs+bzhqhuFZkO9bh9s8qEm
TPptm1AcDu5k232S1hXuEj+AlTsDsnV+uK/hC8XOrLCtAnT/2rC3fa/OuwTQ
X7twA4PDD48J1rosovnTtsDqXK9+JEwEOSz3z3XHrRc0xF7TcT57VefZ/efB
kL/x7u8rU48QDQpORtLxPOmSF35h4yvwvMNdrtVqiTK921pZ/lJYYPl2Jnyv
G2yzF7M1jDVG26TD531o+/OA2MDDwg/njLN47P2e0E4KTy9dJf7qqAru/BGo
lrYqDbBB9bv5XwberpfzW8/jjXFLFYu8wquhU61Av6V6DH9ONQal1GbgqJQR
e8eaNtjCr6vWsmYYmXFzHkd6LW4rmpZbXNID4eqcu7tM+jBSv30Nu08Pako+
m4ULveCwgU+vmKMFd1lrVqpEDSPP087zdZ3tcC7ao2O/UiXqHPDzu1k3jpvk
1o9cu1YHVccTn1eoIOaoLv2lTtcFm5CK++urxaBelmNyQToRM+UVRo5+oFDE
v4dP9WA6DGl8XxfWG45ffXY7/h2lsHJ8pYua1XuQXjmxdqVqEMqP8YSf+Umh
gf6ehNWaQdAZ8HXd4f3eeHbdPe8AGs9Lq725UrlegP2VHe5ZNi+wfG3f+X00
brdZjn+JFX0MAcrPjRh9bnjB5rTkNG0/UxVkKstvNWecT/3gLCF4dvHSDBq8
kQNmhwRiCZ6n9E0lCJ5vX3xbbmTUBE+G3yYRPH/ct1uV4Hmw7oAHjWdYXvf4
GcGzvVmkFcFz2aReE41n+OZlW3+bxvPAQK8VwfPYtQN3aTzD/q17TxA8ewgp
lRI8+3AF3KTxDF2DxkEEz1xXDfs4aTwLODUJ0HgGEeVnhgTP4hPbrxI8Py8d
IHgGrpHZZQTPNsH+5gTPZWUMgmew5ZzcQPDsVv1TkOD5lkMVwTNofd2iRfCc
MXmPg+DZc7U6wTMYiJ51J3he2n5xgR6NZ13jPIJn+LxbOJ7g+W2WYSfB8/kA
CYJnCBR5vSyCxvPACnNvgme/WUWCZ1BqsIn9NzznX5lJIPx86K68l1ZpJYQ7
/Gwn/Nyu185B+PmLwIsOmp/hl7tFI+HnR2GnmQg/uymtHaf5Gfqfmraep/nZ
TNDjPOHnatsNmjQ/w/rr0U73aX42WvRhYJrm57MpdqtpfoZdVqqtB2h+Vnbg
1iP8/EZw2JfmZxDp05Ml/Mx0LfAffjYf/Ief4eIzp3/42WzBdy/Cz+mFBwg/
ww3qHBfhZ91GjWLCz1fFnAk/A5uAwSvCz3WTrA2En028/uFnELBI+kD42Wvk
USvh59Wj5wg/w8NHBb8JP+/8FVRN+FktdvY9zc/Qw/7mKuHnIE6OT4SfV+ww
JvwMdlF6Q4SfmxPO3iH8bN3fT/gZtizNafs3fi7uFYgkeuPQ64+pFVQDSJ9Z
1lVD6417PuKriN7gKus4TOsNkFKsqSd6Y+jYMl2iNzab5LrRegNexRq9AVpv
RO44GUj0xkXfs29ovQEdbfGKRG9crn9/keiNJa6WRG/A4uObzYne2Pj+YSTR
G/ccPxO9AV6zglpEb7iP++USveHiskqe1hvw5+VrVqI30qp7prbQeqMw4h3R
G6CjuVWE6I0vHGK+RG+c6t1K9Abcrv49j+iNkfyww0RvPHLYR/QG3AlffJHo
jbU9lCvRG65O+4jegH15tseJ3si0ycwkemOf0AeiN6DkozoSvbGRL5EieqNZ
bAnRGxCXbG5K9Maw/Yc4A1pvKEW9tKD1BrbWXX2+41/0xsZQK12inzd5vKZo
/QzFd7u0iH5OW+57mejnCP3XHrR+hv0iPj5EP1Nm25iIfpbQl8mn9TOMK9o7
Ev1cEGSeSfSzkpl3Ja2fodpK0pXo54LVK/WIft70tYHoZxCIHfQj+vlO4f7e
VbR+PtPt+J3WzzCYqvGS6OdcrzR3op9vsV0n+hn8DmimE/28O6o3gejnDmEH
op/BoWHEnehn/oErK1bR+llukpvoZ9D4LuhO9LPawv7fRD9H7JEh+hlMlDuz
iH4+vvTsWaKfjfPsiH4G8y73UaKfjVYclST6+ar/INHPgI8S/tHPqb+zJIl+
nrWJIfoZXipF/yD6+Szv+myin+U5PxL9DEcolpv/pp9ZTvW9JfMgn/wDxaD+
Llof12eSedA/X1WKzIMGwpJR9DwI6yy+M7nT86C49JoLZB4MSCm1oudBGOC8
2k/mwb8Wv/zIPOhTdSGbngdh/bbB/gp6HvS5tFqIzIMHTNun6HkQTjUcGSbz
YLauRD+ZBxUmjpJ5EEyO3Qsm8+CGjhPhZB685bmFzIMgK/36F5kHjx6XW07m
wb/ed8k8CNfXBHuQeZDTXr+HzIPRztFkHgSI9Rgm8+DI+upLZB48XlRK5kH4
2nTWgcyDlnc1s8k8KMvwJPMgvD85XUzmQTmWS5Ob6Hlw5q4LmQehbluLNpkH
717ddYvMg8Ltl8g8CGeXNLiReXB5htZRMg/2NWSTeRDWrB7c+2/z4IvdtVFk
v+HjyrKjblsvvK9eM0z2G89PnVprZ9qGtXyX1h+LG4OjS4NqyX5jG/O5XWS/
0VvZcKj5OwNU+L8+JvuNsB0uL8l+wyX2FNlvQNM68Qyy38jJ2r6O7DcW37uo
yUvHWSP0Zd+u/kzIybH2J/sNnkNfemPLKUhYf1Wb7DcG104vJPsNvq3HyH4D
Ni2gpMl+Y8A4oY/sN/b5jpD9Btj1hBwj+w2+Q89KyX5jkWYb2W/Aqddvp29d
SIN7VXt2k/0Gyz4Bst8A1Uv7f5D9xqda7etkv+G3a4G7fD8Fl9uCvpD9xnx9
8z1kv3HWqIDsN0Dwkogh2W8cvK56iuw3ekNnN+v0ULDKLteQ7Ddieipfkf2G
H6/eGp+HFJilf75i/S/7DZmD3LpkX7de30bp55p+aF2jv5zs6ziOGwyRfV1q
pZvQOs1xKGisSiP7ul1nJ7XJvu6wyfpsu40UCG+oiyL7ulfnN+8m+7rX83xa
lTwouPWepYXs6zpP7BAm+7rJO0JcS1MoGKnaEE32dTYM6wKyrytlDST7OijP
EvAl+7pYtbfsZF/Hf+wj2ddBXeQfKbKve7ZMXZfs6zJtF5F9Hfy69W4f2dc9
mH23jOzrUh4V6iyhdUjGNvEv38RyoPLHRSmyr+NvBLKvA9spkSqyr1vQn7aU
7OsaeoLJvg6U1oeUkH3dxITjQ7KvS9nds9C3jYKdgtpGZF/H72TFZ87nh6Zt
NpU/6X799M+dWLKv49Q7aU32da1aMhfNwyj0HeXJ+rd9ndqLRwY3hF9hWAnz
w4t2FJonPZZiVp87L//VfqL4fTg5v6J+ux19PizS22H2b+cfuCJlI+7Qi28k
HNiOjw5jQ4btlr6G9P/83JeMuCPX/OrQuUr2EL8RA3/wMNYnSmcD+4CH9Cxn
Ed7rO7T8kMcomtsbJDwe6oTUvYFlHiwFuL+p8IHIogGIXH/hmUHiIAg+Utql
qduPTR0XeZhvDKHlErHhVuWsOZ+7ySAwaW9OA460Z65bvICB7Sxb3DKPItjc
sXLK4TGHX3/vBbIOU3hqy4VlY+uS5jyn4y+L2lr7zygTdib8143PmL/kxB32
5blz+i+ROij86XoTcq5tNcwyH8e2Se1iLYf8Of2Fr691rkobQifdlPVcg304
KH34uaDZ3DipEKiTDFRuxaD1y7a/KhrDoN+JcTUGhXP6rxdhCo+2GMVPJeN9
fp5d+OKg6W/nHQVz+vcYrFV6MtWNw2bsG9iuj6D0Y77J00mlc/qfbXg/Vdg5
jqIP3v6yzWzA0/epYZucue8TKqXpGn33MwY111WIHB9AL5XfiVVSNRDz02dz
ou8Y5jxkOnd0dQOmPJQVWPmwAeIzRW5Mb2vD8t5U68mqUewc4JA8oVADrr9L
sMb3MzquH7CYUunFIO/iX/ujW/8zPkXVrhwjzy3TVrc8sroBWLglZchzFTZL
OZDzFz2u66LPh/Vx3pHkfC7BG26p9ztxxYnPv/zoOXW5q5dN5t0WWKgwMJlC
2x89eankv2YYuHm3/s6g7emyW00rP9ShduQj1pv9Y3hHvnDj8NoG2C1yeiex
1y5I4qPtcGBtVd8QbTe2XzVc5/4BrzBF3gp8x8D6q6GBTcWVsM0roJ3Yt2mI
3qbtsCcf3Yh9tiRm7Y8zWXjy1auUvzcpvN17WV7HrhAGR6dYiH25qUEqbQft
F0+liD2oTWRE/nM87tcs8JIupvBEjqh8n2MGMG3bXUvsKdd0XtF2sOOxW0/s
28pOKj55FIY6HSNGgkMU/lVeVbpROR6O6JjvJvbTIazGtB3Uh7xyiJ21IjD4
pGEAXrANkTg1RWFWmMDxxTdC4ddY5T926Uv/2CHa9dA/9u0bj3bt9fTEYaUl
V/7MUDg8Mv1CU8MXHLNauom9/PA/dth0s96D2FWSIrLzFJ6inxlriwI9L897
0DX0XeE5bIwbKid2r8RFxA49PW9/Evth4XnbS/QeYxjLJvftfylUiObrfaf0
ELY+NJEh9nXCQsQOz8SNxoj9v+Ln/L5fdwmePbxGe2k8w4ubLGEEz8aGJ0II
btVEcwxp3AJXeJQKwe3RQ9bhK+SqcWbGKjLgOAO81A+fPF5bDoIrMlVTHhSg
osM0X4MMBRLDY4qGNUVQtMdud7KzA64+t9DtJn3PC+p/Vb+oP4DAIp0lRXTd
2fROPKLrDmZ3Ccz8W90tvhx+5XzdCMYt+lDfu6QbtIVb12Ter4DyKaHNpN63
sOTtoesdzKSiCki9P7rHJZu1vA7/HjuG8TsY8FW5oiaCZ+5+4alW50R4Zipc
+ri/ZxckLuYe/jeekavkFn2j/xlHVloVKq39DJce+8ts5Zp7fimMcntEeHK5
3ONNNE/C21dyT/+NJ8W4NioSnuzNYd1C8ySccp7I+TeeDGO69pjwfLON0W2a
5+Fr88H0f+P52we15QjPn3x9RY/meRBR1mv6N56fOGC3gvSvq2zDe+j+BR/Z
BtL+rX+ZLtpa9k//OhPCTfcv+M3EEkr6F9vdrgjSv46I7iL9C27LS28h/Svh
zCNTo2uKYDTvPs+vOho/rM/YdasyIVy/6Bnp4x9ShWaVR4fhxG9U/H/p47sX
uJ0kfXyh7RIFuo9D/Ii6GOnjfze8YSH9+sb7jljRRQNYaTTsrE/36yqZK7Gk
v0tGr29U8BiFX39qDR3p/p658k5bnMMwNq9SORG6tQ+3Gz7T8/JLnPO5uZ7x
K2d+tOBszbBlEds4dixL4W82yIL5diZTv8ZHcIdOStiFdT0ooOw/1RGUBLfk
coN8lnVgwt3RE2YHxnD6lIhbsnsuBN/R0vn8wwGuOsc/Nuqn0C7ohrxYWzLk
cbncjVIZQzd75oWrLnegHLeGloN/MuQPOe3Qvd6NY0tH6vdsGMVx9k/jSdvy
QfLjWwmJp+PI8sSAX+tXE+6qOVS53SoFNjTnWKU79+JvRe/i4JBh1DpzL6bo
QCGc2u1bOvOagafuaq7Xy67FoEHlP3q7U8HnUboSwT9HuXQwjX982LbvIsG/
0mCPctc1CnkC5pnNbynGm6+EU0PyU2GBp+EeUr+HWdk39C3pRmnjl18z6Po1
tjowO5o8jJOdJ053vOvGmvZRA0PrOvg1j/W6iXEPDt4L3VdSPISS7AuHuWMa
4MLpv4f6VzNQtciiTfrlO5TgFR5rfPoJjvzJiJcVHcX7ucZK+y58wD+5YeD5
pQtKkl4vNHv8GU/Y3IyvnmrB1QwBc72oXkjsVIhmnuhCk4M//jQt/ow7pbp6
yxu6YWHS28eXmOqRRfpIdZL0GN43W1QWbNkEh+/r1xZNFyGzC1sBFjFQ9rHU
OO++SgjT0WAox6ThTSXBA6f9KbQ42h7qsyEP5r2MXif/IhoNXd/rX+qksOxG
1w4nuUTw+OrI6ZwZgjM83BKVExTqTm/W2pAZCsX6MVIOaX6obMmkxUT3kdL6
phdOJd4g9IXXXMT9JebxlSv7zVKodrfoSGGQK3BZeYoRXuXbsIjwKnZtbpYh
vMrmU7vzepM7upTeFAyh+0ugre+FBEW7OfGZfGBgjMRfpK/ClI4/fNQQvUji
r/HE4jCJv55xvRYdfwgdaCgk8Rez3snRtfwTXslZwPmieww4cq7Yvq6shWfy
xT6PpcqQ/7Eqn7Q/A963jmt886oAV4c3CgQPB2JPSy5oKQbH4i3xBA/JzzqF
Su/3YfmBtOdxOkOQvOhjiY1MJQQ+tVba1/4J6WlXQFtjHA5Id/NsMS6HFzb5
BQSH7ZOLj9I4hKQU9l8Eh2/CSlgJnl2SZj7ReAb/QNd3BM/SBryWBM+cwlwl
NJ5B+XJpOMHzWqrXhNTLk8uPt9D1AmJaqmdJvZQcyVpJ6kXhw70hul7AStKt
ktTL5jjdSVKnaq8nI+k6hWsv+L6TOu0JUXlP6jTPPecYXafwvPmML6lTsDni
Qeq0xPAoqVMwr3bVJ3UarOXNILyREh8uRfMGeNfamxHeqH3r1PuL5ocgAZNH
ND9APU/PaBPND93ymm9dDPuwZbny0QUyw6iam5dmszATptQnqm0C6vHsJ+/9
PTIM5IIGNe6YnDnze916ZuSB4QCqsi9ca+kwiB4lqYauodkQl/TYZZapEcX5
OTc/KRxHKYdz89WfzN2PDv75GygbPohXL6vFv5AcwJPLfTtuOCFwyJrbP1/Y
ghvuB9btWT2OKbWpyek+c/dNgZKMKH2eEdx5bd64OVMvvpPhkug7kw87+t8o
78ztwPhDCT8OfBzFbIclwT3lxXOeo7/12/eYnDFcvDXzxKxNKwa3Vt0xnV8I
M4+a5xFcVQnqxdG4Qst1q7wIruY6Zy578Rf9r+R8vmPTuvT5IFxfeZucP5e/
iwnjCXmvqrLz6y2YemGRZQQXeS/bjQpfpch7rSldefDjKJSU6Oj923vJmR59
QeL8/V5RDh1nGPCariJxDtcpMiJxHr20pZmOM4zPtr79tzhvUtDuJ3nHU7s3
0nmHrpIOHZL3AyZBliTv2++1itF5B82bn6fO/kvehbaxvSQ43L/BS43GIdSd
WOFDcLgjPO8fHLbse0NwCFddnvyDw53OHdYXq7pwfrPo75rnozh5K6VpgcDc
OmEJjxvz/pwe5Goo8Tx+cQSXiOVUGG2bW7dwPm2wWDDeh+fvSVw4EzuEeY/G
zR/0zH3/r4u84BOtb7OVEr1mlD5jxUsjmfaxueP2TEnB+8rvYTwTLlm+rKMH
C0dlM3qL587XXPb3rV7N+ZmjuFmJU9OusANk00Sfrtw+tz6snvdhZaTUEGre
mh+7XKUfJPr4JsvPFM3p71o6nPVt8wC2117e0PxqEKw/SXLPds2t36ZG9eos
ynox7Xj/y8c+w3C7pX/9wCDO6c+vs5HlZkk3fj8WKSnPMgryn7SfpvhkQ4D2
K9EzBTV4OeJQU5JvLezXC/LT8Rv/z/H5M3FfiJyjeDyaO9m3Fo8oBXn8v5zz
/7fdPGbjlaaeJ/jgmpDJ9dsUlIRqTJ91L4Ffh3IET1z5jDljN+0n4j5j+OJ3
fPsyUv/z+SH68au3PGjEY9xymxRyx3HCn23N2vhsuPxjd7sa1wdMf+OymRPH
4Gyk39DZthYAidJf9kcG0ULS/RLmDyDHXn+Rq4FpIOyzjYfkS//bWUE6X6gd
8z2B5Iupobn4Oo2rA0+OzqtP6cdPVdVDbE7pcE3nmKJKeRMqmZfmzr87jm7i
peZSR3JBqEUZ5GVbMJZX3P/HxnFs2j39iG3+3PX1X+2/5aq8mDYN46amNcK/
nfqwUspo6887GbBbNzuL4LPVzzicxic+Hvv4tZ/GZzL3R6lLNK8qjo+qC+/p
xe2fPkVv0M+c8/xzr853K7e34k//O3uSs8bw24mqb1y/84B/6MefczHtaBCe
m/oJxlArQV4nkX1uHviv9k8xIepZS0dR86+arm8erW+rb1x3U8uCeWqrS0md
7v05w0nXKZ7ebi1A6tSRb6aS6+soXuoQqF9wpRO7RV/s+709+z8/11ZLq6w0
tRO78jamvIscxaRbsqsm5Arhh9vggvOu3ejfubR6+PMIdvFF17G/nptP/qu9
s9Npy7reMbRB/bXPX7Si2Q0bNhXeHFj0+wEf4bF4FZ1gmsewTmlkXgXNY3JZ
e2EsZxzrxLv2j11txOj9Y8elqRywSrD76fi4F5dINEqkmg/jreedogXfP4D7
Qkk9y5p+PAePLgncGkROueSVg3Fl/2f3D3oqdkfmHgObJi+HWvTWIufhxHrX
iFxQlwyZJrzN2+ncYlvYgZJalRH/xts6fXdi/a4OolIi76KkgH7cmSzVn1H0
3/WGn73tZXKfZnV/8Tu9tSClNIrkPkJvZttIfM7P81Sk4wMP9BwXkvj8X8Xh
mcoJfpKX9bIPGXRegO9A2RaSl8+lCjKkD7JwDZxl7+iB4XCR66QPdoqwNa6l
865axOTl/qIVpnQ1Uk7yzq0//6/szUUNdqReXqnFUguvdMJ0fM74DF0vad4P
zEh/99ymrkP3d+i4Wa9L+ntpZLEdqcfn/rvW0fUIC98ze5N6/K/Pnc4pWUjq
qD9Q4iNdR5Cd69ZC6ijU/UEEqbsX3eZI1x0UfZz/55vc3Prwv9pZLAW4Ce+Z
3Ja0pXkP/Iqa3Anv7T0kaUr0z8bOIF1a/4D4EgtTon+2vb5oSHi145WUDs2r
cCTdkInw6lzn30vZnk/40Eb8VwnNh2C7TXMv4cNv84PTCH+63F2nQPMn3Evb
1UD48//qvQq3pQ+QfrS482ZbXUo/9Pnzsy6l+5FJzFM+ogPdmSvsaB0I82dj
pokOjDyTut2B7nenrzGE6H4Hihqql0i/K3//x5j0Kb5H0e50n4K1BfkBpE+Z
X+bZQfoak9vSQrqvgcuFC1qkrz33FVlP+nVb7mJHul+DVSkLD+nXHtVsmkSv
WsYvX1j7fBTYjqVk/Zte3YBTG0i/vj7eL0D3axAbvS5E+vWer0suzcQmocbw
7MKTCynUMJ0MYi2pgvMOK7h2Rr3HjIM2m9n5GNBf9MlN4tInUIvQePjzyCgO
bG+33OnSjcxhHOckupOgQuR+pEnoGObIzeTuWN6O/Z1RLSpNyWBdxRO658g4
LlDSYL12uAXmq83svq2UAmyxE7/WTY9iV3dEwM6oTuj49qBhr3YyPHx6aaeR
5wgGBDqztEf2wMGnX/h+as/9nWgue8rI4z7yXr9HIqZPLKTAzOySwRL6veby
52bXkybPPdhtxUQ/F1MXGq4nzxVv3TxF7imXvCiWvidmnvZpIvec65xYXstS
8r5u3youXT3cgjVPXJXJ+/7X+89lv2janH5Wk8JndzcIRu/IxeLbl94vi5+7
P+JXK/7zO11QpY0pjesvhXImb52jBG3hkvlRCWLnKPybStvBdto4gNivsfYl
kfN5WF5axOzIhbB2nkhyfrafQ/bOIgZ2+Nvqn82tBMZ7XSVF1SIoWzAp8mW/
E74ycxuWpc/JcVuhkGpj85/fi5lxKp3gh+nex/s0fkCwUmKA4Gcu/6WdRzUJ
Dsc9FXJoHILmrXQpgkPJJUF9rh3DtN4SP66d0AudefE8ou1z7zmFPiSlfswP
xNxQ9ebDD8dhzYb7gezvm0HoyPRGomPvpdnr0joWqfgAdqJj2wzlL5J9b3xr
Mdn3YtRFxk+dqkyo0VTPJPG5/iTDjY4PHjX4doTE58doTGxOVy9KrH9epMjx
Ga2sRu1v9LeC3V1VbsGyQUxp7JFzD+3Aw9eryjb1dwLH/qmLTpzNqK3df4rz
zCi+5GVdYMXSBDdM8u2f/uhGH9ElByYcP2Pyxc/sC+U6wapJ0n+muhkbIDx1
Xu8Y8K9gF4+ZLIHbNb9EBOe1Yaer8v0Tt8ageYmBkHn3B3i8J+JL+7seXC89
Hj3zcAR0fq5Mb0hNA5nkEsnyGgoFOr+fS6+NwRlxl4UOS9L+cx5jxJ8u6qDP
F+ORC6TPx/q2qkZy/urXXHfEnQaQfzHfL8+Hgyj8LPDCcvL79lverJk7OnGp
5AHBW4vGcM+CjhubyzKg4mvRUCM9v2y7fO0WPb/giqjPr8n8ssCq85kUzUuj
80P30byEGhz+QoSXGJmJN7M5Kdx3Kutd2aZy9Cr4Eyoig1D1UfHtssIePKs6
9GWt3DDaJQY/WtxfAzOBt/LS7/Zip/PHq4k/hnCv/9Uxga6PsC7E25/kK/fy
lg46X3DqVMY1kq+Fqad/C9D58gnxz6XzBcmst8NIvr4HX/Uk+XrRclGGzhd4
ufPuIfm6b9L1kuTL1nTnZjpfcNJxejvJ19gX6jy559Pb37UrNpXDAqEqX3JP
mecn7jQpj2NYm7SvTGQjbGNavzjVYu7vv8n85Q4knjMexxl0PEGHz8GAxPO/
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
d0xdIAEWav0xOLCBQqsH4tO95pWwb0PWs1667m4oz168acLAHk7K2F+zHpZs
tan+wpIATXzJ7r8sxrHd6vBV4eBm0N8j4FfVEw+5xtl2vcfHEI79+NH7sgNO
HmdVfRASD9Ybw3/503V662HTPbpOoSfYRozU6bt9jgMH1EdxVTDzzmH7boB7
y0SyLsfDauVsRYLnoqJ3LcxBLdjOE/yN4PlFlMVD8twJo1+h9HNxh67rC/Jc
96aH3aQuavbLc1yXa8A/zqxbSF1Yc2+9QO6/I//Xffr++ERnSRm5f2CTRQup
r0SLip6e2Sr8NHX/Famvo5kbNUgc2JR/SvWbV+LX+DV2JA4vzlN2pE7Tb0ws
MjlbiN9OJmSQOpXQtdhK4rlL6WgnHU8caBFSJvE8MS33D28U+88/QvMGuPzV
/4c3gjyV/skXw//JTTpfsGNf6T/5irHkVyX8Yzpj40zzD1jG7FQh/EMljlqQ
vN/+qFl1MLwWTF1OppC8K9zL5yM8JjRVtbSGuREC2fVSCY/dUmfm6Kbxs7Sr
2C9qohF2ZH6tIPhhi9l5kvDh4d1L99F8CO+ivE8SPgw9+uoXwaHH5+jKqG3t
YC3n6kFw+DenokygZAwPrD+sBdFtaHs48EtBPh3nvOeOHH3jOJS8ejbEqhFj
i7cX7P8aD/MUKkrV6TlFz1R2ULiiHuoj37U8nZcAKrfk/e5cGMddhTbsWXwt
IKrcODHQQfOPpdqlWNExZHN6xGnM2wlgO65xwZfGg2Y3H+GlMO4voTQv4Vbd
gHeEl9hXNek9+D2CZV8i99xd1YN9Y/dnDirHw8UrUaOE31beEHak+Q3na0gu
JPxWfTfVieBQNNishcYh/mhoUiE4/NL/w4w8N/ZnRbkRbyfGbAnWJs91E27y
JfeMe2W0gr4nClT5/nPP5KKJGPJez1xSn26uqMe0XW/KyXu9OnfsOonDGTdH
57dWjVCmeDyJxKHLyTmbxO30DSdPOm5wflnFOInb0Hv/85z2o9j/yErs795u
WF1/aFuKSTwwOy20W9BLYYKZaX/S/ghcw+HzKNglESpSpxnltN79K6/HwauS
gBRDtGmHSAKsP5ZzlL+bwqZN32TFTsbgq7SUPZ60/X5H9GESH7WzfgZ0fKD5
/JFhEp8Ig4BpUl8+25+vpOsLWRK4dpL6UuH0eUXuo899u+DP3m6USX96jtxH
4dzRq3s/juDRrdcCxy70gLl2Q/oqiIelbmb3iL1+r6YVbUfHssQKYv+/+l7w
P/v/7P+z/8/+P/v/7P+z/8/+/7v98e5XZJ8wJiRzmUW/F0+X2Ob9s0/4eX5d
cEQ3Zv3lXzTFO4rToj9VCl5nQbZOzen1p+tQ1nnCy/sGA8tM6hwlInOA+Xa1
67muLJxJk1MzDKaw4fOZFT8PZYG9p9zi5pJs3HAqplzPn0Kll4werw9ZcLGI
T0vVKQn9jsgVB6ZTKDh+68W2+1lwWjwEpjYmofMmVYfX9NwWeZwpsMI3E5Qy
tCWb/KNRLF4icEEBhSdKYy6k/86CC1+/u9/QfodbtacuTVdQKBscaWAfkAEV
fFRpoGgwNvx6LNFSTKG4L3vQqQs5oM3ebmo0zx8H84SO6DRTqH9G8HLC3nQY
Y4s+7dL/CkvWSXGpl1J4Narha8P+HAhLtOeONvBEt54npiVtFFalHMi/7JYG
Ce6MZ108brhQ1brmbxWFA1o8e1znZYNF9AuBUVFXnPbp01nWReG3Zhc2sbhU
MHOUf5GobodFZ1bd1PhE4f6oMJc+5kyweddg3c/ugE4Xa8V0af07tn7a8deb
FFDY9NBEfKMFtk36cenQ+rdzS4rKB8t08Jg8uay0zQI1tjct5xqg0PfI8/er
4pOh7euaFG6xx+gyOrPbtpbCM6vvf+ValwWz9gI2sVpX0c5FMWU37e8fduHW
0ehkmK/byrrpZCxacj2UubeaQiMurt99ZlWwS01//I1LLwbF9Q9NVQxjm/Yp
4+rUXMgXiGCm7BvwVcS5lcqLGbjNSfO34+082G9nZ5SwNxdNez8sYnpJ4cyW
p3EP1LPBa7M+c+XBJGzk+VP2PZfCPzEFansrM4B1B9vSqhtRKLVOzOBzHYWq
5+UGLF6ngaXEcX9/Ux/8RcUMLe6j0PFU113noGRgtf55bdLBA1c1f3G1/Ezh
PXv3orHUJAjdIa23RcsZn7FtTQwZovC2EZP1xuVJ4BHDw3/zoAPGT0rp7hyh
8EHVAXG3x4lgnVJ9fuapJX7fucOqaJTCdv8REZ2RBBgRS1y4MV8f2Wd3dzWP
U8h+uuqgyvwEqE5L6Lp3QxW8Er+8yP1CYYEfp//5fXEQ/KfLz6VnHOWLL5es
s2jETYbHKku/J8D2I7sHxvL68dYI642lvwaRP/zt548i+eCT8KNRSbEJB+yl
Vf1uj+OMbs/yhyYF4HmVRaKSPw+/FUZEFjhTyGSlWvztezZMlPq/7OhIwqno
Mc5apHDwelnH/RUZ0PO2MGvCMQrvX5b9GEf+f+mnld4JoymQMZL/KtLVG8el
XDIjhimM3azdd2cyAZqH9Gb8XN2x2CZUbWKMQhYP7z69iXj4nuhVIPj6CXK+
W/nhOYNCIRkW58em8cCZtrygyN4e+Y+Iix2jKDzdc0Gan543F9850VZldg/v
/PR4tJ2Ow84lqgHqPnEg+YVn3qJSa5yaCUn2/EbhMer3mPDaGBjhlNzUNGuD
74sDCph/ULjsioo+Iz0C7MKMZzxTGdgwv7V36cVa9FR+Y9t2JxGsrCJDlW8O
4usJ4b5M2QEsUKiL4tQuBJNJg+of9Lz9eDVf+ulzY7hp6/IfDz2KgWvX74N/
rQrQztiSe+V1Oi/RnbWMEwjzHX6ynWZKxdgb5dFbMigs2h+9d9PlDOC6JFt2
Ed7T97kb3tRCYa7Iwc+7XiZDqqex9qIF3sgGRWFuXyn8sj37zZGN0SC/bekq
LrlnOJMjGMo/RaHk34ebX0xHQHHDeb5FBx8ip2aJc8ZPCs8JO/HdXxQGUnei
lwuG3MH0D16H2H9RKDz7281a+S0k1+6puRSkh1wPil/J0fYXx093nNn0Fu6t
sDY7VCoNlSf3Sf6l4yOQcj9QLDgcxHma6wsV7sM8zjeNzxop5BSJPcoakQEK
w+eZpbTofERl2CZFlmA960aWwLZE0G5/I6vRPoJfmPevt7HqRoeT1+a1n/gA
1/gs/7hq9mLh4j+jlrLDOJua8v3ayUqof2y2NuZMBfbFr/ooWMzADRIBB+fx
foAmHr20/Iw8rPzSuv2nAYX3a2cOj7Xmw7nba3ZuUkpBa/u0K9bxdF3/Wcdd
9jAbHibZ7Hou9Rb3tRfaS9B8cjZWwmSVeiJ81F4re3yPH3oMDmm40Pg5tEXZ
7kh0DDgNyURbXvXAT0EyZ9K+U6i4bnW26YZIsIu5fcf20GP8sebt4zvT9PmH
JWxF8S3Ex/HeXCtvjsdkP9nmzlBoL7kt4frJYHgsd0dAQYYN8/m66rhn6X5R
uERG/qA/9ExFfeLZcRtGlmop19B2RfsFDcJi3mA6X1HlaxHtp1h2eTtzOvqm
Kpe4rU2CbL7nIcUj43jhbPZmmKpDVZ75YjfmlUG5cea8qJIh3Jz+PXl/Zw+O
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
+9C5102Ko4EN0LJJs2yUuRNdOPw4qptrFM3S7XdY7dwAs8/HRU3P1qKL+8w+
jmpQkMr+1KKRsBr48PZWovTG72hFrNab/TVUtC3KR2iVVRmss1LITebKRBFG
pptpj7EOWFtIF2wqgMgUDQGldfHIREeGnpKL9fztpuM+2Rlw+R5nb2dFKLq7
tb3KDM+7cu75az5qCfDkhY+1nJQfWjtQGiOH+5TJMzzGqPAr9PXT7cs38kD5
0lv3PMT5FKLbDk8eBsGug3T+O5ccEPOLCNcA8nehn1f3wvsPsOHAayPBjlfo
2uqdX5dx3uimA3gebXwDUh0Si2fDzJB3dI3Fh2Ua2n/alM57jzWUfdvtII3z
2TwQYP47Jx24DG4HN8z8+/tou5K3Vb306UZlQfoPL4uMwhqhqPtMUT/A1Chd
n9SnvYqbG65PWI7oZif1Wd9+aqkS1+faCwUxuD7h59BMZRyuT9kVSl2kPj9O
iWjj+oTkbWUCpD6pAgsKpD4lV7Oy4/qEuv3OZ0h9Woy+WEnqU6gqm9Qn/Dwn
oULq8/CNgXZSnxee/Cb1CcfH0q6T+jTtVv9D6jNB15DUJ/ycKPmvPvXqb6iR
+nTLqCH1Cesy8xJJfX7lNbYm9blwp4jUJ7hcD44m9bnmDu9PUp/nPwuS+sT+
LvUKqc8E5pw2Up/mU7GkPiHcP8CU1Oe/8vZBzb79JtbDoVtNBlgPoUO0chfR
w+dsD18TPRxaxxiD9RACFqQziB5mRsqYET08ZNtF9BAeLfv8YsJ6OD/6sIzo
Yd6LNSNYD6FS6sI1oofGN0ZeET0USI8leggMtf0viB4Oi/mcJXrYwrKe6CFs
R/5/VLEenrub1Ev0sFy3gOghiGprVBA9dNAL3U30UDRAmughSAytO0L0kCKz
y4/ooddSGdFDqIr4VU308AGvuB3RQ8vi60QPIWY6yIbo4XLhu+FTWA/ZVn19
jvUQ3WfmoduN9bDQtF6azNlgwTfP8JwFTvlsGTJnA7raecic7Xs+R+YsrDlk
wETm7P7NQ0/InI28uHMGz1kIuHfbksxZZHtkF5mz95inyZwFTc6NSmTOuu9d
UUzm7O4bC2TOgv64wm4yZ69SYvrJnLVyf0LmLBwzbrxH5uyaG7pzZM6eaXQh
cxaurIv7ROZsvDDTKTJnndpbyJyFx6sjTpE5S1u9zZ3M2fwOaTJn4adKxXsy
Z3+YUZzInP2qMiuE5yzsOFtZROasshrdHWE8Z40KKn4W8yfBKOX4dTJnjd8U
DdYndqMvqgyzfhOj8KCX5dEj8zygatD3TO2oQXfumTs3OlLBWPyecatQHtzf
PC9EuO6yRcRpzHXwtteQg3Bd/pZJH8J16uU3CdfBpK71JsJ1ShMZFYTr6iO2
62Gug44tRtONmOvCL7hIEa67ba5PuA6erzu/egvmusda6DfhOs/fg4TrYM3Y
xe2E6zwz9w4QrmPwzCBcB3LGItOE6/I2PDpIuO7iNyHCdcB3uUKAcF17alIH
4bo/54QI18Eb4S57wnV3s354EK6757CZcB1YaOdeJlxX9uRoBuG6ZEs3wnWg
KP+jlHDdF7ZUU8J1Mj5PCdeBULPqRk/MdZujzgR1/OpABSm7uEroxsEw02XP
qmcImj5GnpXY9ANl1t9OMy6jgrcVn0GoF4JXMqU5hP8vcd69hfkfpusiWAj/
bz30/D/+Z+hyJ/wPB5kKIgn/Ty/brC/B/L/yRk8Z5n/QX+KkEP6vMDkySPg/
hcGe8D9MO4ZyBGD+v5jG3k/4P4JlUzjmfzi4d70G4f/3E91WhP9vMVMI/8Mq
571RhP+XvJY3EP43OXiH8D8ccXDLIvyPGBR3Ef6/xz5J+B/YzOPuEP7P37vX
i/D/RsNjhP9B1U2pifC/qtM6X8L/CWzthP8hofy3CeF/SZ8D738wWMJ+hptd
Ijj/llz7/3Adj4fw6Hf7VBlHEevNKz+qH/SC+zMmqd1LCXBWfPrLZdY2NPOh
APV8H4ebdvOBQs5Z0PPi1I0fTyvQVyjbXbNAhYB1RflHJbKhInYgn/hKv3X5
s9hXgnNCtivxlcEhmx2Ir/TNuL8C+0qoeKDRxoZ9pY3ErQ/EV9JVGAlgXwku
bYnrArGvDDf/M0l8ZfzRrcRXAl+ahTHxldUhNWLEVz49LEt8JdhdfZlCfCWX
ksl64ivjJmXmsa+E9S5+iPhKf0eONuIr3yv1V2NfCbKxHeXEV1L2nIkmvvI7
vxvxlbDlzPNw4itfeAt+J77StfoN8ZWgJO3pRXzlO6U/q1ixrzwlZkd8Jcxn
zgQTX3nzuefMiJMLutJmYfsqiQrc+//8NqCr/X//fyiTv/8fyu/v/4fiOBx3
2eNLBxrlldQc5h9HE0ahwiqMWbBiNdpUmVmFHHdR/2xpoaKF9H1WXZANvutZ
SzeV5aH9SbV3GF7R0Lm5HKtDJ7NgPc+6ltMKKcjo8eWL4ok0tMH8AQMTLQNU
Zk5WDlyJQS6ibac0MCdzvjo7uouSDvGftZI/LH5B3MED9B012HcbhWTIH02H
11OqsuKM75GUDcMmPuzHb5bRR7pwpwG3PR37dLsjqtvKcaS1g4bEdu28YMif
Cqqxujqr9r9ESmMLH7dh3k53KVmR/D0Zatdxdv22v4f4n54Pm8N+doOQpTFD
fhJMBDlI65sqocW4Vr04zI2aL/MDWm6lQNs6d/ZTnGZIQIVNrPY5DbUH3hkP
7v8OoZ6UC0VihSjtu4n4aS183l+POk+kZENXQ1E9i2Ia4oh+dUgvhoaGTpYr
6A5nwGsZb49xo1hUMC184kk5DRkpKCgJBqXBq8dnV0j/+IJ+mDzk2d9CQ8dp
59esa0qBIF7bIO9lRxT3+uWtZ9h/qfVGOHVPJoJmQY75WMZrpB1x/bcL9q2H
fp8IdzyVCE+CKFsiaQ/RnrY9pgujNDResPprtlwC8GTc2XiUWwaFvkCGs8S3
5n1qezoXB9xjEyLyHOYQszHqLh/mYVkduqLSW3Hw89Fa2W3XitETn1/qLyTw
vnyc3m2Wh8A0IGxwJU8msnwSnN/3mYZa6sV8xi5lgnzqaZaHSnHoyLbHQdH4
vmyGA1os61PhmCVlOMktBC3ac2tdxfsifeFBib5gMtTNFRz5YmaFMl2W2FXx
9SRtjOS14okHm8cGHI+tn6PlG/PVa/D17GuSZ2XUigOn5VGPb9kWaKCjz2EH
5kmJh1c8RVyj4WnWBsHtUyZovbZUuz72QR+Y+QMuT4XCFOPkkfrHCD04/DDO
D/sy7Y0uOXOFWWAlzC7/9EAC8tcfSzLH9bbrW/mLaddUqLIYjhLaEIZiz598
aoH3fadCwV1Tl0SYZl0rVrjvAVLUV2SQw/5rMcnEPnhbJDx13ZYYl6CKPo4o
/Lo9gfnTKH/t5LtYYDgxIfiSIRC8rgj3+G0eRpFBxklPNg4Ai4Ty2prUVHR1
/PM12Wicn37eyLu5meDhqDuxSz8a5b6hO1HWQEOZnhnO2unJcGGdyBFpjasw
uuj8xgH7NaeCZ7PcQ0EQKtKpHeliDs0Vqe1R2K9d2qVfmDAcBlYmlvKH21OQ
1T2d7KwvNDT7WWbLWE4O5Hat21o8rAV8oRvP6GN+fkr39acNuyckp86faI+l
oPXhrr/t3etguNiioutFOTTdn7f1LBtCMj9Kvp1O6IVFK7tLh+vqoehUos5D
nm5k22Xn3GI0AhcGNVpUEhpgC8tdU7c/dYjjQusetvlx6NipKuJ9G+uJi6Or
zrESJFrNHjUfRIUdtAzFpA0VIEIv9+h3ZDZq/1mRvUGTBq+/LJuGKRcCHfvB
0nmncPQh5U3DgS7MUayFZ298ToTTubH2vJcDULKpQ6/5BA0+adDeNJhFQrHr
/AeNiPfIX3489Ruep9dkU4weOQQDjXFdx2NrJ6RY33ZGEXPv9X6XkSGqF7AO
Xt/dcuc1CpFcU9WF+Xb7HpX+s1lvIVnfPLZm82NUGEM74rhMA3Ve4eDdIjbg
KeUtr9zYiwx4TNQeJg1DR3MHM31sFTT7yjk61TegcKvAVPXjFDhKnyTsdKcC
PIuTYhOmShDbwXj7P21U0KJjF7Qc+g6pLRxHJ2Ky0ZXVb2+tfUqDryYr2Vbn
5cGo9cXbl9STkLKogeRCHA0elnDaLKzPhrhzCqwWXp5o8mmNyXXMDx83/qKr
uRgBgpcf6Qb1OKBawxuxIfh+X59pVmeT+QLZNwqff+Z4jIoSIkweL9Kg7YwT
w88v/qDa7xF3kXoKOlLH1vTjPJzZ3kBhPu4Nmw6/dtjHbA4njY+kWOE8vP4Y
rDSQ5wEjb0znVqpUI27hyH55SyoIW+4bN24phG4VjZvMvwqQhUHmXlcFzDNf
szIPmOTBmToP5WPjKSh+R99C0TcayMvq7Y40yoSv+p97rHyiUN8Xupsrm2jQ
wpalsNoxGcSmp25t1HuFqg28ThH+8Ujp4Eno+wImY1H+sWMGqC4ydek85vNL
b0OOlW38AscnBYvWj9+AD8s8o0HY7+w9/dvf8clX2PeJ+dPPO5jv0i2tP+QM
Irl3Bb5m6oOQebxia5FfLkrgtMnKsKIB/9hsWTpDDmzKUjltMpuANnhRBb8W
0IBpndfJ+05pMFX7WlirIgxpR00Kz3fQYB9SLr6tlATGbmtp8YGPUJL6NO8D
fF6zFIs6j49fwfVVmM7PamO0/lz4I07sL0oLC3466IRB4pLz93Ppquiy4YT5
C+wXVrvc5gm9Gg46baNcDPkJyAEUdm/Np4F9p7GDtlg68BZkUHcdDEfFPXRZ
lGa8761yT7Zyp8B5tktInWqCBF8xrRr8SQPGY06F7vTfoDkrh9vyqBYSYN0R
G4L5/HdylsuflAiIz6j7oeL7FTGe37p+M+YN/uSgTN8daf/zc/Xluv/rO93S
f7/T3fj3O918//get9KFyENbb+nC2wmukbJxGsovkzg/ZvXv9wXlbc9ftOkM
o/Iw+r21+v3oMIP+DYfrWZBdRD0zurkVdQ1dDm/qGUcVMakyopX//o78v+J7
7213qkwdRg5ayTvZh/rQoMQ5N76HucD/N+78Nz78N/6vdX7w1h70v9iKAndu
EPUqHEdBiwnfqg0KoORvPOhvPPBv/H+9zgeac4lUsXF048SVc1rbO5Dsan1u
O51cuKS4y46TOoLq/ddkiHP3okyfbwm81/+9/m0pe/9l1INkNsyIS0+NYJ+X
JiDaVAwcn+o0g2rGUZ5ibdMq30ZUUHV/IFGiGqKVLQOJXq21zInDeoU8r4Sp
EL0qPmB1+QVlAEWHh91RcejHTlLR1oS1EXTcP3gSnc853aGOdR7tlFHYcSPh
37+fVBA2ECDr7Bqd9MXrwB+l+9fJOglHVHKI/tvtCwvF+o/MnJ3tiP5PSOIy
xvp/KrQ2E+s/8s4Uekf0P6x8Wm2dcDp6XeP+ycuehuYDoqLZl/Lg5Nq6/SSu
5CDli+NQynvMlcQDdp5jKq/6hvS9FAUV8BzfvMyjW4j7K/i6XE0ZjlvrbRfC
cZjrfy5J4sJhoQoz5iFoxtnXJwJz1OaPH555Xo0Ht6WRwyR+PbaFxOE3VVaX
xHWVfs9Vh/sgmqb9j7BfNGRdv+d08t1wUGAx8yRz5+otCpk76ICMhCGZOwfE
ZxbJ8RIJNuR4MFr+LUOOn5R630Dm0de7HWQeoUuXSnvJPOIV2MtJ5pGe11oy
j9DTPyO1ZB6x+4QEknmkp/eTzCPkzEznQeZRnaeopbT7EDoSxq13/24/NNsF
x7ztrgBeu28axVfbkUdjl/ft6DGoD7/g1qVeBcbtJYznwszQ5EI1eT4Gidvi
mMnzMZaFCwvkOa35xbUiEuU9cGVVD3OKSRkEtiq+InV1GpA8risQ33prUQTX
1eotqWaSHbVoVZGvqSA7Feipd5+uKij6Zz3U8yVakDq3PeUmfmd7B9jwvVqy
xXW+YtfRCvK8ncmz8fWKoEEQE5LtIs/b/9c+inhiakP0JFpdcyfWEzCW6NUj
elJ9Qm905tQA8jkxRKF4D4HdMROFkV/on+uEHNh/kOjP4zGxaKw/UEgJPfJ/
0h93zXdXie51CU0PY92D8BCFm0T3BhXjbhF+Xh/wmPAzjFNbOgk/R9apn3++
5xHaVnk59xXW/zW513p2y/37ev4V3+Ni5Ub8bPaj4ULsZxHtsokz8bP/+o6z
iK6+E3meMMEaxVdCN47SGh2ZyfMEvSGxc8RHhy/5ER+NUvfFdREfbXP4uYvj
s3GkFhz1kye9HU1xbGQpTE+CPRU3fpHnOVx0c1S/iVFU22BpQ57nPHvTWqbl
Nor4Fx5E6wt1ovhNMUZPt9QB+5EHGoYtvYjpd/bWnqtDaGFZZSxYufGf96Wz
KqyCrGNSeDkUrwM/d03dI+s4LUiJknX0bXVl8TowkNiYSta5qb9yR6xDE5Jl
fWfbxzwOxz52S8r8qAP3Gys2zd6oQCU6hfamJ6kQXnvC80tVFcStiqLJn6Sh
POfycsFrpbA+NIGdvKfQcmF6ZbNmAPWH619V6R8EuXUvK1fpVEFDla3jHrdm
dJ7a/Oqw/zgEdq3ZVGhTCQaX5Snk/dFMLF2ehXMtiNYx3STvjzrCVS9dEO1D
hw84Cnbpj6ADaSJK3Rnp4FQV7L9drQ4xif8Jj5Slom9/arekKv77O/VKld7b
Ewb7keM3FbdD80PofuGJocG5TDilzuRtdrsBNZycjMrvp6AvfhJt29n+9++h
N/0sd6CVDyK0qzK/e9cg0r+3l8HCJAcE/s5Hx7/zcejvfMyX9snPrmtCxdM/
dpuqU5CruUCtQkkeVPzf5mDQ/4c5qM31yY7KO4bUC/lNN93sRscCuC/mYN3e
mnF6+yWzbpSalVXWXTKKhJjWCjItFf9zneCZWblVKhR05lbSlNLnJmT+ZdLj
u14BnDJZ+YTsowZnzA28j0jW71sh2cf/NT9xdw9eI+sHnzxZiNcH1lO7fMn6
/zpeQlJan9yXoVJ3CL4vSOylkyT31SH7dloe35dWpEg/vi+Yv8Q9zfh/uK99
L2QjyL5UnrsZiPcFthzuEyH70m48VEXy31Q9w4vzDwGxGm0k//9a58RXodWk
fhh4nD/j+oFTlDdlpH62dpZ/JPUz9jqK1A+w+fC1/p/qh9nd8xyp56bGMRFc
z2D3KFua1LPa2oOBpJ73H08m9QzCn0TZST3nJY/G/orvQboXBEx5H42iM83T
hzZ9yfif88+07S39iewexF5f/F5efRStF8wuNxTJgfV/49v+xhn/xv+1jv5K
tnqi/2eMfeip3kNoR3XBQaL/wY0/2rdJ9qL2uyzdHNMj6N3pqnc3Nv07n9vW
+JsQHjszuqIV8xhwfZsIIjzm9VI9JxHr2rROr1bx0QG4wsbmdyjj33Pw/9fi
W0rnnpPnVy7ByQdqn9OgLi1Y/nP/d/hAe/1BzN0crb3dktgTQYMZ2rnnhpb5
cNqBT63EYBgVHX9PeWbfj1Y0FG/ypE8Glzfvv7772Y+YDCLUuFcMo9hnnx3i
jP7tO1yaN7LMLTQj+f6qLZonKSiBt0v/bV0WpNx+oNq+sQHRxA27Ty9TEHOU
tUqGaDasqP+//IjUXz9S/9eP7P6HH/nXeeNC9/blyoyhFzr9x3+87EahmtOe
z11TYUnt/AbLkk7E+9RIk5I0hnyEOZWvfP53PYhWfTlw4A0FrXUw4Fabb0JH
qs9UiD5NBt6/v8dY+Pt7jFt/f4/xr3V2/j3+z//t9xv/On6+rVhWrpGCDlY4
xUZINiJ9Y7XST5npYKQUXEfqcNuL1XK4DpGamlEiqUObeYY9zzDHR4soaH1p
G0IGnzKNnm8rhrgPG9eSeGDVxlc4DiZSP86T+L/Oa5Fzh4ec92XZertIyUYQ
veweTM77r+OZYyRrSJ6jzlFVcZ4hwXmTLcnzhh/vS0nfiQfcouK+A5tBrVek
7za8fV31Cud/06eLZjj/ML5qWpTk/7qtiwGpt1uHPnfieoMNLrbcpN6uRXUG
kHqbHbiri+sNHm3KfEzq7agyozJ5Lh3zfUJjmH8cNm0LOEyeS/dvWhlIdOlU
wukXWJegYQ/jVqJLBxwchUgd3uV/uhHXIYRJ7bAndViXsfo2qcM+62tduA5h
6UKABqnDf93vwb/1sPJvPRz+Ww/z87WH5j7SUMAHnqybIdnIff/HwwmumSCZ
nyhE4hkiX6LVQv5ftX15WI3f9zZCIfNQooQiKhHJ8KlVoZJSESISUkrGKKUo
SZOhUaJUmieqc05Fw2qe54FmTWjQeUgapPye/fme7++9Lu/bn++/+9rXfva4
1rqfde97p8PqgvUbSbnjfSn5qwNsTBR52rv9ZBFsmO2W+PNSLqxktjwm8Vhe
2ppOOh6DRuX7i0g85vb4zRwST8b7zM2i40lMf+WRQOLJA9Nq/m1nrlRBC90O
StUM/dtObtseR8JjqTu1zerdin4QSqzgJzyWYo2SBOxpQNFXt/aMRH+F7hnK
iSEXJ98PUjtrVxD7MNM9iUXbB9wfo69K7INWnK8T4Ru0H3hc2CbYCzNfKxwj
fIOqY9KrCN+AZV8T0KvfD7vlVJmEbzBZ+2tH9vORPM4yNaOeyqsdeLwwUIrk
cXw6W+cQngM7dMbDy96dcERTUJ7wHLakdXgQ3sIhRR53iSo23Eh35SK8hS1v
pwYS3kJYUMIS6iYFh2LUJAlvIdCwayHhLXinfSS8BXj4jLmc8Ba+Hd1WSHgL
79jCFeadFFwIy5MjvIVy5wlnwlvw0sslvAWQ9x1NJLyFgbquf3kLYm1LCG8B
Ln9+/i9vYadZeDjhLZS7RhDeAuTxRvQR3sJg5S87wls4WCxIeAvAv15uC+Et
VPSd0Pr2oRgt4gsO7F1MoZC0aHHyxnQoeNdnSvJTY3hepGqMjS0ZVvUkPzXO
GizrdnFDuRWbA+4w2dg0XqBB8jXJH2YHjSiV4NHtlRPMGRTyXlqatVAMwVZS
4AbJG96JymdeLmZjYV+PB8kbTp3kfec/9v/v8mp2cuBR2xJERq9Z9S828pik
SU+zz4SALbnfST43pP2U03tnNm7YxXQg+dwqqe5RqehqFE0f5PNUZ2PXiGyz
mkEWCP/17rMu593nFZO8B30wdIC5KacaXf849livYOOa5n2inul5YLbMaZz8
n/zHsr5T/S4btSinAfJ/0kD5sjvZzzbVh9Xp/Yz5jNvPyH6eaVx4mcTz/owT
D+h4HneHy//IoeP5Kzf7BBg/CtEkzshmoomNL4V5Pcl/WoN1AzYEX9QsaT5D
4wsEgQsuBF+cFlQ5w6xqQj/f678Of+xFlR8sw9fVtdBuzww0k6/BVukA29cS
tL2s3GA5p68KjonHP1APqENxJVuLYL+vWGqvfjioqxoSytt3k//A6pka5D8w
Rgu3rCD/gd20VLYR/EJNfLCn8Quixcxsgl8a7Z3dp6VV4keVqpAXaf2o+HUs
5ndiJShnPXDfV1+GezNqzIfp+bEOd5ofcKUCrNcPBxwUKcGghTtSuKdQYPmq
I7ndMhNa0m+KkjxOBY+sgc12Cow3Wv66noUwvFy7m6xXQ9OpFfR6QatLaCFZ
L48ira0knyWX3C2jeIYC/5p1qSSfxX90SyHJ611mt5K8Hgz9cLEjeT3Nzxlz
SB4QR1z/LGlgg5337pskDyhrWmNI+EtnDl+1+NRaCzLuWtGEv3Rf8wBjXl4/
Lhj7rl46pQbnB+ZJLHcvAXtvoxjXMDYeqeOyD2kqxexGZ6X4jny4Ndn74DLz
Hiq8vYGLHQVnPvenMM2Xx+1Uaw5EjDJ2Kzrm4e/uUIPyoxR6Om5YtyszDcTW
4teH/AU4aHdh6JA8hdM+2ELkrQwYcl6XlMpVhFZUe+MXIQr/DNsd7NuSOel7
5Tc5/Sng9GeY05/dorzJZSerMC28Ua3jCBuTCz6dsdfKgxsnOgwFN7zHGrbV
WJ51P0r+ZMWMxedDmHn8a1L/lqe9Ol0fXKY5HCP1NUJ1gkh/mqOuNtP9AVUP
bQXSH/+0VboyYRW4ZPDP7NvJbNDImKgN6suE5uPtJWRcVzY9HaHHBWfFpJaQ
cYX+ubONzIOJiNIZeh5AMb9rAZmHHz9LhL+8KMa+OH7RkGUUyDyID+sQpv1d
sfBq0wUFKOp3xbxuLwXptx/u+t2YBjKaLc8l0r/imYf6deYLPkB59P391msq
oXvpQWNZ1T5szGLXbRJtBr3F5ttNFlX/732WbM59liLOfRZVveNwkdmPm/Wh
9pfJBzwYNduxZEUCXIYHZsX0vC9Oh9FHdqUw08aRr+va5P+Tj8XprJR9SqHT
willA0HZaGG1fUrD6snr/38vz/jPO3pKnHf07Djv6E1Wv+tLna1VRB8273gT
UU59BMO1B0zl7Cevf+mpyFoyXvPPRxfT44Wti3u4yHgtQiKtWJUUdg+MTrdS
ZYJ6/6pVMY6JcMtpX692HYVmO9syh5UYuOnqeaPp/pPPz5ayNGMy/3LTMjUe
25Wi0u/ShWT+/36XU5HzLudk7QjyvUxoe/gcnR5zO0u0Ufgj9fvji24smDmJ
/qdprx1rZdpz3ON1d7DvE31+lUel/6gyACueco9XeOCssHYepV4KD+ed4z2/
PBGeTqKf+WTzWQdd/xf4kXtMPruPQmnKhe32Ih6yBmfr8T/xwM1LS4fufqdw
5GfbCn6xOMgcWhI8rPoAucOFLhoNUshv/nLvoahoYHD0J8U5+pP2HP3JgUn0
IW9Kp5bM9AxG6ZV372E3bU++PpvyaX0CyG05G4TDPqgZO2OB2gBFuybXS4fu
xkDk87xSxTpX/KP3+/7pYQq/5zU6qjmEQ2Dup45zJbao2lA6RegXhaEFB0Xm
zg4Bu7/0Ho04eo9ai4rkx3JiMWef070+ev1Hiq3ylHWS4foBtThp21cYIMxt
z/uFQomGd76bEhPg4f6W82o5vhgvoRh8k+5P9WfZa4F90VA4U9Xr3aVHWPcg
aaXjCD3/ZXtuJ/qFgsnsdZk/ltrhLqtVloX0d8e6t6lvbgyk/b7ZCxlWFH5o
vdIs+4GCuti+eZGzkqD/qOzUyI3BaH7Y6ObaHgocXHkSnRcnQPes6tf+AT64
S+OwNj0P8CjzDaPZPQaulG3ZfOyMP9YkzhAU76VAzbQh6odyAvgF3NPbxu2J
ou+7fDW/UdCQuf129cnXYDzkdmKakBPW6NbNsabjsYvhA4/nMWNA5Yzy/KKi
AHTR/25eSMdvNVtyrE3bGRDVsFJRMM4LRWxl7h6l+5N7Snlu/plE6OZPH/Rw
cUWhjenbJb9S8L7bQN7fJgHS5k5E2wrfQ7WXJRZe/RRU+FY5GU5LAOZ8q7eb
vyEat8h/s3ajwEwycn42jRceir9cObQ6CK0vr+U3aKbAUGyBv8m1JNB6sfbE
dx8ffF/ojCs6KPi07JiKiAQLXFRSXalNj3DH0E2X+E903NgpEXZXggkP5z/W
1ox3wGGPPiWJbgr0rU609p1gQK+ky+8N1lZ40swq6Avd/wztrSurUhLhM+Uo
cZdCjObrdKx9RMFSu5d6CzelQZ5O0j7ZjUzsLbNhRKZQcNpV+Nqy6akwcjIn
S0fmFV7Mv71As5qC1X5rjA9efAuWfZEuSR3PsELmRoIIvY5hvYIMydwUqI05
pXfBx532f1To/iYKSq35skcbkmHp8m1bPyx3xM1zbXQCP1Kw/2xGX4hPEuzd
F9FWd9AaawLVnf6h5/9KyzThLn0WrJyulK749hbOGgl2GW+j/Ve+k7jw1iTQ
/EtnbDlHZ0ybozO2iqMzdpajMzbu8B+drqMcna48jk7X2vtqboSfoLtzS5hi
YgeyZiQdJfwEMx59Ww2BZtRx+Cf4NvaC3QwNrpIldfDR4WN976dK7I281LAi
vh8WXljpY9teCfnvB3oJ30DfbwvhG+Cr6kADwjdw4o90JXyDgOv3Cd8Ad+42
fUL4BrnvBoeKzD0w6mfNQi76XMTKmo8JSQZCfE/tCCmfPv/fcpAp458g5dHf
+n5nFz3ABKb6C6LzcKUpo9TF3htu793AnUOXc5WrkXK4nJBTR8rn/aVPlcLR
pzrG0aca5uhT5XL0qXjTgooC2iqw21FpD4OOH+olN4V2nisCF46uQsJfugq5
b+KsX9L1ty+at5muj/u5uWS66PozODoDZhydgfkcnYEczr37Ks69e2XOvXsT
zn1hT8594W7OfWFpDi7+8+A/uHgLBxdP5i9cO3kOk3igtK3uCh0PgE+psjuJ
Byar/3H1lAfEbw6kKbrRfhNXH2i6TPxm35UnwX980vBYh8h7LzoOZCudDs8K
SYWKS0713usZuDQ27rd+GoX3BpJMX0e+g7uSpY/lQqKRqfP918di2h9ZWB6N
bX8LkmI8rUsXeuNADVv4TQOFTMURBzvZFCjccOmFTqcb6jpnZHc303YYfssf
M0mGfpmhbkGueygUO2NhOO3vbpqmz5mzJwn4LTrMnflu4vriX80fOyn8pB3E
sFjPAhmbCZXUy8Z40WAJ4xtdPltw3OGcGAsO/nUuBDjnotF6JLwtIR2fzQzh
m+9LYYegdrD9nDTYoZ2U/XQTA3OucW8szKDwdOtPlkLPW7gYeqQxJCIKDwif
KjhSReGsnEGDNUtTYIW08PVdW13ReHH+zO2fKawtNTs9xs2EnT9ODWtZ38Nr
RfwRa2j/lTOUsi38HANO2TY5/OixxFlzbKZupf2vf/NbvqjniXDNPL5+fL8R
So+7ah2m/S/rOk95dXIC7Pn92nmaDOLN6cddQ59QODX44u4omzRQMD5SnenJ
wB1aAStnZFK4fVbvhZFdb2HAWbKPeSsK9x4eV+d9T6H1oIjOnAdJ8I+x4+/L
K+/hribYpdpPobi0yvNA0QRw5L7QHadvg6d8bsd6syna3vAe1vWNh8SPq2cN
c1mi7RTkWUOf02WuJusDE19Do1FNxm7qKibcu/tqCe3Hs+aGWzoei4blV/wX
LBrJxJdb3q6eYkchtcnGam5MOoR5p59jpTFRca/3oaZ0Ci0Mc7Jqf6XAM4vG
Mq0D0Wi6yOGyCL0fPnDn9bavY0FGXHn9edY1nJ/3u96Ybr+giPJJpaLgp9V7
F2wxRN3GmrLiHxQW3YtasqknBvLkf3zV27QLTjqr74mn90/4s0OquhnJkCM3
0uzh9RallXSl4l5ROF9FecS7Kg0sVRwUV6vFo3j43tTlZRQmRrhERBkkw6BG
mXBQzj+Q+35s+mna/pQ+U1KQlQmGRWj2XFbpGtibKs0zoeOKGzbVH+BYBByO
29ajkZqC7QekjOLo/VN/8/Jze8lMOK8zJ5CtqQ8LfXrGDk7QDmWR18ukFG9Q
Lj+6vHtxA/ZPDazYGNYHp+/umxBUqIXdkvY1aeMVaCVnqmvW3g9ThwIqsw0r
IeHRyAyBvkh8IDmuXEz7i/O8x8Wl3JmwcZFd4rb+INwrOMArzaYguFUlRUEq
Dgy7C8KSxXzRzUFuw4lhClROBE5h3gqFezYfQr/nPUFb6zDRJtp+Pi26NV50
yR9Oxi5ICUxxRFWQF50zQUHQOhXf3+5eoPOXPczi2MOxC9M/bRQrx9Qg9RMd
Vmyoyb4jkZlfCOfmZ7vwerzF83dahFM9KFgvW2X61TMTZq5ds2AWywd5yhWZ
HnRcoXuuZSxrRjRox2VoDaq6oXx98vPiEQreBC7pYp4MhSteelF/cmzxR/ei
V5l0P4OOmOgbzg8C6ReH3rXbnMWdKyPvGdP2XFY6QXwixg+4mm5EqMWfgd5s
P4t9dP9jIt7Lyfd5Q+jOSOEEk3yEnUeml4hTsDnq4Rpe7WzoX/AzbS6+Q3xo
piPiTwGfvq3MQdd0uKQ/rz82KB7V3/Uvdimh45Bc/Rv2Mcmw4epR7VExO9TS
CBQi79pIxVaqRvOGQvUNx+wVAlew1qJD8OYvCqp+/bn7/d0rkKjA8371c6DE
YSjxGl1fNfvNtlTrUJhY4Dwk9/4O1Oh6fpboouC4YNRXzQkmvHx5OlwqOAuv
xL/PCbSg45zBFdtD/DJgVFgt3X01C7nUP7nuSaX99aw3sb2Wb0F+68eNC25H
o5yFxReLego8hLjUFh9nwWhBFrt+7k10Sw+ctm+Igr7977S+lkeCxp8fwWEN
l3AxdPQsovdD3bnNjHPVEbC5ZVFO3vOTqCAlLdszSMHuxHURKQHR0P82/viU
TAaqvd3TEZ5BQcBG/Gru+BZ4dVumvHKKQu6HbRcz6ijYI96QohaQBDPrbVxs
11/Hzq+BevfpeLJc4Cdv3pk38OKwlt7sUDPUsbM4FU23H6QjYKTdEg0KXxv0
liRHodDoXIeWSgqy69pOhexIgQinHbWafH64TnuDLou284+/b6jDG6xJ3zW4
bexYu6vJF0s1tSRO0HF4UUWUk0B/Ilx4+mD+ss/u+Hqu6T+RtF2NsXpSr/Br
8ncBNDPz8j5K+SJrdWn2TNruGSa/rrVsfAMSX/IdBy8/waX7rlvL0PH8gb4L
VodCYkFG6eH5R8KOqNLIlnShcQ1v4Xrb+MfRkDAJrpnG0UHV4cRXuZz46ttf
eMeFg3eMp8rvNLLyR2M+nbhQ8p7g1JC6q2JvIKzCVQkaPTG4+VrxZoKnptW9
8amMApX+366ty52xdi5PPBeNL0xiRIf9CsNg2/jufbYfb+NGQ4FdcjTe2d+h
lru4/RXYToJ3fqbcVVLP78TTUQLbJIa+oGDBAfCMLYeu3WKO4vR5VzN120+f
dxRceJhBzrvN7ZOb8uzCUexqfNGjVjqOCi7qvyHFhPQuj9cXnV7irLPME7n0
PB8SdHvB7/EGePdIXvcy9kavudqry+j+x+gNW1elR4L7AgX/CzNdMWmBHWU4
SqFVXfAwn10INGvv2rVK1RZPC8V6cP+mkME7W+HpzEB4dk3c2ZzZg6yo3sTr
Wm24VahWRptVA/v1vosTO3mK25PYSZRy1N1P7GTTlcVpxE5OdWkldhK9hkUL
iZ3sFHMIIXYyUQOInURH6VsTDNpOfmI0BhI7qfU6nNhJ5NtzY5TYyekCMXHE
TirMVyB2EvOOaz4mdnLOX/EkixNP+v9yaPOxjsAdDyoLlGn80ttevXNWKRO8
VhsxW7QC0ORO2ehvGh9d6plRcyH4DfRE5sW9mOKN66JMjU79IO8i2We+exEN
Bz3jpMTO+KLASEpxBI2bwkd5DQX44+GqgHa8wJcnKL+qdcOr7xR8sK74kywX
B/cTy8t0Mx3xwz6TzAa6nYNGlwSyj8bAV+6D3Nu7fFHFJzxx9xcKBk0qxHaO
JsLGOTXW1T3uaDT8OPAljRMv8rKM1CcSQCUz8k7pDme0Nv1acJ/uZxTPSY1p
Z+nzsuzppwRLe2StUQV6f4KAJmt833g8uPAMhujm1WBIYc4yI3E2BPGt2U/N
yoRrYaKL3UQz8HjcPpMuLwq6vcx2PzNPg5igwVkii/yw45hZuCWNX5DPdv2E
GwtoM6FuyfbAn8s+HPlB4527A3wpyW+YUJA71X6WtwuWeKrJ2n+mwEQ6e8mW
fgYYpm/t6f1mj7X7ei2e0vjuRt3aonIZBnzyKWi5UGWJeTv3NBP823fpVkl9
QCLYxZzUulKWhhbHR9asfEFB/DWle9fqUuHjXgOhA3sZWNzwnHmWtreL6rad
a2x9BxLVvoyKqBe4sIXnodR7CgR3LMlK60yBUyYS/5zO88J83q3Krg20v9Dz
KbNVSYEl34PXrhVyQ72VObJyLRQoJ7yKFNdKBu6cuSa5sfY43euBhGA7ve4h
nvOOLE8C1qxAo9ouC2Q4ihiU0+Nt04grk6Tx7B6usfszjC3x7EbuQ0fo+Yl0
9P7kfzUJ5nDy9fx/5etHQ1dcsG8+AgO+n7Nb6XM37vjuyd7b/0d36NFfukMS
Ldk3duV24omA2AyP6m70cxZZl/4o8//Si1Pi4JqsVhPqdFw33j22cEg7qRMs
VdsaGV65UHm224l8d29VEfkuxBxv8iffPfAX3jTm4M3//rcs/kuHx0dP1SDE
hsLc8KxnywtzMX5ta+GnL4kQPvu7Eznv5o8rGPR5h4Ev87aR8y78gotKGezE
PcsXMwuqvsCdNM2wMfdyiHZV4X6k0obHuN4Izjvahx05jwbnnUmdVId2+ePx
6Qb0uPZqMxrocWF1TARFxnW7R8OSzE+jWUoaPT9QybgsQubn54pVU0j7qtOE
19Dtg2/x2h7S/mQ6q9YRS7PixNho49dU9lq9ChSPXPJ/LVkE8nVOUeS85FCh
S+nzgs/m6WmS88LDwYkXOThxAQcnFtXceGoQVYFzHyrfNunvx/sKfrnDMpWQ
8Zdu2z4Oflx9VmdC+R82ao465xunVqKssYKUunzRpPp+k73TJOSr/++6tJ/t
ekqvCyg1lxeQdfmv3u/Gv/R+/wdL1ANr
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     GraphicsBox[{
       Thickness[0.13175230566534915`], 
       StyleBox[{
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJnIGYC4r6Ibn/GAAmHCE6xduP1yg4wfuAt6ZrEIhWH
NgV21TNXxBymtLdGXZZRdTAxBoJiETi/8v6PW8bdQnD+TBCIFHB4krjwmsl6
FYj6zTwQddbKDi3itayZbDwOpw47rc2sU3G4zntbLNWMA64/DQxY4PyXtY+z
z69hgPNZ9H9xXer5aw9Rp+JgkaRrx+rw254BBB4oO/wHg+/2tzVl1/xnVnaY
d2Lykmy1r/Z782vezpyqCOfzxwbcNypH8MNB/o9XdNggvU331Juv9iu/vaw4
46AINf87nN8Mcv+xH3D+Nq8NFnN+/rBPBTnHTdFhBsj/kr/sQd42vqzosBUs
/weqXtnhDAj4MDj8fPv6gOViFQe7Esfa0zIscD7EX2xwfuHykg3/+NkdLlwN
e6NvjeC7TGgWSutShvNh/oWYx+aQDjJGTAkaX6wOHxatVzgbAXM/k0MFON5k
HWQ2is1nesDgcKB7X5PJYkkHsLuNGRyEKyeVnE2RgLr3n/2OYKuI/+picL7G
J5WXs16Kwvng8HcQhesHp4OdIg4HweYywvmQ+GSC82NUI2TO1bA4KOxasC+V
TxTqH1aIPmYxaHpidRABu0cM6l4OB/c1R5czzJCF2FfM6dALSrcb5BxegMx/
wwkxd4+8A9hdDVwOa4V0+NLjFBy2g+ODC+K/Jwrw9FgNCo/Xig4FIPv9eRw6
bTx3pSkpQcLlMZ9D+eFtrjN9laH+EYDYe1nZoRWUP0wEHXQV5b/kiKlA3SOE
Fp8icD443DRF4Xywv9+JOkjNi9M8PUEFEp49MH+rODxwjXecJSjq4HOC3Xa2
KVS9nwg8v8L44PjVQPDB8T9NyeHLvo9b081EHcDpP1XJIeTt5Y8zHiL4HqBw
tBCH82H5Hxy+PxB8mH0A27jEmQ==
          "]]}, 
        Thickness[0.13175230566534915`], StripOnInput -> False]}, {
      ImageSize -> {7.593006226650062, 16.338709838107096`}, BaselinePosition -> 
       Scaled[0.32439307852814453`], ImageSize -> {8., 17.}, 
       PlotRange -> {{0., 7.59}, {0., 16.34}}, AspectRatio -> Automatic}], 
     TraditionalForm], 
    FormBox[
     GraphicsBox[{
       Thickness[0.1287001287001287], 
       StyleBox[{
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2,
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
           3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{6.281249999999999, 
           11.2953}, {6.281249999999999, 12.512499999999998`}, {
           5.8999999999999995`, 13.6922}, {4.921880000000001, 13.6922}, {
           3.2531300000000005`, 13.6922}, {1.47656, 10.2}, {1.47656, 
           7.57656}, {1.47656, 7.028130000000001}, {1.59531, 
           5.1812499999999995`}, {2.84844, 5.1812499999999995`}, {
           4.468749999999999, 5.1812499999999995`}, {6.281249999999999, 
           8.590629999999999}, {6.281249999999999, 11.2953}}, {{
           5.184379999999999, 9.615629999999998}, {2.6687499999999997`, 
           9.615629999999998}, {2.84844, 10.318799999999998`}, {
           3.0984399999999996`, 11.3203}, {3.5749999999999993`, 
           12.165599999999998`}, {3.9687499999999996`, 12.881299999999996`}, {
           4.385939999999999, 13.4531}, {4.90938, 13.4531}, {
           5.3031299999999995`, 13.4531}, {5.56563, 13.120299999999999`}, {
           5.56563, 11.975000000000001`}, {5.56563, 11.5469}, {5.52969, 
           10.95}, {5.184379999999999, 9.615629999999998}}, {{5.1, 
           9.257809999999997}, {4.8031299999999995`, 8.089060000000002}, {
           4.551559999999999, 7.33906}, {4.1234399999999996`, 
           6.587499999999998}, {3.7781299999999995`, 5.9796900000000015`}, {
           3.3609399999999994`, 5.418749999999999}, {2.85938, 
           5.418749999999999}, {2.4906299999999995`, 5.418749999999999}, {
           2.1921899999999996`, 5.704689999999999}, {2.1921899999999996`, 
           6.885939999999998}, {2.1921899999999996`, 7.66094}, {
           2.3828099999999997`, 8.47031}, {2.5734399999999997`, 
           9.257809999999997}, {5.1, 9.257809999999997}}}]}, 
        Thickness[0.1287001287001287], StripOnInput -> False]}, {
      ImageSize -> {7.772871731008717, 16.338709838107096`}, BaselinePosition -> 
       Scaled[0.32439307852814453`], ImageSize -> {8., 17.}, 
       PlotRange -> {{0., 7.7700000000000005`}, {0., 16.34}}, AspectRatio -> 
       Automatic}], TraditionalForm], 
    FormBox[
     GraphicsBox[{
       Thickness[0.0697350069735007], 
       StyleBox[{
         FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGJ5IIaxWZDYzFRgM0D5DGhsYtRTyw208Au1zAQAXAYC
mw==
          "], CompressedData["
1:eJxdlHtI01EUx+ejTVO3OedsL7efc4mvCKdmD9rZHxFKpWnUKEsydYiESJJa
SpCZoPTAzFSGRUUaWSrZqECzt+UsSOhhkoJBSRpqWQrm2u/e7fzAA5fx+f12
7jn3e773x2QXpud68Xg8D+fa7VyezjW6JcvUPKOB25IYoSVUAz2F5VNNCVoo
eWrb0hSrha3tz1t5/Vqws7EtDHkkUt3uqNQh7xxWlh+cDYe2PxOldrEW6qur
9g6p9HA/Y4PZ0apB7qvtPRlfGYr8u3fmnuWoGrrXzT/JqQlHVrQciBwQcyze
nzYa91IH5aPzw4YBNe3HqoNMvVn1ZlGN/ZD3BaG0/+06qNIK9PZuDUxf7dAO
toUhHyf/Y5D3+MqqDee08M/hjEeh9FyNaog3OOOukp4jQgFjrF5dIbR+ezBI
y+qKB72lyDRPghwxGz7RnK+ANFafuihobGJDAd6+NZpDPzk+FZDaUa+PpvlJ
HJP6QRzn5DnjhhyZpDfJwcI+50fTPi1yuHRedCzxVhSUseesDQT2dd6LYPA3
CVMaI/2AxwbI4EPAZ1luoo+LVyETXVVKZHKOSBXyrqmhmUaTWx9/6puLDJwx
16Z6TAdQnYrCaL18IdxkfdHHMfHbGh1y4qae9AZTOBiLTRUDmX7oD1WX7LLn
GB+Z1DMsGt3c0n/hesHqOSPRrY1BFrF+KeGYzDeLgU6lLfb15JyR9AMMJGXH
bl4Bf5FtKZ1J1oV5ZJq/YCT+MTPQQfIXjKT/Owz1y4klIznvYx0UtRZ3Lom8
YGHqR9/6ay7/NvCRSf9HBMipX5PfJQT50vNZOSZj/aRDdu/vZjLXjTrcj+oZ
5rqnnuhfN5cSH6iQyb0vUiKT/C8y+F4xXvB20hcmTx+ujVMGQwaZcyD1+TOp
6x6IqR+SxaBnf18JwUr6XUnnpRXCWdYHa32QSR27AJn0/YtPvwfjHJP6MSLk
b8vYQe4nx9RvIkhjdckQYH8fWZ/aBLCP+FhC/TwSBJqHV3pzd0iovg+kVNdA
KTKZ1/sQZFJPo3LtK3f5XU2fjzrvNasPo6F6Bqph+ff0P83ES5k=
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4jmLlHf+Oa7h0B/R7c+4QdghISRIfYEngv88
S/vbdFsNB/ldC/al8gk7TG5vjboso+HwZd/Hrellgg6vireK/n6t7hCtGiFz
7o6Ag2iP1yuWK+oOr9tyu41mCzicOuy0NnOeGpz/AmReLII/EwQ6leF8Fs4u
+eR1qg4xIPNqRByO7drRy/ZBFWLfNxGHmk8bArJnqTkc7N7XZMIs5rBJL28x
4x01h1YFdtUzJWIOKbF33JhvqDsIV04qOesi4QDznwiIzyIF5+8Itor4/1wG
zv+waL3C2QgFB5l5cZqnDdQdHrjGO86aqOiQmf+h9aSJKpyvcu1RMIOPMpxf
ff/HLWNuJYdwTrF2Y3kFOL8GRGfLwvkR4PCRhvh3pZLDAZD7F0s7dNt47kp7
hOB7rDm6nMFCGc5PTwOCbcqQ8JCRgfPB9gfKwvlzQOb+lHNwntAslPZKCc6f
AaJ3IvgMIGCg7LA3v+btzKUKDo8ixLdfdFCBulMREh7sqnC+xNQrnBlNanB+
C6//+imu6pDwniIP58PCE8YH+3OmpMMUcHpRc+gDpScDcYcNoPiyUYHEZ5iw
gzIoPG2UHHgc+bxmZPLBw+s6722x1G28cD5Y/TQE/z8YcDsE3JKuSQzSgPPR
0zMAezFAZA==
          "]]}, 
        Thickness[0.0697350069735007], StripOnInput -> False]}, {
      ImageSize -> {14.335043586550436`, 16.338709838107096`}, 
       BaselinePosition -> Scaled[0.32439307852814453`], 
       ImageSize -> {15., 17.}, PlotRange -> {{0., 14.34}, {0., 16.34}}, 
       AspectRatio -> Automatic}], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 99.999993}, {0., 3.1415924291903177`}, {-171.2568494600514,
    0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7487798984649*^9, 3.7487799351533413`*^9}, 
   3.748780046513255*^9, 3.74878023617183*^9, 3.7487804799135427`*^9, {
   3.749163381672839*^9, 3.7491634003646603`*^9}, 3.74916401053502*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"ff222073-e078-4441-92fa-4eab418c5159"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rr", "[", 
     RowBox[{"2", ",", "r"}], "]"}], 
    SuperscriptBox[
     RowBox[{"LegendreP", "[", 
      RowBox[{"2", ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "2", ",", "rf"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"MaTeX", " ", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r\>\"", ",", "\"\<\\\\theta\>\"", ",", 
       "\"\<R_l(r) P_l(\\\\cos\\\\theta)^2\>\""}], "}"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.748780491553804*^9, {3.748780614078519*^9, 3.748780649047656*^9}, 
   3.749163412228293*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"d3b5eddc-b01c-43d3-a64d-53d2ec787ea3"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJzVnHk0VWH790+GaC4V0oCkhCKiFM5JZUrJECVJmtCggZQoSiVFmjRPokGD
lErKpkGDBpUmaR7QQISQ6rxP69nfa/+6z/LHb613rXe9f1nrs/barv3Z93Xf
133tvY+2X5DrdDmRSDRRUSSS/89fPYPVx/7zV2J7b9ORMT3irT8naU3omH2f
W7vL7ZZI1FOG93ryzk0kMpbh0a+6DheJBhGfeDi28FvDXe5DibuJSGRN3DtQ
PHjOuQwuqe56e1GkDfHlMy/1m1B6gHu4dKqySGRLPOO+dsf9pRu5vzGLIh2I
v3zjXPThyUrOJHp3nVTqRHx1+9TxUZmh3IC/XDyW+KR0bsW0jnM5h+uB1VKp
C/HDr43fW/ycyk1RtvgmzXEjbuU4f5vRxoncEkelL9Ll44h/HO5xv/sBN27j
+sclUrEn8ZFr4z/on3XiDt87+E4qHU/89c8OdhuWjOTgOeHXzWdaF+6IWc8s
h2eWwzN45S6f/e6nbpFn8CvLZ2Yq5KaTZ/C7kzQTt6TtJc/g81d27tL2VDx5
BteL32QYIooiz+Axu17er3YLJs/g+uEdh+heDyDP4CHJDssv9ZhCnsET8pab
3d7nSZ7Bj3WaaD354VjyDD79QMZk+Z325Bn89zaXR1Yzbciz05onpZoXXsh4
Zjk8sxyewTW/NLa++pojz+Axe1Z5DBmXQp7BW1a0GLhn3ibyDJ6c+2twybwV
5Bn86JdUfVFQMHkGl+uxZJPPXH/yDF56+F3JzwYf8gweJSlWm7bZnTyDt/1h
Myx2mhN5Bu94cWLh7kEjyDP4zR1HdUdstCLP4PEttoQM7GFOnvXsk9Ofxn6U
8cxyeAZfs/d+9R/r6+QZPLLFjGNFT5LJM7jt977h0++sJ8/gelo/Z+38sJg8
g8uJE/78+uBPnsFdTzzN27F1InkGj5lykFsfMZY8g1etMZZbXzaCPIP7VDcU
Xrg+lDyDF81IG6ymb0qewdstNPF85GhAnsGjeq8qVqnVIc/gP1+qn8oo7k6e
U50mBWle+CrjGXxnXfnM2KPp5Bk8OWH1+2THcPIM7rIiPmR/pBd5BrfKUTpS
5WxDnsENVrn0nn7EiDyD33iyfsW7I5rkGfzS7R1FY2M7kGdw+ezc/Bv1CuQZ
XNMoo0p7289seAbvfnhlWtzRqmx4Bi9MujFnwuSybHgGb9ltqWWe19tseAYP
NWkTvmxKUTY8g3+x8klb9OthNjwn6q1LPFNdJeOZ5fAMHr/0+11z8RHyDF74
56n2iXOryTN4l+Rfh5ZODSLP4BM8/4ivaU8kz+CTx1ucMuo5ijyDm343e3Kx
vTV5Bh/fo4uXdcMA8gze3kS38set3jSewQ8o2DWzs+1B4xl88JLchV7vO9F4
Bq/qaZBvmdOGxjP5MVyVvy1XkcYzeEpk3fvtI0U0np+mzgx5Glsr45nl8Ay+
ufddcb3JDfIMXv1y9NDpF1PIM7hN+IDPQ5TjyTN47FstlV21S8gz+L1vV182
+xFAnsF/OF4/1eOaN3kGnxOVljbDxIU8g/t2XXeo6O5I8gye+b171IQ6S/IM
Hu8UET/ilzBvgFuc6Walu8iQPIOfvdbK5XtBL/IMLlI4t6WvjiZ5Vu83wr1R
u0HGM8vhGXzI/E++v6UF5Bl8wvG/dd0J8gxeMOdvXbeFPIOHBf6t66LIM3ha
4d+6bj55Bjf48Leum0qe6Tyd/tZ1nuQZfPK5v3XdGPIM3vjub103nDyDPxrz
t64bSp7B9e3+1nWm5Bm8dfzfus6QPIMv/PO3rtMlzxPStEw1L/yS8cxyeAZn
xzM4O57B2fEMzo5ncHY8g7PjGZwdz+DseAZnxzM4O57B2fEMzo5ncHY8393+
J0ZbTyRhPbMcnsG3MfMzeDEzP4PrMvMz+FRmfgYPYOZncGtmfgafzMzP4F2Y
+Rn8ODM/g4uZ+Rn8FzM/g39n5mfwY8z8XF40e/GZ6mYynsF9mHoDfARTb4DX
Rf1bb4BLuX/rDfDc6H/rDXBvpt4Aj2LqDfCLl/6tN8Dz+v9bb4C/PfRvvQEe
ydQb4AVd/603wLWZegP8GFNvtOlaPHNkjryMZ5bDM/g8pn4Gn8XUz+B6TP0M
3papn8HLrP+tn8HNmPoZPJSpn8FfMPUz+DCmfgbPY+pn8OoF/9bP4LOZ+hm8
mKmf+3k7eD6NVZTxzHJ4Zjk8gysx+0Hwxcx+EPxX+b/7QfBEZj8IvoPZD4J/
6/7vfhC8gNkPgs9n9oPg9bX/7gfB5Zn9IHg6sx8Ej2D2g6P3nLcN8FCS8cxy
eGY5PBNn+hvgHNPfAL/O9DfAA5n+Brgu098AX8n0N+h4pr8BPp/pb4CvY/ob
4IeZ/ga4L9PfAG9g+htBr3TNG7VbyHhmOTyzHJ7B2X4dONuvA2f7deBsvw6c
7deBs/06cLZfB87268DZfh04268DZ/t14OjXufU2y2gmUpV0KT2R1fPCJarf
4J/lu09c+iDVHE/84OG8mTOf2tH5wfu3+lGXc3wEnf9V9lxrE0tlCXt+luP8
4Dg/OOKPKb02bOtVezo/26fF8eDs8ew4Qfz4v4i/dGj9WnlRW4nBpdBlvS8c
Jw89rU+9l24YTzyuxn+5yyNbOn92uMh5/7zmdH5wdh7A+XuPccxSTRM84Pzg
OD+8sfHgPIn9Nl8ZfUtJ5jzU761zG/q4lR0d35QH/N/FR1/EPRo5ko5nPeN4
xIPjEWdT10XjmY8HfvJXdNd/FvtYzHpj+8NlB9dnikR9ZcYn5geWn+4/92Az
UXdJ2/p2XYti82TOw/5fnIflOM9a0bBRGdUPZDh7X3B+1lumZmWuKFK3yePZ
68Xx7P9NKDOyE+Way5x/nGXXlsUTzGXOc/1VaYfE5QOb7A/nd7PW7XT6PXG5
I26LM8yNmux/Zq7W9b394QvxBy1cVONKtZvs412sGLdhs0olcVONvPLTNXoy
facV+0q3eTkbyfRJ3i9Kz9pebiSzr8fx7D7UnD9/U/upLLMd69PVhfr/Ph9/
U/uCwNtDwm/qyRGXHv6vn6bq2JKUGsdFZgrEr/L+2brLnb9f7PyA+8vm6bEO
Q1QSQ80lWT3rg33X5tP1Zh+eHKFw1EyyeG4btfkNRcTN+sxqdjHXSNJDu/PZ
qYHCfdzR3n3ulmxTyZGepqqvTd4R97CQ264s1ZbUdrPuuT9TuI8z7RePNa/s
J9l5M3RVQKpw37/qXJ3L6RpKqsSJ2WVxNcQvf0wrWPbRSPI2S62tUVfhftlP
mGiRvdJI4lhuWi3ZIdwvx/ZaV7c79Zdc2VQ5e8cbKXFpXauM+b+0JXbFBcnW
/+O+zK4IsTD00pPkvAz/cKheuL91OmXK7VLMJNZjp0YH/Rbm4SuuV4NHp5tL
jm7yn3unTQsZz2weNeW5qfxqyn9TedeU/6bysan72FSeNnW/msrfpu77/628
bmqcNJXvTY2fpuaBpsZVU/NDU+OtqXmjqfHW1HzS1Lj9fzXPNJUX/9v5p6k8
mj9h1V2RREsmL9T1+p4SRRrKcN+lMxxEvgNl8i7DL3OIKHII8RH9Hw/arH+N
OM5T1s9hmYH9ZU5BV1FVNFZCx7+tzWqcNvoUcRzvMOzwlarKY9xJ9ZNtRb7D
6fjZ7abeKnffRxzH3zTPMk0v2smNb+2pJJonPK8/tsXVR6MsgTgd32tVo8bP
9dzx6iP10g3C8/rj18um6p9fQhzHH1hXcmBTi0WcR6lLlXSfMx2f3NxEaYbZ
fOI4/kPg78Kty+ZwkXN+10g9hef7o9o2f3306kziOH7CuHF5KydN48b9Pc9r
Vzp+6pXgp/5vfYnjeKs1LTSSKrw5/SmHyqUz3en4F31ufNXbNp44jh8i/zDz
iso4Tvr85yfpN+H9gU7RDzOXOrsSx/FeN0LOtvNz5h65O5dIQ4X3Ch5rvVia
lzmKOI4fJLE/mVpoR+OKnT8xrliOcQL+3Vuzm3FeBo0HcLXJj79Nyd9P9x18
d8s+Jzf1FO4vuOPTNcEXAqLoPoIbnn2U7xoeSPcLPNTW9OK4C1PovoDbKS1L
ebFkPPkHvzbJevcjPxfyDF4pbj043c2BfIKvkVrovCq2IW/guaWHjN4lWZI3
dl1A3oG/nDDbcqrJefIGrrJ6XsvqFrvJG/jC7kVTdqeuJm/gf/bdndfxZgh5
A69L79p4LmomeQNv9mXt5Pg3LuQN/ILqD1+jcjvyBq7s3H7zmFUS8gbe7YT7
av/Fg8gb+PPON9w81AeQN/Cvmnb1U0P6kjfwhHaqtw3cdWhcYb3LMtnmurYu
kbyBDwyZUtAvcg55A683vpXs9MiFvIEr1A9uEVVoSd7AL3Bt+/mfMSBv4DNC
5o5u/7E7eQN3VS9QGn6pOXkDL4o67JU95082vIH3eD7OPkWuNhvewFcvnjlj
SFF5NryB21c6Fh/I/pgNb+AejS8vDTd+kw1v4B/dQle83PIsG+ONXffhEzy5
6HTdz5NXySf4aO8WZsvtd5BP8KI+21qt37CMfIJXJk7qtCLDn3yCb/iq2HtH
tif5BF+0fmto7V4H8gn+KHN3i/7hpuQTPDNYb4p6J30ah/S8uFdw/ulmPWkc
gn/lVmbd39KFxiH4WD9JRfUBFRqH4EEpw2I357SicQg+JfRM+aAOipS/bF0E
b+COJn4PbxlnkjdwBavntQut9pA3eo6slvdxwME15A1cu4/L2ppzi8gbePQT
tbiVK/3JG/her4dpe5JdyRu4defcLYnV9uQNvMfqu4kRQ4aRN/CD++4qFSwZ
TN7Ag9NXPnpQKOQv+PZQ9RXb1+uTN3Cf42b7e+v1Im9sfQhv4NPMpke0Tssl
b+D7B/ytN5LJG/j2+r91RQJ5Az/Y6W/9sJy8gYdv+1snzCNv4D/y/9YDE8gb
+IoWf9d9F/IGLlH5u77bkTdwk7y/67iEvIHXGPxdrweTN3DtNX/XZRPyBq7+
69W883cNyBtbJ8MbODvewNnxRs95mfEGzo43cHa8gbPjDZwdb+DseANnxxs4
O97A2fEGzo43dr+AeY+ePzLzHrgHM++Bf2DmPfCfzLxHz3+ZeQ88kpn36Lkw
M++BX2HmPXoOy8x74D+YeQ/ck5n3wMOYeQ/cn5/34A37o9nM+gt+P/jf9Zee
hzLrL/jBun/XX3reyqy/4M2Y9RdcgVl/wecz6y/4k6J/1196fsqsv+B/vv27
/oJrMusv+EZm/WX3ifAGfp2p98BrV/1b74F7M/UePT9l6j3wV0y9B/7t87/1
Hvh+pt4Drxvzb70HLs/Ue+C3mHoP/AFT74Ev5es9eGP3yxiHLIc38HfM/gK8
JbO/AE9g9hfgVsz+Alyd2V+ABzL7C/CBzP4C/ByzvwB/wewv6Dkvs78AP8rs
L9i+AbyxHN7APzD7d3AbZp8OfoXZj4NfZvbd4LuZ/TX4S2YfDe7O7JfBzZl9
MXFm/wvuyuxzwU2Y/SzbV4E3lsMbOPoh8AaOvge8gaO/AW/g6GPAGzj6FfAG
jr4EvIGj/wBv4OgzwBs4+gnwBo6+Afw4h31t+KV9S2YfwT7HgR8899lr+lqt
YfZV8rPtXc2v57FnxWt7h/jVJKeRH0P++cvxUdlrlNL3kp+xM1o1739htzgy
Z/XUM1mCH8Qz5k3nuP45wrhCPH4p77e9MA4S1s0QU8uz1ZfFTmu3Ri79OZ38
IM6gK5URmvmTyQ/i7P1DedGBtZ7kB3Gq2w26qXrHhfwY2PrXx5U/l/HTSvGn
8i/tIhk/eJ7lKi8yP6iYI+xPh6UNsc0pFLtbDvfVSTlKfvC8aW6P84PuuOwg
P/45Dyf21Lsv5qL2jP+lJeSdIR+Px7CFHnffzCE/iOfiHXnp+RvTyc/nq+u6
BHo8FWc+HGo1SV3oRyHO+ik7270eJPSdEGd82w4BTvFCfwlxDnlo5Xe+3Iny
LpCPs2C02tBDZbbkbXuf8gttUz7I1LeLS5blhxe9E+vl7PXa2HCbvJXm3Xh4
pvqtOGOL5NVhy3Ty5pnSvvhzm7fiilDbGXXS3eTtevSE99p6b8TSsro9QwfF
kbfZN0c8TY9+JR65puaZ5sZI8oZ4DGf1spyYMp68KSuZXxmZ817ceLlt/tS2
7uQtlI/zZxd/ceInZ/KGOAdpKJV8muRA3hDnpi0/xj4fPYK8Ic5zPazuNA+Q
kLe5fJzh/UJsG+4OIT8NnwfFXFP6LDacKHczsuoU+QnIj0xo1P4kjtBrvqCL
1lbyU3T01nYTyzJxRrqboqXRCvJjv1blQIBHqbi217Iz3W4vID+Z/hOP7p9X
Iq64vy2ttGg6+dEwPBTqUfhF7P5FPVtO1Zj8xLb6tjyu/LP4UmHduKRLA8gP
4gyPXR6rPNmY/CDOEGP/fRlrDckP4hykY3so21uP/CDOU5WTrN+l9iI/F/g4
v76++mP2Wm0aV2O2p2kURMr2PZorP9r7uU2VePGz2WP6Kxwjn1xofc/muyrF
fkPuaxpEriSfi0q7HdbWqxTv//628qPLDPI58eQKj7DAb2LlHfIWjredyWd+
3G2f9OgKsZb10utW8yzI55A5nWaW7S0XR2sca6vio0s+EeeXm0mdA2wFn4jT
u+rGKcWZPckn4nS2C9mgFtiZfCJO0dQDr7NHtyCfiFM1u2KtRflvqmMRZ0Nu
ZfE4vyqqY4fycc5dPezmQqv3VMdu0Fjf8F2tVsanXeypiLYpNeIz+0LnnRgh
5K+04VEzfZMacZsdox4WHj9EPs8FNKwamVMtjs1WaB48OZZ8zi3q3nKKU7X4
hV1jvvG6heSzt4NNfHjRd/FZ73nt9FN9yeerzBkq22d8F3fInTqjqmIM+USc
SVFP5okbnMkn4nRbbKC8bocN+UScqukXrBb5mpNPxHmuTcGYJ3EG5BNxqn1S
Heplqk3jE3GGtPOoSdvQmcbnaz5OV2U/c+cHLWl83t/t/0w1rV5m3pOEp78Z
fatOnG9Sqz3uWhZ5q//yeFqAR514Tv65L6Nb7SdvaRN/lkW//yHetnXV8JKl
a8nbzNs95uyf90PcsccU127fQ8mb5tDhVRd/14q95ppZ9TAJIG+Ix3HXCfna
CcK8F9M6ztvEsl687FbJBa6PM3lDnNqZC+5sPTqCvCHO6/vt1o8YYUneEGdM
an8l1eem5A1xVvRtOFSyypC8afFxlq+78033o7Cv76A58vwQW9l+SNSfuJz5
vo1i+8BBx+LyOfI2eO7p4XHlP8VnV7Wyk2YnkbfKl09uHAn7KV6/8OyOzlfi
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
f/dSGja0Rx/KX/AVCw/EKZlrc7N3j7YTScyoDp90SPfc4JBjQl7zPMtyT2Dr
veuEvOZ5xFz1YQs0goW85vm4AV3DzDv4CXnNc+fOrfv02usq5DXPN75aoaOx
xVjIa54/6l13rGJsbyGveX5oyWivRh1NIa95vtAxMnbUVFX6vSPwHafllqms
aM/l8nmNOrn9zhVZktAFXHs+r8GXFg1NvibvRXkN7nhlwLvoh7bcPD6vwbu2
NJghURtEeQ3+MbjbkF0rW1Je075j2/Ajp33lKK/BVQLlJh61/Zn9ms9rcI9d
jlM/2FVnx/J5jbq0Qq1x//b+syivqQ73rB278rUX5TXV4WGiij4JoymvwbuW
t624db8b5TW43jMno5yWnSmvweXSi7bdmd+O8hp1XdgHi/5xUyMor8EVxmuI
fd7NpbwGj580+VPxHlMOeQ3eS+ynXdiuH4e8pjrH9F3trU4rODU+r8FtpDOb
b/IVczGmOTvlRUoy6zLWcfBb/DqOOpOtf5Av4O/49Q6/x8XWn/gdKpbjd7TY
8y/m42S5QdL2S80iVWT4F/7/ss+JcH72eg+81M4T5erIcNSBLF+R+uBYs8gu
MjyL//0r9v9SP4Th+B2tpv4vxnNrvr8N3tT+lN1PYd5mzz8L8xgTD36/i+3r
GvH1G9sf26u4XGNodxOZ50Qr7TbcDlwq+3+HBinOf3xW9v8+SPo0ekRof5nn
I8mWWh/zf2rL9PPlxDobV7TVl4lz8oTALzZ+RjL90nsrnvxJjjOSiT+56tjv
BQv6y/SjxH4JltZSbZm+SisH3cyNzwfK7qfmPnrjMN1cZhz+bz005fP/Fz+7
Yg1swrk+MuPTsrdv2ZFzsuPzf+sznZ83WG9qeM+B4b2nnm2QagrPZz1Pm7fZ
e1T4vRrwbP57nwg+r1n/PvzzfXAL/rubfQ8v/5SmjSIuEW/uGh42jSvw8Pku
NXImrtgs9uSC4vH0nhV4M43/fhfj5rV8lCjSlO7vxosXB4qCz3Fn+PfEwFfy
3610sbnXKBWPIj78TD8FXyun/+7vcsYQdzQJtP1UKuGsUlbWSjWF53T9U44H
PQsR3hMGj+C/N9Hi51V2XN2bwl0SSfoQfza114YDBmmcncX20aL9JsQvt769
8NF/9qeHhz2wFO23IG5tO3FlZJtp9J4buDz/nciW9Oe/pAWOxANLNinp/ejJ
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
qc6EZwuKgTPCMwftex2uZgWv+TvJsw89s2F+3r/DnhWeRSgeKoXne1rz7ckz
EX23xuFe73vFb7i/U2xUDfd0iodTwz2j4uGI8PxN63xkuH/UXisX9cvzj+qj
cp1itXq4H1Ts/Ts899N+KSerhipu30uev2htFyTP/rT+W5NnLlqH1lov7v8B
+1ny/EtDwWm8frDgPP9p8kztb3yTwtpJfcHksE5TH/BJ8vzrL3zTw7pUNWhG
WNOqn9o/PL/dpPeFc6P0foXwLFTxvFjxXfAc4LmwbteMYk64lknzf5w8R/sT
30fJs7Z98KNczxRcsx4P9xrqYSuG5646C63CGkk1tzJ8SsH54bFwT6c6+GS4
B1H/9FC4x1GfMV/npOB+dmG471BfuCDcp6gPXRLuazSHeSLcj2he9G7yzEsx
2T88t1QOPD7c7ysPTMu/v3TgsnAtVv5/IDyvkCZcFK4X+tz7w/MHaci7w/NA
aapbw7No6cyZ+W/ROk8Izw81w5yXPJNVTn4meVa7Pl9/1RRpKtWX7Xltmhqe
H0oXbUqeR+gsLA/P06Sp5ibPlJW3NyfP7xT/48NzSM1RbwvP3qU5x+UxMDHX
qNKl0p9DwrN3xdvQ8HxeMTkyPJ+XBpuS74tib3Qeq9KKo8JzSGmAG8Nze8Xk
XeFZvfTD4PDMWfEzgmtqwXX/zjyepbdvCc/wpeeHh2f+0vk3h2cg0tXPJs/B
VeMGcI0sOA4nKhYL1qsPak0L1pn3hufb0q5vJ8+DdO7eSp5v7s5jWPEvLfp0
eNYnvT0XXlWwpn0kPBuU1p2fPHPXmXoqrBkUt1uSZ6nKjQ/nsaoY/j+MFzJ0

           "]], Polygon3DBox[CompressedData["
1:eJwtmXfgVmMbx8993+eHkj2yXzursrIqVEKDkqzSzi4qI7wNIaJFw2hQ2Vt2
0eattJBKSyhU9g7h/X587z9Onc+57+f5Pc9zruv6fq/r7NfxmhZXx6IoKumf
Uv8/lYpiuv5/Tly3oiieEb8sflH8pzbsqmv3hqI4W9caaa2zrp2h80G6tpPW
2uvadeIrtP9gcSetny4eqPUdxZeIzxQPFu8svqz0ew0TVxU/LW6s8yd1bYDO
d9DxnM4/17WfdX6bjofEy8XHaP/L+ntvil/T39ustf46xolXar2W1geKnxd/
Ka4tvlzcTDxcvJv47vz+X4hPEg8SvyBeL64jrpz/3kfib3R+l46nxJ+JT9T6
FeLm4hHi3Sv8mfnsn4pPEHfU57tBfJU+3yHiXuJ7xP3ER4gbiC8QN4v+/Srp
9WPFy/T6r3W+lY4x4qXir3R+lY6W4gfEe2r/fcn7R0f/PiOT948S/yS+uvT7
j9b+fbR/rNYfFU/Q+m9a66XjFvHU4M/TRXye+EHxXuLR2j9BPE77f9Hah+J1
3A8de4lv0NFZ548H3+8RWh/N67X/R63dqONS8ZPB3/96cSfxY+KDuN/a/5L4
Be3/Q2tbln79Eq1v5LcmXnT+AL+Zzm/WcbnOn9a1w/T6m8SXEbfiQ8Vdxefz
/cV7i4fq/Udyf/T+P2jtOh0dxY9q/UCtXyk+V3y/eA9xT/El4ifE1cQT9PpJ
fL/o+91BfL34yuj127X/YfEK7T9W3FTr7cUXRMfDRPEc8cviU8RNxO3E50fH
X2NxW/F50fF/vt7vSHFPvV+F+DzxIeLu4lJ8kfZ3FXfU/n3F52r9YPE1Wo/i
luJq4m7iJJ6m/cvE07X/DPHb4lXid8RNxLPEK8VvixuLW4mvFncS7ydupver
Kr5Y7/e3zl/S+lzxK1o/VevjxW9wP6PjfevS8bJK+7/V+Qk6agfXDGrHdO3/
SOsztP9M6oO4p7hL9P1rrv27idtq/z86b631a8Sdtb6/1i8WdxNfIj5APEO8
XDxT3EjcVtxDfFn0/W2WHG+tou9v8+R4bR2dP2+IF4kni08TPyGeKn4mul78
T5+hH7VB1w7W2pM6pun82ej6MEn8nvhNcUPxo+JniUfx73ptO/G14suj4/0C
XTtKfKPecwvxI1p/hvzQ+iat9dExVDxf6zW03rd0vVggrinuJm4jfjj4/r+u
1y8UT9LrGxAPyfnQNjrfu5eOr3HB9/NVrc8Xv671euJzkuP94uh87yy+Udw1
Or9aJOdvm+h86lE6fscH34/XtL5A/IbW64sfF08hP6Pr6a3a/6D4Q+0/usI5
TC4vFh8l3qm0vnwl/lXn15bOnwnB93cK18h1XdtV772F+D6df6BrG3ReRccj
4tXi73R+h/YMQm+i62V/8UDx3dH15CZxH3Ff8Vrqk7i3uI/4M/Gd4sHoWXT9
7SnuJe4t/lQ8kc9Hrde1LbU2QMcQ9CxaH/qJ7xDfGf35qhND2n+3rt2utZt1
9NX5LVpfR+0V9xffIV6f6+s+xIte86r4xdK5QE5skXxtXnQNZu8VOV+769oy
rV2Z86WH+CPxEToa6vWn6eit8x45327W+hpx96xPN4k/FnfL9e1G8WrxceLa
4tPEC7hX1Hu0R9cqae2qnI/Xan251q7J+t9TvErcNefj9eIV1O5cv7qJl6If
4v+Ke4k/oZaLu1DPxEvEf+j/4/T3TtG12/T/S9RvarV4K757zq8btG+l1jYT
h/n35nfvo/Xb+O11/Qut9xbfynuJPxe/raMvWq1rB2ptJhqDtxD/R7yt+DGd
rwnWj7q6Vl/cWK9fKJ6l47/Ufl3bV2vvcE/xBuKDxCfraKDzJtq/SGtzxd+I
1+vYRzxNx/Vor3g3ag8aJT5cXFX8FvcMbRPvIj5LRwudX6T3+0Br00vXEmrK
3lprqeMinbfX+mKtzSDmyT3+HrGn43ad99f6l1qbjEdAi3VtB7SOe4Y2ircX
N9TRWOcttP99rZ0mbiQ+R/ye+Fn8CN5P14LWdha/ovOvg/3FeB3vE7va35x6
hYehdujatsm/Ab/Fgrz+HPqNN9S1qPXdo7UHDapAa7Tehdog3k68h/iD/P5/
6fx5HRdqfRddS9RCfFPhfHlXe7Yp7X8+1vXvdf6CjlZok66V2r8b91Tnvwf7
3am6tlTcTHwy+SieLW4qrkstS/aXY6L9aM3kWKgrflfro8Qvih+K9qPbl9aH
dcH+bOdkfT84Wu9qJMdeHfFcameyHx0b7S+q6tpM8aZgv3RscqzV1/q80jFH
rTwuOhaJaWKnVnSsV0+OhdriOaXvAfduv+h7MzzZ394fXa/fEa8ml8RN8cvJ
fmdItD7x+amF1cRvlo4hfssDo2OLmORe14iO1e1K693aYH+4O/VM/E+wf+c9
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
WmtS7g8eKq0VZe4fHiidS+QsuTu6tFahSf9qU+l5MB4SL4mxxkviIfGS/yR7
STwkXpJ+m1lQ9dwvVZT2onhevC+agbYcHa0lg0trM5qMNtOHEHvE4J94Ju1v
Vdiz492/T/7t+A3x/j+Iryjs0fHq3ybHMjGNt0fD0LqTo7WtXWntQHPQHjQN
7TsmWusu1HqtwhrI/otKf140Eq3sWPr90Dy0r31p7eJ+oUX0OPBJ0fP1tqW1
F81Cu9qU9tJoMtpMzUHbjo2uRR1K3180Gq0eWlpL0XS0HY2jdjSK/ntoLrl+
VvTn+Su5VlGz/vXyOm4NnqHSi36dXFuoMfQu3yQ/f6KHo5fbLL6zsMfH6/+Z
7PXxdHg7NJB6cG+0V/s7uXeg56H3+SPZ++HR8GpoOrXvzOjfG03HC9SL1no0
HS9warTWb0jWbjScXnFjcu9Hj0iviGeg9p0d7SXwNDy/PT3698TTUCubRv9+
eASet54R/fv/2+NRG6O9Ap4H73JK9P39StykcM9J74l+TgyeIaOnY0p7NTwc
Xu7T5HhhBss8h2dyPLvjmQXP6oaV9oJ4OLzcal2rXnjmyrxmeGlvh+fD+72f
PN9hxsz85N7S8wk8Jd5yXfK95JkQ8xye2fHsmu/Is7xdcw7VCX72RZwRb8cH
z7J5Rsqz0ksKPytfkzzvY0bLPOtzcZ3CMUPsjCyt7Wg+2v9J8nyRGTXzrbXJ
8x1mzsz7ViXPO5ghM+/iGQ65SY7ybOfj5PkfM2PmcTyT5dks/TzPqu8p7V3x
2Hhtcoi9vIbcGlHaG+M58B7vJc/HeCbCvIpneMwH6Nd5tseMgmeZ1CRmF8xU
agU/42TW8lmy18RzMp9kJnJK8MwFf/V/p1EUQg==
           "]], 
          Polygon3DBox[CompressedData["
1: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
/gcLRmqx
           "]], 
          Polygon3DBox[{{1117, 582, 401, 315, 314, 824}, {1106, 557, 375, 48, 
           307, 1089}}]},
         Annotation[#, "Charting`Private`Tag$172977#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNlUlsj1EUxb9RK0hQQxRpayo1FQmxMCzMQbSGGroh0QSJbpBgI5EYFoQF
dgilEkFIlIVhoxZigbaGIqmp5qrSCE1bv+PehcX7n/Ped+8b7j33/vPWlRdv
joIgOMCIGSvTIPjKwpkkCK6Ad1lrC4OgAn4N3gQfx7eB4ALwIk5XWc+B38em
Gn6DtdPwKvhX7D7Ce8NfgC8Z3Vn7Dbaw9p7RqH0ZnxivGUPZ6zuYB+7Ebj+8
Gp9hzHPg3dl/BLwXPD+xi2v/e+BY5gOwnQ/exreO9UxwMPM78CHgTz/vDWMk
8w5wOPghshgU4/9UHHwMFoR2h36+noBPwK6h2ege9cxT+DP307cotL1l3w7+
CuzNX3Qnt5HvN3xGwlvBFVygNLD4D2T0hHdGFhvtr/gUhfbeOtabGJvgr0Al
ciP8fGh77lA8wS7MM3Qf5rf4qQUzwEux5bSScx5E9l33D9y+E/rcY/IIHIVd
LrwAPMK8Et6A3Rj4ePg2z5Heuigxe8VgMTiVTaaxXqr12Owr4PPgC+Fl8BL4
Gni5csSeWfg2gCdiO2sv6yfhZ+F74Bdi09hBxSo2bRQl9kZpSnqU/mTzEL4a
bX+P7L3rY4uPYia9SrdHE9NDiE8W67mJ+RXh1yeyeCgONR6j2sjOaHSt7maf
ffCz8MPwY/Bd8LLY8qKzbsZWU+dYn5tY3pUr5fq161Da1lmjwdl8WwQ/hN1a
z7XyuzQynRyXFkKz6RXaGXrXdfgWf6P2P+/6Hg9WJVaThWBtYhqamNibQ3/X
Vny347uT9TmM/NBsJjF6wAfxfab0ENo+HfgMgr8D2xnZ8LfgDNVsaOf29zpS
Pa0hpi2RxyG2+0/wWpR+pPucyPS2Afvl2H9ifgqbJV43qkHptItrdZnnSX1A
ddbm/SXfe0WW2wdeC/WeR+WzOLXzpNsV8M/w0+otqelbupqcWl+T9rqllhvp
eU5qvUb6KUytNpT30an1L8VwKTw3slqYxRge2nunpNZbpe2c1HIs/U9Prf9K
2+pVv70/9k0t96qXFu8pNd5TWv7rpT/taf/8mpyrr7Z6D7zsvfoPH7Jji7Ni
u4r9myPTcJvvWeOxUwwV+y/wYeAP74GZ3uv0vjxsNsJLUrNTjRew/7jA4vnG
7yOtNwfW59WXVWvN/j+iO1V7/Sp/rf6uv8V50uo=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtlUtIlVEQx8/9vnMrKMMnRCl61UzTrAhyVYuoDFJJLXu5KUioIDcRlJtW
PTbRptoVpGUQFbWwFj022SJa9NDeTy0tU/MKLSrKfn/mgMOd/8yc78zjP8fU
zvamfZFzbhfikReALH7jhHMv0c/FzvWAO9GXJ51rJWgF+AN4JngRuBt8CrwE
7JDdnC1CncvZCewV4DnIILouu4y+V3fiLyT+LLgV3ALu43sDxBwK/v3IcfQO
bJXE/uK3mPgUtnfoedhOguvBtbHF3ErYeZ1Vjso1E1sN336O/le1hvpU08eE
1aBaV4LHwTfB18ApzqTRf2N7RPxa/H/QH2C7E1s9uu8guA28Cf+ekF8++Gjo
z2fiavC1IAfwL8ZWofrxT6DfR66G+4bQfyIl6K84p/k4zryOLA/lozPXwQ3E
RNj60ZuTlrNyuxFZLbLLPwNpTNhMdHdVZLOq9lZrV8iv3lt/1Kcm8HR+R53l
dDeymvvR74VeFHvLdRgp8DYDzbI5zGZj0u7V/ZX4x7CXoecin9DTmit6ATKE
vtAb95RzBfoIthT6bOQ9+nekJGHz1FyfIlPcNw38RtzizFt+s9Wz2PJTb9Oh
n9vI5wv+fOLXgyfRq9AbkOHI+C9u/CN+Q8I4KK6OR8bN+d58mcg89Eve+q3c
t/Pt0+BeZxxRf1rC+R2Rcf1hbLmpJ+rNFPZB8ED4nr6hb6kfdd5moFmoJ+rN
Am9cUM1l6D3e9kB8y4iNA/2hfuFO/NXOOCfuaQY6mxuF2SBPItvxK8Rv0T6A
c4hfQ+zmpPVd/V8F7vLGH9nkO+9t18V5cb8PeyJh9TxD7/C2G9qRynC/uJAV
8r+IHEPvxbY1aTXqe4WBf9oh1aadX+atJtX2LbLaNWP+3Ncw+x+RvR95xNeC
T3irTTutfTiiO53tvHa/O/BfnBA3MsJ9RWGf1JPesGvqVRvxdc7eHPG7XTNz
9oZpvhe88V89VC+XenubsvGvRs+JjFfiUHnA6plmqtk2IoXO3lDt56zYuKad
LMW3ztt7qndV/RKHtT/pkL84Iz5PBj7e1psadlfvl2ZYin80zE8z1j6OhXzF
b81OMywP708SfQTb49AD9ULvT5G3GSs+Gd6nw9jOOHvr9f/gPziSvio=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt0ktIVFEcx/HjzBUijRDspYEjCWKURhtpEbZJLFLIUIna5CLIIDfmpk0Q
9NhELcpdRZYKEkGQbYxWtmiX1C57p73UHrQSxc/pzOI7c37f8zv3zv3Pre3t
7zyTCyHUoRRb8yGsKwmhFt9tdJFHMSVfsb/Jd1sWwgEs2/+MUX6nPIrf8iye
cw9dq4MryH3OFbgGubk0naviqtHI7eI+cZvlLSXpevfwk/uL9VxDPhHX2/CD
73auWa9Cbnf9/VwZd5+bt/6A03y3c+1cjXxKtyY+s3wYO7jB+Du4ar0x7g83
h9fcU+4q90he0pviHnD93AlunOvjeriL3DA3zz3m7nDnuRvce26Eu869QCU3
Dcv/H7v1Foq/uVK3VT4XyaX5X1Y7q9cUn0Muw5t4/zg/fMulHP0+eQS/cmmu
Q85eKN6j3v4GfORfyZfirK0XuAm923rDWZrvO+zltnMnuSPyLb1jXBt3PEsz
v8Yd4vZwB7kV7guehPT/3sQzeU28Jzept2j9DxuL79ZAPj1HQS7HjL0J+W6W
3sW3aNKrKs7gq9yptxYtcSZZmnmc/Ut7BXkVf09Z4Q==
          "]], 
         Polygon3DBox[{{1073, 293, 756, 736, 92, 839}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0Tsvw2EUwOHjEoSi7pdq6n4psRjEIERcisbQxWAziBiYDGaL1WQ1GW2+
gQ8gwWQ0NBGbijTi8kgMvz7nvP+3adMO7B4VDisiYl9l/c0lPeunMiLJRFVE
hilOM8t5zjHPHHe4zQPu8YTHPOMpL3jOK17yhte8Zbo6oshP3etDr6r1+Q+s
4yOL3PIFp5T3njQntWnu47fnG+aUuVdf9nV7j7lbE8rZu5hVp97dGeea8w6O
adXczlGtmNtYcm+Ey/ZWtmjWnOSQmvXmzjCXnDdxQI2asQ+y7HmC/Vp01sCM
Fsz1LMhPEk/u1ZgRd15e/v+bX9U+KPQ=
       "]], Line3DBox[CompressedData["
1:eJwt0jsohWEYB/DP3XFnU1I2i/ud47jfSZGEJLdkYbCYLbKZjDYDGW1Gk0kZ
3K+DQbIiDH5fGf79/s/7Pp2+t07R3OrISlwQBFsyqiSyhNVKKcukRi9nhXzF
B0El25xVhXvhvdSaa/ntvo710iAdzhvZFJ7pUf7YaQ7vzTG2SKPeGv5uuKu3
89deBzulS6LOu9kjvbJv/rDTp/fLgfnTPKA364Mckpg+zEK58L6InUum8Yrp
vGYGb5jJW2bxjtm8Zw4fmMtH5vGJZ3zlrzzLl7zLaUIQnPOYJzzkEXe5x23u
cIObXOM6F7jMMU6ymwOsY5TFLGE+C1ngfS/8Dr9VPuRNlrw3i4vM5DwzOMt0
zjCN04xwiqmcYArHmRx+B5P+/x9/uHc5EA==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{793, 989, 1215, 792, 988, 1214, 791, 987, 1213, 790, 986, 
       1212, 789, 985, 1211, 788, 1279, 1104, 787, 1278, 1103, 786, 984, 1210,
        785, 983, 1209, 784, 982, 1208, 783, 981, 1207, 782, 1077}], 
      Line3DBox[{808, 997, 1223, 807, 996, 1222, 806, 995, 1221, 805, 994, 
       1220, 804, 1284, 1109, 803, 1283, 1108, 802, 1282, 1107, 801, 993, 
       1219, 800, 992, 1218, 799, 991, 1217, 798, 990, 1216, 797, 1281, 1106, 
       1089}], Line3DBox[{823, 1003, 1229, 822, 1002, 1228, 821, 1001, 1227, 
       820, 1290, 1115, 819, 1289, 1114, 818, 1288, 1113, 817, 1287, 1112, 
       816, 1000, 1226, 815, 999, 1225, 814, 998, 1224, 813, 1286, 1111, 812, 
       1285, 1110, 811, 1078}], 
      Line3DBox[{838, 1007, 1233, 837, 1006, 1232, 836, 1300, 1125, 835, 1299,
        1124, 834, 1298, 1123, 833, 1297, 1122, 832, 1296, 1121, 831, 1005, 
       1231, 830, 1004, 1230, 829, 1295, 1120, 828, 1294, 1119, 827, 1293, 
       1118, 826, 1292, 1117, 824, 1091}], 
      Line3DBox[{853, 1009, 1235, 852, 607, 851, 1310, 1134, 850, 1309, 1133, 
       849, 1308, 1132, 848, 1307, 1131, 847, 1306, 1130, 846, 1008, 1234, 
       845, 600, 844, 1305, 1129, 843, 1304, 1128, 842, 1303, 1127, 841, 1302,
        1080}], 
      Line3DBox[{868, 1322, 1146, 867, 1321, 1145, 866, 1320, 1144, 865, 1319,
        1143, 864, 1318, 1142, 863, 1317, 1141, 862, 1316, 1140, 861, 614, 
       860, 1315, 1139, 859, 1314, 1138, 858, 1313, 1137, 857, 1312, 1136, 
       856, 1081}], 
      Line3DBox[{120, 439, 119, 438, 118, 437, 117, 436, 116, 435, 115, 434, 
       114, 433, 113, 432, 112, 431, 111, 430, 110, 429, 109, 428, 108, 319}],
       Line3DBox[{883, 1020, 1247, 882, 1019, 1246, 881, 1018, 1245, 880, 
       1017, 1244, 879, 1016, 1243, 878, 1015, 1242, 877, 628, 876, 1014, 
       1241, 875, 1013, 1240, 874, 1012, 1239, 873, 1011, 1238, 872, 1010, 
       1237, 871, 1082}], 
      Line3DBox[{898, 1030, 1257, 897, 1029, 1256, 896, 1028, 1255, 895, 1027,
        1254, 894, 1026, 1253, 893, 642, 892, 1324, 1148, 891, 1025, 1252, 
       890, 1024, 1251, 889, 1023, 1250, 888, 1022, 1249, 887, 1021, 1248, 
       886, 1083}], 
      Line3DBox[{912, 1038, 1265, 911, 1037, 1264, 910, 1036, 1263, 909, 1035,
        1262, 908, 656, 907, 1327, 1151, 906, 1326, 1150, 905, 1034, 1261, 
       904, 1033, 1260, 903, 1032, 1259, 902, 1031, 1258, 901, 649, 900, 1325,
        1149, 1068, 1084}], 
      Line3DBox[{926, 1044, 1271, 925, 1043, 1270, 924, 1042, 1269, 923, 671, 
       922, 1333, 1157, 921, 1332, 1156, 920, 1331, 1155, 919, 1041, 1268, 
       918, 1040, 1267, 917, 1039, 1266, 916, 664, 915, 1330, 1154, 914, 1329,
        1153, 1193}], 
      Line3DBox[{940, 1048, 1275, 939, 1047, 1274, 938, 686, 937, 1341, 1165, 
       936, 1340, 1164, 935, 1339, 1163, 934, 1338, 1162, 933, 1046, 1273, 
       932, 1045, 1272, 931, 679, 930, 1337, 1161, 929, 1336, 1160, 1194}], 
      Line3DBox[{955, 1050, 1277, 954, 700, 953, 1349, 1173, 952, 1348, 1172, 
       951, 1347, 1171, 950, 1346, 1170, 949, 1345, 1169, 948, 1049, 1276, 
       947, 693, 946, 1344, 1168, 945, 1343, 1167, 944, 1085}], 
      Line3DBox[{969, 1054, 1360, 1185, 968, 1359, 1183, 967, 1358, 1182, 966,
        1357, 1181, 965, 1356, 1180, 964, 1355, 1179, 963, 1354, 1178, 962, 
       707, 961, 1353, 1177, 960, 1352, 1176, 959, 1351, 1175, 958, 1086}], 
      Line3DBox[{1052, 980, 1205, 1184, 779, 979, 1204, 778, 978, 1203, 777, 
       977, 1202, 776, 976, 1201, 775, 975, 1200, 774, 537, 773, 974, 1199, 
       772, 973, 1198, 771, 972, 1197, 770, 971, 1196, 769, 1076}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{339, 533, 1196, 340, 545, 1207, 363, 558, 1216, 376, 1286, 
       570, 389, 1294, 584, 403, 1304, 598, 416, 1313, 611, 429, 624, 1238, 
       442, 637, 1249, 456, 650, 1258, 469, 664, 482, 1337, 678, 495, 1343, 
       691, 508, 1351, 704, 521}], 
      Line3DBox[{341, 534, 1197, 342, 546, 1208, 364, 559, 1217, 377, 571, 
       1224, 390, 1295, 585, 404, 1305, 599, 417, 1314, 612, 430, 625, 1239, 
       443, 638, 1250, 457, 651, 1259, 470, 665, 1266, 483, 679, 496, 1344, 
       692, 509, 1352, 705, 522}], 
      Line3DBox[{343, 535, 1198, 344, 547, 1209, 365, 560, 1218, 378, 572, 
       1225, 391, 586, 1230, 405, 600, 418, 1315, 613, 431, 626, 1240, 444, 
       639, 1251, 458, 652, 1260, 471, 666, 1267, 484, 680, 1272, 497, 693, 
       510, 1353, 706, 523}], 
      Line3DBox[{345, 536, 1199, 346, 548, 1210, 366, 561, 1219, 379, 573, 
       1226, 392, 587, 1231, 406, 601, 1234, 419, 614, 432, 627, 1241, 445, 
       640, 1252, 459, 653, 1261, 472, 667, 1268, 485, 681, 1273, 498, 694, 
       1276, 511, 707, 524}], 
      Line3DBox[{8, 773, 23, 786, 38, 801, 53, 816, 68, 831, 83, 846, 98, 861,
        113, 876, 128, 891, 143, 905, 158, 919, 173, 933, 188, 948, 203, 962, 
       218}], Line3DBox[{347, 537, 348, 1278, 549, 367, 1282, 562, 380, 1287, 
       574, 393, 1296, 588, 407, 1306, 602, 420, 1316, 615, 433, 628, 446, 
       1324, 641, 460, 1326, 654, 473, 1331, 668, 486, 1338, 682, 499, 1345, 
       695, 512, 1354, 708, 525}], 
      Line3DBox[{349, 538, 1200, 350, 1279, 550, 368, 1283, 563, 381, 1288, 
       575, 394, 1297, 589, 408, 1307, 603, 421, 1317, 616, 434, 629, 1242, 
       447, 642, 461, 1327, 655, 474, 1332, 669, 487, 1339, 683, 500, 1346, 
       696, 513, 1355, 709, 526}], 
      Line3DBox[{351, 539, 1201, 352, 551, 1211, 369, 1284, 564, 382, 1289, 
       576, 395, 1298, 590, 409, 1308, 604, 422, 1318, 617, 435, 630, 1243, 
       448, 643, 1253, 462, 656, 475, 1333, 670, 488, 1340, 684, 501, 1347, 
       697, 514, 1356, 710, 527}], 
      Line3DBox[{353, 540, 1202, 354, 552, 1212, 370, 565, 1220, 383, 1290, 
       577, 396, 1299, 591, 410, 1309, 605, 423, 1319, 618, 436, 631, 1244, 
       449, 644, 1254, 463, 657, 1262, 476, 671, 489, 1341, 685, 502, 1348, 
       698, 515, 1357, 711, 528}], 
      Line3DBox[{355, 541, 1203, 356, 553, 1213, 371, 566, 1221, 384, 578, 
       1227, 397, 1300, 592, 411, 1310, 606, 424, 1320, 619, 437, 632, 1245, 
       450, 645, 1255, 464, 658, 1263, 477, 672, 1269, 490, 686, 503, 1349, 
       699, 516, 1358, 712, 529}], 
      Line3DBox[{357, 542, 1204, 358, 554, 1214, 372, 567, 1222, 385, 579, 
       1228, 398, 593, 1232, 412, 607, 425, 1321, 620, 438, 633, 1246, 451, 
       646, 1256, 465, 659, 1264, 478, 673, 1270, 491, 687, 1274, 504, 700, 
       517, 1359, 713, 530}], 
      Line3DBox[{359, 714, 715, 1205, 360, 555, 1215, 373, 568, 1223, 386, 
       580, 1229, 399, 594, 1233, 413, 608, 1235, 426, 1322, 621, 439, 634, 
       1247, 452, 647, 1257, 466, 660, 1265, 479, 674, 1271, 492, 688, 1275, 
       505, 701, 1277, 518, 1360, 717, 718, 719}], 
      Line3DBox[{758, 662, 1329, 467, 648, 1325, 454, 764}], 
      Line3DBox[{759, 677, 1336, 481, 663, 1330, 468, 649, 455, 1248, 636, 
       441, 1237, 623, 428, 610, 1312, 415, 597, 1303, 402, 583, 1293, 388, 
       569, 1285, 375, 557, 1281, 760}], 
      Line3DBox[{762, 387, 1292, 582, 401, 1302, 596, 763}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
zVR/98d16NL/Q32G/7fx/wWqtWLO
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     GraphicsBox[{
       Thickness[0.13175230566534915`], 
       StyleBox[{
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJnIGYC4r6Ibn/GAAmHCE6xduP1yg4wfuAt6ZrEIhWH
NgV21TNXxBymtLdGXZZRdTAxBoJiETi/8v6PW8bdQnD+TBCIFHB4krjwmsl6
FYj6zTwQddbKDi3itayZbDwOpw47rc2sU3G4zntbLNWMA64/DQxY4PyXtY+z
z69hgPNZ9H9xXer5aw9Rp+JgkaRrx+rw254BBB4oO/wHg+/2tzVl1/xnVnaY
d2Lykmy1r/Z782vezpyqCOfzxwbcNypH8MNB/o9XdNggvU331Juv9iu/vaw4
46AINf87nN8Mcv+xH3D+Nq8NFnN+/rBPBTnHTdFhBsj/kr/sQd42vqzosBUs
/weqXtnhDAj4MDj8fPv6gOViFQe7Esfa0zIscD7EX2xwfuHykg3/+NkdLlwN
e6NvjeC7TGgWSutShvNh/oWYx+aQDjJGTAkaX6wOHxatVzgbAXM/k0MFON5k
HWQ2is1nesDgcKB7X5PJYkkHsLuNGRyEKyeVnE2RgLr3n/2OYKuI/+picL7G
J5WXs16Kwvng8HcQhesHp4OdIg4HweYywvmQ+GSC82NUI2TO1bA4KOxasC+V
TxTqH1aIPmYxaHpidRABu0cM6l4OB/c1R5czzJCF2FfM6dALSrcb5BxegMx/
wwkxd4+8A9hdDVwOa4V0+NLjFBy2g+ODC+K/Jwrw9FgNCo/Xig4FIPv9eRw6
bTx3pSkpQcLlMZ9D+eFtrjN9laH+EYDYe1nZoRWUP0wEHXQV5b/kiKlA3SOE
Fp8icD443DRF4Xywv9+JOkjNi9M8PUEFEp49MH+rODxwjXecJSjq4HOC3Xa2
KVS9nwg8v8L44PjVQPDB8T9NyeHLvo9b081EHcDpP1XJIeTt5Y8zHiL4HqBw
tBCH82H5Hxy+PxB8mH0A27jEmQ==
          "]]}, 
        Thickness[0.13175230566534915`], StripOnInput -> False]}, {
      ImageSize -> {7.593006226650062, 16.338709838107096`}, BaselinePosition -> 
       Scaled[0.32439307852814453`], ImageSize -> {8., 17.}, 
       PlotRange -> {{0., 7.59}, {0., 16.34}}, AspectRatio -> Automatic}], 
     TraditionalForm], 
    FormBox[
     GraphicsBox[{
       Thickness[0.1287001287001287], 
       StyleBox[{
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2,
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
           3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{6.281249999999999, 
           11.2953}, {6.281249999999999, 12.512499999999998`}, {
           5.8999999999999995`, 13.6922}, {4.921880000000001, 13.6922}, {
           3.2531300000000005`, 13.6922}, {1.47656, 10.2}, {1.47656, 
           7.57656}, {1.47656, 7.028130000000001}, {1.59531, 
           5.1812499999999995`}, {2.84844, 5.1812499999999995`}, {
           4.468749999999999, 5.1812499999999995`}, {6.281249999999999, 
           8.590629999999999}, {6.281249999999999, 11.2953}}, {{
           5.184379999999999, 9.615629999999998}, {2.6687499999999997`, 
           9.615629999999998}, {2.84844, 10.318799999999998`}, {
           3.0984399999999996`, 11.3203}, {3.5749999999999993`, 
           12.165599999999998`}, {3.9687499999999996`, 12.881299999999996`}, {
           4.385939999999999, 13.4531}, {4.90938, 13.4531}, {
           5.3031299999999995`, 13.4531}, {5.56563, 13.120299999999999`}, {
           5.56563, 11.975000000000001`}, {5.56563, 11.5469}, {5.52969, 
           10.95}, {5.184379999999999, 9.615629999999998}}, {{5.1, 
           9.257809999999997}, {4.8031299999999995`, 8.089060000000002}, {
           4.551559999999999, 7.33906}, {4.1234399999999996`, 
           6.587499999999998}, {3.7781299999999995`, 5.9796900000000015`}, {
           3.3609399999999994`, 5.418749999999999}, {2.85938, 
           5.418749999999999}, {2.4906299999999995`, 5.418749999999999}, {
           2.1921899999999996`, 5.704689999999999}, {2.1921899999999996`, 
           6.885939999999998}, {2.1921899999999996`, 7.66094}, {
           2.3828099999999997`, 8.47031}, {2.5734399999999997`, 
           9.257809999999997}, {5.1, 9.257809999999997}}}]}, 
        Thickness[0.1287001287001287], StripOnInput -> False]}, {
      ImageSize -> {7.772871731008717, 16.338709838107096`}, BaselinePosition -> 
       Scaled[0.32439307852814453`], ImageSize -> {8., 17.}, 
       PlotRange -> {{0., 7.7700000000000005`}, {0., 16.34}}, AspectRatio -> 
       Automatic}], TraditionalForm], 
    FormBox[
     GraphicsBox[{
       Thickness[0.013041210224308817`], 
       StyleBox[{
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
           0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.653129999999999, 
           11.8563}, {8.653129999999999, 11.2484}, {8.34375, 
           9.495310000000002}, {5.94688, 9.495310000000002}, {
           4.6000000000000005`, 9.495310000000002}, {5.387499999999999, 
           12.6313}, {5.4937499999999995`, 13.071899999999998`}, {5.54219, 
           13.095300000000002`}, {6.0062500000000005`, 13.095300000000002`}, {
           6.8656299999999995`, 13.095300000000002`}, {7.890629999999999, 
           13.095300000000002`}, {8.653129999999999, 12.785899999999998`}, {
           8.653129999999999, 11.8563}}, CompressedData["
1:eJx11H1IU1EUAPCZ07Bs6HRf7s297bXkiZC09UFInVFRlihpoGn0qTORkkjC
Sisyk1pZhIlKVEQQwfoAM8JUKsgIZ4JGf1SgaX8kTkoJWVot773vnQcNL4zx
u++9e+85995j21+RW7JApVLlz/3If+Lxa5V9dwX42T3ZXtpkAtnVQ8GPznET
dFZUT7TUCXCpwJsTEZcEw5v2uFv3Kb4/PVblT1f8WbT4QoIApZ651mOCzb7X
91RGARLIuMXyeHZ46e0+64rUw0kyj9cG5HXPMh14MzI7PFM8esPVWq2nUPEQ
mX/SCn7SfIpdzrk2aEDTeYNGtl43D9aO290l2RbWv4WHKjqvha3TIz+3okOk
nVa8Y2JwsvmL4gfaNE3pQxvschRw735bWBzldugj60rjWLxP7Kx/sQ1aSNsp
MBcJsCqjK7fJ7UCrYy5aD2SnoNtWB18Vp4rw/c4jvq/KBsbr72MOjqSyeLZz
aMfU0rHWtxr0C5LX0Vj0OUNNVFl0uOl8hxVzN3eLvempLI9tilWkndGgi0i8
nDbMNF8hEd1YX1c42Dm/x4+262a9ItvHQDyY6XgiPN36eM2NX9EQOH/Iu+K5
EdZVumt6uWhooOfLAN9qRsv7A1FQxy90+Bv1ECD2/V0vm46XNYNm4wXDLJ8f
2TRupw7Uy2cWDcTOooezx/b+uaU452vmwMqEEDqF5P9CBJwg+7ZNJ+1zJLqZ
dmjQz/LWFoRS4tD0ezEe5PHouVFr0ey8KWb5CjfNl1mPluOl5/SUYjr/m3g0
Pb+dS8JM68G0YnrujhjmtXz/LpN9+iGN5zJK8WnhE6kLtXbpHhnQ9HkZh6b1
Z6MFukid0NnQwoeRPFUWj5bvI61TvRzrVyezdR/jpDg5uELXY5bqW5L0vhnr
lWy2LyY0TXuPjtWFhmQp34ms3g3z6PwYfb2z346W6ye9x+NG+L++/gPc/EC9

           "]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGYC4lOHndZm3lN3qLz/45Zxt5ADjB+tGiFzbo+Q
Q8At6ZrES+oOrQrsqme+CDm8yNL+Nn0ugr/DoenR8QoE/wwI5Kg7CFdOKjl7
BJPvd3FizL9kdYj4GiGHE7t29LIFqDvMBAFJIQdfkLyzusN/ENgv6JCaBgRs
6g4ly0s2/DvP7zADpG6nGkRcjdfBY3+trIU6gt/C679+ylFVOL/ht1XBuRWq
DvYljrWn5/DB+Q9c4x1nCQrA+dUg/68WcMjM/9B6cosqxL0sgg5mNnuDph1U
dZDftWBfap6gQwPL0X7D7+oO5Ye3uc7sVXS4cDXsjf5vdYe9+TVvZ05VhLiH
XcMhnFOs3fg8br4xCDxWhJvnvubocgYOJYi7jyH4MybwV5lpqznwxwbcN3qu
CHHfFKh7bys6iPZ4vWIpUYXIX0fwYe6D8cH+CVGEhjuCD47Puwj+owjx7RcX
qGHwla89CmawQfDB7pNA8MHu4Ubwwf5jhtrXo+bgPKFZKG2XAsQ9U1Qc+iO6
/Rk3CELiu1kFEr56CD4sPnDxweGUxutgBLInGBq/MdwOsstfeOjJq8H5G1Sf
NM87i+BDwlPdoUW8ljWzjdchJfaOG3OEusOL2sfZ59/wOZiC4nuhusPB7n1N
Js0C8PwA5icj8gcsvwAAItxlRg==
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4v7gEpXp9w0ctnttsJhjyewA4y+5tfyxYTOC
b2IMBJuZHTbo5S1mXGPgEPDE85JpMKuDzwl229lf9Rxu8N4WS/3G5/AfBObr
OritObqcIUIczp8JAp0KcH5CSJD6Ak1Vh+OHndZm7tNzMNBaKXxBRdOh2+sV
i8lBA4eM/A+tJ79ow+1/U7xV9Le2DpyfEnvHjdkCwd9i/uNQiheC/yRx4TWT
fB2HgjXdtzMuGDicvxr2Rr9ax2F/raxF+hEE/wwIzEHw9UHucNF38L84Mebf
YS2HGSB3S+o5rFd90jwvV8NBYuoVzoxHOhD3sqg56CrKf8kJ03HwAPm3QhnO
h/kXxm9RYFc9c0XGYeoE/iqz1ToOO4KtIv6rizvU/rYqOPdC1+EsyB08Qg4y
8+I0TwfoO3A78nnNWMnhcLhtefipRQYO10HhW8YEdz+MD/MfjA/zf3oaECxD
8GHxCwA63djS
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxFk39IU1EUx2cLIkgldfNHLvf2nqn9MH33bZFTOJaZUf6ooFaoYbmpFSli
qGlBRkiOyELzR1HWohIcG5SWUsMUSfJHiv1CJaMkHSrVMFlI2e677r0D94/P
e/eee873ey51PP+AXiqRSDxca6drrXCt6ZObFurMGtCtllciCw1u3j+6rjyr
kIGiVtliX4oGaiovHx0JDgUDjja1wOnK+F8nYkWW4LByMJl17wNnYQhHcVA6
4RxFWhqebnN2ZQdx8KZ7hznvAgMFLcax3CYknM/B+TeITPKwAvvXvludW8iS
OgwMTOF6k1lyzxcaGnAEsjAWoWhZktJgjTxj8piNhpf55XMNtZTA3hlpE2yx
yIdx/8coWJNqqdE7o6F5wV7SDxTJ78kK/Lt9tOpvqMhhc562qAgW9LicRArq
qr3PabQsIBwjy//z3Ptp8t3Ewp+5mc7tJgbiSnWP1QokMN+/QeT4iq+v68sQ
DL0/NLtVK3JC9SUfQxUtsLtfPl8GInnkKsjOGE+UJiH4ed+iHNBRRD8HCyXY
D6MC9vauirvVykKn0VbBmQJhCcddFnxLbxQNZAdAH+8TC88PxuiWwuQChzsY
e6NdJjCvP8iE87wP7X6g8382LBkUmffzh8hEPwTKjiab3ktG+tEieIXrkcoh
amOz71ACAj++Hjns4+tFsLul55GkXkH660VwVWdM9bCuh4sre65Ff0SQHqoL
HnwRQu6xIzD7bPbKyVTC+cWYgkEnIv1NKoV5LMN6zFDwYMLmdZvm4Ersng6D
SgXz2O+zHBR3t+1qSKYhAOvXxS37S8MnH0f82+8cbKFC5k/LGTKXGrXgH4f3
PRE5Zfh6+r9vIo+7nhkr00DQncyIvmoG+nHEakjdRxii32c16Vu9PC9mtfBe
3cz7Gy4y7/9NFdFjSk3mX6+Ch9NJkUtrNQI7rGmnGnNEdr9/Xl+nyO77/gMp
ZctI
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4v7gEpXp/VYOM0GgU8EBxv+waL3C2Qglhx6v
VywmhVYOG1SfNM/zVXVITwOCY5YOf7+VPpgjqOEgPvUKZ4aQpQMLZ5d88jst
h+TYO27MEhYO56+GvdGv1nEAKU/7Zg7nbzH/cSjlFYI/bQJ/ldltc4cniQuv
meQj+GB1Xgh+CshcCwT/TfFW0d/aOg4g6jSfhYP/xYkx/w5rO/wHAXtLiPnR
mg7qQGeffWXpcAYEclTh/HBOsXbjfgU4f62QDl/6PXEHh6ZHx2dEWzqULC/Z
8O88PyRcfpo7FIL4/Sxw+02MgWAzM5y/5Nbyx4bNCP52rw0WcywRfHC4LWOC
+/86722x1DImePjA+BHi2y8yyFnA+bz+66ekSlg6+D/xvGQazOkQDpJfZ+nw
ed/Hrelhgg4zQO7ztIK4x1gMHn/TQeKR0g7o8QsAsljYeA==
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1,
            0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQrfqked5ZJyeHjPwPrSdD1B1gfOl5cZqnDTQdIsW3
X2S45+ggMfUKZ8YjLQd5x4/JZ2QR/BgFoECPHZwvDqKDEPwGlqP9huaYfBbO
LvnkPARfBmwfQj+Mn7+m+3ZGA4K/xfzHoRQrewz+fzDQhPOntLdGXd6Dm/+6
eKvo725NhxOHndZm6tnD/Qu2f5Ktw5u23G6j3RIO14U+OZ4vs3Xoi+j2ZxQQ
d5AAqSuwdWhVYFc9M0XMYeoE/iqz2TZwfo/XKxaTRAT/SNvy8FNOmPyZILBT
FM43MQYBUYcIUHjHIfhg/xcg+GD3r0Lwv2wIyJ713Mah6v6PW8beohD7FW3h
/NQ0IGizg/PB5h1A4zPYo5pvheAfALkvCMHfXytrkV6CyQeHl7QYnA/zr/pb
3n0Gkfao4aWN4PtcnBjzr9gONfwK7RxqQO57jeCLVE4qOZsiDueHvL38ccZC
cbj+L/s+bk3/Jg5JT+VQ80wk4P5ZK6TDl66n5OB9gt129lwHON/82tFckwJH
OB+W/sHpZY6KA3r+AAA4q0QL
           "], {{35.52029999999999, 
           11.915599999999998`}, {35.52029999999999, 11.6063}, {
           35.36559999999999, 10.592199999999998`}, {34.81720000000001, 
           10.0438}, {34.6141, 9.82969}, {34.0422, 9.37656}, {
           32.95629999999999, 9.37656}, {31.27659999999999, 9.37656}, {
           32.0875, 12.6313}, {32.19379999999999, 13.071899999999998`}, {
           32.24219999999999, 13.095300000000002`}, {32.70629999999999, 
           13.095300000000002`}, {33.8859, 13.095300000000002`}, {
           34.781299999999995`, 13.095300000000002`}, {35.52029999999999, 
           12.809399999999997`}, {35.52029999999999, 11.915599999999998`}}}], 
         
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGITIGYCYvUnzfPOrnJyqLz/45Zxt5ADjB+tGiFzbo+Q
w3FNq0mnlzs5tCqwq575IuTwhnefwcxZCH7i4cvaqRMR/PQ0IOhzchCunFRy
9ggmv315+CmjHieHMyCwRsjhSeLCaybtTg4zQUASKt/i5PAfBPYLQtSVODmU
LC/Z8O88P0RdopNDKshcNV4HlsWTrBhtEfwp39jiZ6gg+MKfHM+nyTo52Jc4
1p6ewwfnP3CNd5wlKADnV4P8v1rAgcd//ZRUBah7WQQd7JseHZ+h7OQgv2vB
vtQ8QYfgEpXp/zc4OZQf3uY6s1fRYfkLD73/G50c9ubXvJ05VdGBFeSerU4O
4Zxi7cbncfONQeCxItw89zVHlzNwKEH8uwTBjxTffpHBzsmBPzbgvtFzRYj7
JKDuva3oYH7taK6JAFT+OoIPcx+MD/ZPiCIkPuQQfHB8aiH42Zw/F6RHY/KV
rz0KZrBB8MHuk0Dwwe7hRvDB/mOG2hfm5OA8oVkobZcCxD03HB36I7r9GTcI
QuL7iiMkfPUQfFh84OKD4zeNF5JO2KHxG8Pt8Dsm9+g/KwR/vo3OlVlpCD44
POucHFrEa1kz23gdur1esZh0Ojm8qH2cff4Nn4MDKL5nOzkc7N7XZNIsAM8P
YH4yIn/A8gsAd+VhWw==
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4l8xuUf/Kbk6bPfaYDHHktkBxl9ya/ljw2YE
38QYCDYzO/R4vWIx4XR1CHjieck0mNXBVbWUaVaBi8MN3ttiqd/4IOqkXRzc
1hxdzhAhDufPBIFOBTg/ISRIfYGmqoPqk+Z5Z5NcHAy0VgpfUNF0qIxYYXpW
2NUhI/9D68kv2nD73xRvFf2trQPnp8TecWO2QPC3mP84lOKF4D9JXHjNJF/H
IYfz54J0aVeH81fD3uhX6ziIfHI8nyaK4IPdxYjgH6iVtUhvcXHwvzgx5t9h
LYi8pYvDepBDczUcKkDue+0McS+LmkP9b6uCcyecHTxA/q1QhvNh/oXxWxTY
Vc9ckXGIFN9+keGes8OOYKuI/+riEPfoujicPQMEPEIOO291/U1td3HgduTz
mrGSw2HKN7b4GSyuDtdB4VvGBHc/jA/zH4wP8396GhAsQ/Bh8QsAvtrThQ==

          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYC4nk2Oldm3XN3+A8C96UcYHz5XQv2pfpJO2zU
y1vMeAXB33mr62/qeQR/JggcRPAtrh3NNTng7qD+SeXlLE1pB4emR8dn7HZ3
+LLv49b0aVIOy1546P2f6e5gYgwC4g6fNgRkz3J3d0gDgWOiDrekaxKNvrrB
+WDzZiD4U76xxc+QcXM4AwI+Eqj8Hnk4v/L+j1vGu5Ud9CYs+GE4z83B5wS7
7eytKg5vePcZzHyF4IPVq7jD+Tz+66ekVrhD/BWpAnH/bHcHlWuPghlylB16
vF6xmHQi+HW/rQrOBWDyH7jGO84qVILzwznF2o3vKzqoPWmedzbL3YE/NuC+
UbkiJDz7EXyJqVc4MzahyQPDG+y/Mwh++eFtrjNrleB8XUX5LzliUP+kuDts
AMWbjapDSInK9P8v3OB8cPyaIfhuqqVMs1a4Oqz89rLizAElOB+cHurl4Xzh
ykklZ1MkHf7E5B79Z+UGCZ+dIhD7nyP4YPs2uMP5sPR0HxweiPQFS28Awukl
xA==
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{53.671899999999994`, 7.851559999999999}, {
           53.671899999999994`, 9.389059999999999}, {52.50309999999999, 
           10.617199999999997`}, {51.12029999999999, 10.617199999999997`}, {
           49.69059999999999, 10.617199999999997`}, {48.55779999999999, 
           9.353129999999998}, {48.55779999999999, 7.851559999999999}, {
           48.55779999999999, 6.324999999999999}, {49.74999999999999, 
           5.1812499999999995`}, {51.10779999999999, 5.1812499999999995`}, {
           52.5156, 5.1812499999999995`}, {53.671899999999994`, 
           6.348439999999999}, {53.671899999999994`, 
           7.851559999999999}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQvfyFh97/RC+HFgV21TNX5B1gfPVPKi9nacrB+e0g
eRNpB/GpVzgzrLwc3NccXc7wQ8Lhy4aA7Fn8Xg4KuxbsS10n5pBw+LJ26klP
hzQQOCbqsPNW19/UfgR/dfftDIZwBB9snpCngwbIvk4xhwjx7RcZnnk4rBXS
4Uu/J+FwBgT2eDiIVE4qOcsi7ZDN+XNB+m4PqHtl0fjycH6njeeutEsKcD5/
bMB9I3clhze8+wxmvvJwmAkCkcoOwp8cz6eJejowgECCigOP//opqRGeDmY2
e4OmHVRxkHf8mHymF8GH+Q+Fz+nlINrj9YolRAVivpGXw978mrczU5Xh4Qf2
h48SKv+MggN6+AMAzuCrzg==
           "]}], 
         FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGJpIIaxWZDYzFRgM0D5DFQ0kxZsarkTAOT/Aoc=
          
          "], CompressedData["
1:eJxllH9IU1EUx6cJIgRS7Ue0zb3N95BRCW4jQgzOsrC8VxMRtBLEak5Tsz+M
FDQxKwmDRCxtYWghGiw10D8Ks8DU1GmWI4QEo0wyClqIGEZr79337kU9cLl8
3o97z/me773mM2WZrm0qlSosNNJDIzw0ssr5luDuNMj6ORtodepB4WtcpODz
G6F8QLM+uYThx43SBttpE3k/hyHuN7/sGTdB57dj8cEODAtH85yeDg6q1xMv
TldgcBWEYpSD+q7sCZsaQ3aUtt4ebQa3+HwJwbzV6A3azeBt+Fiouozgnhg3
Gad4R7pUaxbK6sqm8qn+WMItCPqExboHUzxsP9Hb7OIw5bakfX7PKOMxa2LT
5FtM9r1rgb+5pSP/3mP49bCXm5ozw8tq40G3H5P9us2wmN/xwbHAGK5+Hmv9
wlj6fmUrk3oZ7xLzdVgoS+v28pSb66+fmjUIlPviLzwKSxJgTl+Vb/vKWNFb
4X5xHsSA30Qeuj/AQ97w7F7XUwwTw4efFF3hST9qMdRGjNxO0AnAizJksv+l
92bGt1K/RziKEGXdHX9UoQ0RfbpjN3KOhbKkp5bx49XlCh/I9ZcgSG6s21lw
noN5sZ42BEExamT/zCDiH6uJ6KLDkCvkGKYHY8BhD0UxhpWhwID7QAzpd43s
rx0xRJ9O+XuDEY4Il8I9r2T9Cwy0ny2in07qKUv+idhDWVp/VQf7G9vXEnow
+MTwakiecYxLov60u4cR5S5Rv0pE9q/SEf/lIPn8GIgemYjmVyOehwwk17OV
OWfgrC8NyfkbiV9TGEt6JDNW9N7MRE/GpuftQ650A+VPon7vNJRJ/WrK0vl7
poZWcXYylvxxnLHkp1T5PL5WE13OIZDSGdXQ/kv3hV5LWarDriVznbK/lvjj
BVt/pS+j2BONN+ZjZTxTlhc5Pc5Yua+Ufmy+z/4DOPYaqQ==
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2,
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
           3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {{{65.8813, 11.2953}, {
           65.8813, 12.512499999999998`}, {65.49999999999999, 13.6922}, {
           64.5219, 13.6922}, {62.85309999999998, 13.6922}, {
           61.076599999999985`, 10.2}, {61.076599999999985`, 7.57656}, {
           61.076599999999985`, 7.028130000000001}, {61.1953, 
           5.1812499999999995`}, {62.44839999999999, 5.1812499999999995`}, {
           64.0688, 5.1812499999999995`}, {65.8813, 8.590629999999999}, {
           65.8813, 11.2953}}, {{64.78439999999999, 9.615629999999998}, {
           62.2688, 9.615629999999998}, {62.44839999999999, 
           10.318799999999998`}, {62.69839999999999, 11.3203}, {
           63.17499999999999, 12.165599999999998`}, {63.5688, 
           12.881299999999996`}, {63.98589999999999, 13.4531}, {
           64.50940000000001, 13.4531}, {64.90309999999998, 13.4531}, {
           65.16559999999998, 13.120299999999999`}, {65.16559999999998, 
           11.975000000000001`}, {65.16559999999998, 11.5469}, {65.1297, 
           10.95}, {64.78439999999999, 9.615629999999998}}, {{
           64.69999999999999, 9.257809999999997}, {64.40309999999998, 
           8.089060000000002}, {64.15159999999999, 7.33906}, {63.7234, 
           6.587499999999998}, {63.378099999999996`, 5.9796900000000015`}, {
           62.96090000000001, 5.418749999999999}, {62.459399999999995`, 
           5.418749999999999}, {62.09059999999999, 5.418749999999999}, {
           61.79219999999998, 5.704689999999999}, {61.79219999999998, 
           6.885939999999998}, {61.79219999999998, 7.66094}, {
           61.98279999999999, 8.47031}, {62.173399999999994`, 
           9.257809999999997}, {64.69999999999999, 9.257809999999997}}}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4g0PX07dVBDoMBMEOhUcYPwPi9YrnI1QcsiP
Zz8nmRnosEH1SfM8X1WH9DQgsAt0+Put9MEcQQ0H4U+O59MEAx1YOLvkk99p
OYCUnb0U4HD+atgb/WodiPpTCP7OW11/U48j+J83BGTPOhzg8CRx4TWTfAR/
i/mPQyleCH5K7B03ZgsE/03xVtHf2joO2laTTtdfCHDwvzgx5t9hbYczICAT
CDE/WtPh+tFckwb3QIh4jiqcH84p1m7crwDnrxXS4Uu/J+4Qm3v03yblQIeS
5SUb/p3ndzAGgdMBDoUgfj8L3H4TkPhmZjh/ya3ljw2bEfztXhss5lgi+OBw
WMYE9/913ttiqWVM8PCB8RdPsmL0vYLg9y/4YfhMKNDB/4nnJdNgToi8RaDD
530ft6aHCULcFx8IcY+xGDz+poPiM1LaAT1+Acn65I8=
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4vbl4aeM1gQ5nDrstDbTTt1hf62sRfocBH/C
gh+Gz2YFOWxQfdI8762aA4g6Oy3IwdRmb9A0RTWHDQ9fTt00IcghI/9D68kr
qg5bW2oubO4NchDt8XrFskXVYU337QyGdAS/H2ReHIIPto8FwQ8uUZn+3yPI
wUBrpfCFJeoOIGGTwCAHM5B9D9UdmgM95zakBTnMWaS880+6hgPnzwXpm/OC
HB5FiG+/uEDD4f4+vjnGfUEOtb+tCs51aDrA/FcP4mdowfk1nzYEZN/ShvNl
lr/w0Nuv6/CdLX6GT2WQQ0rsHTfmH3oO8o4fk89YIvhg//4JhPPdVUuZZl0J
dGjh9V8/pVUXzt+gl7eYUUYHzgeHT4g2xL8voPottB2uHs01aXiP4IPd/wvB
B3mLgQsaviUI/pPEhddM+HXg/D9vXx+wfKzjoG016XT9h0A4Pz0NCF4h+N2g
8PwZ6PCieKvob249B385sSxfaaD+b6UP5hTqQcLDBMEHuy8ZwX8sInvyaTUw
vObFaZ420IXzYeEJ45sYg4AWJL2EQdPTP2h8SQU5/AWZJ6gO4d8KhMQfgyo8
vMDp4YoKnP8G5N7TCH4aGKg41K7bllQ/NwjOR0/PABgRRtM=
          "]]}, 
        Thickness[0.013041210224308817`], StripOnInput -> False]}, {
      ImageSize -> {76.67590535491905, 16.368856787048568`}, BaselinePosition -> 
       Scaled[0.3237956353650342], ImageSize -> {77., 17.}, 
       PlotRange -> {{0., 76.67999999999999}, {0., 16.37}}, AspectRatio -> 
       Automatic}], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 99.999993}, {0., 
   3.1415924291903177`}, {-3.990787620402413*^-6, 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7487804941090403`*^9, {3.748780638501417*^9, 3.7487806518821917`*^9}, 
   3.749163414794133*^9, 3.7491639836932364`*^9, 3.7491640137739153`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"9f3fed64-eedb-4a18-8472-93e399936bcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"a", ">", "0"}], ",", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"R", "[", "r", "]"}], ",", "r"}], "]"}]}], ",", "r"}], 
        "]"}], "-", 
       RowBox[{"2", "a", 
        RowBox[{"(", 
         RowBox[{"a", "+", "1"}], ")"}], " ", 
        RowBox[{"R", "[", "r", "]"}]}]}], "\[Equal]", "0"}], ",", " ", "R", 
     ",", "r"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749167100682578*^9, 3.7491671024706507`*^9}, 
   3.749167248518079*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"60f82ff4-86fd-4900-be1c-dfe78b10515b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"R", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "r", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["r", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{"a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["\[ImaginaryI]", 
              RowBox[{
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "a"}], ")"}]}]]}]], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               RowBox[{"4", "+", 
                FractionBox["1", 
                 RowBox[{"2", " ", "a", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "a"}], ")"}]}]]}]]}]}], ")"}]}], 
          SqrtBox["2"]]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["r", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{"a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "a"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["\[ImaginaryI]", 
              RowBox[{
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "a"}], ")"}]}]]}]], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               RowBox[{"4", "+", 
                FractionBox["1", 
                 RowBox[{"2", " ", "a", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "a"}], ")"}]}]]}]]}]}], ")"}]}], 
          SqrtBox["2"]]], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.749167102741199*^9, 3.749167248885343*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"68c56d38-669d-4bd3-9b9e-3dcbc155b550"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"T3", "[", 
   RowBox[{"a_", ",", "r_"}], "]"}], ":=", 
  SuperscriptBox["r", 
   RowBox[{" ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        RowBox[{
         RowBox[{"8", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "a"}], ")"}]}], "+", "1", " "}]]}]}], 
     ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.749167406965784*^9, 3.7491675162809134`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"1f602525-73eb-4150-a847-1e7255914e6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"T4", "[", 
   RowBox[{"a_", ",", "r_"}], "]"}], ":=", 
  SuperscriptBox["r", 
   RowBox[{" ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "-", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        RowBox[{
         RowBox[{"8", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "a"}], ")"}]}], "+", "1", " "}]]}]}], 
     ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.749167526563119*^9, 3.749167533297423*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"bd4b620f-8cb7-4a93-8f3b-7e9a3218be9a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"T1", "[", 
    RowBox[{"1", ",", "r"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "ri", ",", "rf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749164556379314*^9, 3.749164580562119*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"f6fbd06f-8a89-408f-ba6f-ddc2952a3a2a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$8821#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.0001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.0001, 100}, {0., 17.22138088076977}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749164576259853*^9, 3.749164595234099*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"900659a1-cc2e-4cdf-8890-49ca54a154c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"T2", "[", 
          RowBox[{"a", ",", "r"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Rr", "[", 
      RowBox[{"1", ",", "r"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "10", ",", "rf"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.74916460304315*^9, 3.749164947961399*^9, {3.7491651050369864`*^9, 
   3.7491651607217712`*^9}, {3.749165338694613*^9, 3.7491653488259497`*^9}, 
   3.74916540372221*^9, {3.749165461367234*^9, 3.7491654615115957`*^9}, {
   3.749165499240458*^9, 3.7491655016256113`*^9}, {3.7491657036426287`*^9, 
   3.74916570613553*^9}, {3.749165827622127*^9, 3.7491658300217447`*^9}, 
   3.749165913358749*^9, {3.749166014877054*^9, 3.74916603306536*^9}, {
   3.749166310922914*^9, 3.749166314755975*^9}, {3.7491664412857637`*^9, 
   3.749166448345338*^9}, {3.749166527398427*^9, 3.749166533369116*^9}, {
   3.749166606621401*^9, 3.7491666068278303`*^9}, {3.7491666677199373`*^9, 
   3.749166673529641*^9}, 3.7491667411575203`*^9, {3.749166794866456*^9, 
   3.749166820658744*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"384df273-d210-4af3-83da-023640b65396"],

Cell[BoxData[
 TemplateBox[{
  "N","meprec",
   "\"Internal precision limit $MaxExtraPrecision = \\!\\(\\*RowBox[{\\\"50.`\
\\\"}]\\) reached while evaluating \\!\\(\\*RowBox[{\\\"1\\\", \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"5\\\", \\\"-\\\", SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}], \
\\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"9\\\"}], \\\"+\\\", \
SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}]}]\\).\"",2,52,11,17903415366650303627,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.749166795416417*^9, 3.749166822826521*^9}},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"c65d5fbf-5b48-4bdd-ac86-354829b6aaa3"],

Cell[BoxData[
 TemplateBox[{
  "N","meprec",
   "\"Internal precision limit $MaxExtraPrecision = \\!\\(\\*RowBox[{\\\"50.`\
\\\"}]\\) reached while evaluating \\!\\(\\*RowBox[{\\\"1\\\", \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"5\\\", \\\"-\\\", SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}], \
\\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"9\\\"}], \\\"+\\\", \
SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}]}]\\).\"",2,52,12,17903415366650303627,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.749166795416417*^9, 3.749166822859779*^9}},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"5c1b6820-54c7-4cad-a252-bb8ed9df7901"],

Cell[BoxData[
 TemplateBox[{
  "N","meprec",
   "\"Internal precision limit $MaxExtraPrecision = \\!\\(\\*RowBox[{\\\"50.`\
\\\"}]\\) reached while evaluating \\!\\(\\*RowBox[{\\\"1\\\", \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"5\\\", \\\"-\\\", SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}], \
\\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"9\\\"}], \\\"+\\\", \
SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}]}]\\).\"",2,52,13,17903415366650303627,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.749166795416417*^9, 3.749166822887741*^9}},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"1c98f9e4-9055-43fa-a38d-305fa9c65320"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"N\\\", \\\"::\\\", \
\\\"meprec\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,52,14,17903415366650303627,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.749166795416417*^9, 3.7491668229196663`*^9}},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"edd4bba3-e8ef-467e-b3c9-31f94d05dc3e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+RfndfOG8P8Bb56SaA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$204251#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+RfndfOG8P8Bb56SaA==
          "]], 
         LineBox[{{13.472280131333482`, 0.00029371956173200446`}, {
          13.472280131333676`, -0.0005197529795336261}}]}, 
        Annotation[#, "Charting`Private`Tag$204251#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{10, 100}, {-0.0005197529795336261, 
       0.00029371956173200446`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.749164603291953*^9, 3.749164948576048*^9, {3.749165135747517*^9, 
   3.749165161539632*^9}, 3.7491653947450533`*^9, 3.749165449128747*^9, 
   3.749165546389398*^9, 3.749165750607885*^9, 3.7491658746182547`*^9, 
   3.749165957982711*^9, 3.749166078635783*^9, 3.749166359310308*^9, 
   3.7491664959767847`*^9, 3.749166578683708*^9, 3.749166651520673*^9, 
   3.749166719446559*^9, {3.7491667857495613`*^9, 3.749166829704767*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"9a7ee08f-6ab9-4c09-b160-233b2ed82228"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"T4", "[", 
       RowBox[{"1", ",", "r"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Rr", "[", 
       RowBox[{"1", ",", "r"}], "]"}], "+", ".00005"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "10", ",", "rf"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749167551193853*^9, 3.7491675988388042`*^9}, {
  3.749167797019672*^9, 3.7491678683140707`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"806ff679-9885-4323-8c62-4e0909aea0e7"],

Cell[BoxData[
 TemplateBox[{
  "N","meprec",
   "\"Internal precision limit $MaxExtraPrecision = \\!\\(\\*RowBox[{\\\"50.`\
\\\"}]\\) reached while evaluating \\!\\(\\*RowBox[{\\\"1\\\", \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"5\\\", \\\"-\\\", SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}], \
\\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"9\\\"}], \\\"+\\\", \
SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}]}]\\).\"",2,64,31,17903415366650303627,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.749167843554262*^9, 3.749167868885347*^9}},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"57315ecd-7c0c-4225-ae8b-c04519133674"],

Cell[BoxData[
 TemplateBox[{
  "N","meprec",
   "\"Internal precision limit $MaxExtraPrecision = \\!\\(\\*RowBox[{\\\"50.`\
\\\"}]\\) reached while evaluating \\!\\(\\*RowBox[{\\\"1\\\", \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"5\\\", \\\"-\\\", SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}], \
\\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"9\\\"}], \\\"+\\\", \
SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}]}]\\).\"",2,64,32,17903415366650303627,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.749167843554262*^9, 3.749167868910287*^9}},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"a2bdcecc-be9d-4c71-be54-51987d2746c3"],

Cell[BoxData[
 TemplateBox[{
  "N","meprec",
   "\"Internal precision limit $MaxExtraPrecision = \\!\\(\\*RowBox[{\\\"50.`\
\\\"}]\\) reached while evaluating \\!\\(\\*RowBox[{\\\"1\\\", \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"5\\\", \\\"-\\\", SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}], \
\\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"4\\\"], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"9\\\"}], \\\"+\\\", \
SqrtBox[\\\"17\\\"]}], \\\")\\\"}]}]}]\\).\"",2,64,33,17903415366650303627,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.749167843554262*^9, 3.749167868940793*^9}},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"3f445eb6-b5e5-415e-b89f-3ad77685a0e9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"N\\\", \\\"::\\\", \
\\\"meprec\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,64,34,17903415366650303627,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.749167843554262*^9, 3.749167868967766*^9}},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"c0b92d8f-1f93-4c6f-8582-226c1b8811f3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
hHTyxfP5Mp/QY355GYNO1RdnjXL78f8B9uqF5Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$262750#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVkXs0lPsXxpUxnKTMSHK/RoPcZsyMabzvHrkUSSbyVkpDKdEhJxKFSHKN
iKhEiKMkkZT4ki44pZKS4pfLyFEnMcglhzO/P/ba61mfvZ7nWWtrewfyDyyV
kJDIFc//d2h2F//sOQtYlpjd5NAPiHqnqMf+hgWErYntWXMR0EU+5+y/mnRg
9h7wyhnEkNndprnVBnRg9I5NmDdjqI2yOdDMhA4LnCb61HUMSbzxIHy4dMin
emTNeWMowCXEsJWgQ7W7g+ms0BrZbrnTnplOh7yqoMaEMS4S2ekrGUsyIGZT
uTNDbwNKKS5PslvGgIr7k1EFMhvQOilLCS8KA6Rcz/uaf+egvU82jqRrMqBB
v/pobQ0HtdkI6qY3MOAQgxG5x4mDCvArXs3HGKDt8Ky+M9wKbbOilu76woDT
Pn6PVo+zEBHYZ7d8lAFPP4cMnuxiIUHx7cH6KQYQEwonSA0sFExx0tSWsoSR
EXXK8SQWyhiJzRrWtYQ77KrJQQMWep8zdeaYwBLqPIJE5b5M5Dn3QZDaYwnb
1zVaFM4x0H6zkkVcaAnvtljIvBUy0BHfkKvj3yxhTZKHisYrBorsoHS7/bIE
navyDlJFDHStzHGbqgoT2kv+XqXgwkADux5hpR5MWPl+UEemjI4O1V1TfdzB
hNqOic+2wRaIOdz+0uUjExqbbCyGvCyQlMJCVG8/E1qeLVW+7GyBrh/2FM6M
MWGXvY+OA80C9Sorl5uuZMG2T14lV/rNET/sAnbViQUit3EnnR3miGsZJwh7
woL7W35VtTqboWWCagXyCxbEny9a6Lc2Q93Jg08z3rKggrees9zEDIUKeYYV
AyxwqT+llrXCDFVmLIiGJNhQfrHh3Gy+KdIXHT+z3ZoNf4L688XbJohScbjE
pIYN00sPyAcNGiN+X7wPp54N/jopKbmtxiiTUqxp/4QNHnpd5p8rjNHqY5+z
93Sw4V56wqGak8ZIzcrtXPIoGy5fXzl8SckY6Tdb+33Vt4IM5W/ZFL4R4nbJ
G93ItoJPr4VHpj/Q0CkZk+HKPCt45bIgRXtMQw1WToX1xVbgfuLxSNBNGuJd
iVN9V2UFeM2I3sZIGrIXzMmSXlsBN9L+4KgeDbl+G/xHIMOBoMPr0jaFrkO+
izW31U9wYIVRpbHHOgOkKK2a2RTNAd/gxUh/qgF6siLqxIFzHEgX7HPImtdH
2hoOtuXZHDDzefzE5I0+6uF2dXNrOLDKTtHuUIQ+4odPkzwnOPBqaDZB+HYt
wqdYu3OPbAD1noYztpl6aM23Wmklby6suDxqzHbWQZyZZdNsPy50q4eE4NY6
aLfUni+7grjQFHVk0W29DsrTXPI0L5IL50g3s8rkdJCe2+YY/ctcSGFJyy+0
ayPT+u55y04uUO7I7We7aSP783PjbvbWcDE191LaIS0UQuf2XDDE4FYBrTTK
Xx15Mn98TjPHQGVzhbQjXx3ZWl0fTGVjQK6KotGs1NEqXOZboj0GHcNXPddK
q6O7jp2zMd4YTCYzdRWK1NCYIEDpj1wMDNu/51X2q6KAtCv87ctwEB0d0vX3
V0He3+dbFL7iEBNdX11SrYRqn/2c+nMcB+Op/Cz7PCUklz+mA7M4aGim7p2J
V0KetGCMSQLQUh3fmrlbCZF7DlzyVgB4f+H6yZuSSmgXz3lLnTmAxtuf9+08
ViPScrXqgN8BhPIqWJGsIvIoeBD7ahigtLdXxqiYih6mrb+28xvAjUNNo7RM
KtKILng4OArQp7o5wjKWir7sTRifngI4N6RHBAuoKFRtp5cWiQee+ay3pzWo
KCt7hnNUiwc2ml+Tv+dSUGcKS0TdyYOxm3n3Sq/Ii/97b9+ONh7EHT0adT9G
Dv3T+SLNuJ0HSdeUiuZ85FC8qbBxaQcP/s1I3eFuJ4ceCanaFd08cL5wQ8ZV
Rg4ZuAT1S4/w4Hh/nLbX+eVoXtfI+4G0DVxuvRv5uEAWlbzM91Gzs4GMACFp
RddvaF4r2XcA2UCOnwlncxQZhf98m3+j2QYipE2ceL5kNPOX6qfDz23A3/AD
x8mZjCZCb7pMtNvAg7YfxzJVyejrizY26X82MHU84vxcrRTqDvtNVn/eBk5N
fgiWniahmtdnK/zYG6H7mIFObZQkCow+PTN2ZyMcjKY+dWqUQKxUVktjui28
/1haKjg803Dbr6XxYpwdOD46eKNCYqwhfEJ52sjPHtRe2hpknR1omHK03/Hc
ywFeWxoEY2XPG6x2p/OGXDeB2caWu616zViH8tXDT+ibIT/D0yhQ5hOmciP2
Uek6R2hslIg40zmE1fYZbtkq5wSvabovVtz6B9PoHDsY+t0JGPPl+w344xj9
Yvqtwr4tYNvmOqnFmMSukiZMLjQ7Q3Bg6exY7k+shmf6Me7BVlhXdC6r8McM
domVSJkvc4HwnESS+fwcNvyd36xsvw0GHryOuHdvHuvW30plN26Dwkozykff
BexnDU2CZeEKgpig03veLWJhhasY0wWuUGozEF6UKoG/+Rkwb6XKh0uxJJLI
bAnuXlDssyeZDxo5ogjXuiX4nbtOXpLS22GDKPNuoe1SnKnaMZtwYjscrCof
oz9cimv1Hfz4ZmQ7VCoeHDupJ4n3y/q7XPFxA9Kq0gN1qZL4y9StPg7v3OA5
bZMF56sknh52TTZkmzto5aS4fbAj4Q8aFmd9Wt3hNGbw7sslEr7cE+LpnB2w
JMHZ5WUfCWfuGy2Nq94B17qf1XNpUnhS3Um/Wn0P8Oc8Pq59SAq3/UMl6FaW
B3y6ecTjUYEU3pm+VlZXnoA3MobRq3qk8PPSFLvw0wT8/Veiq2gFGX8o6t19
LJYA1koLufaVZFzYWxb8exwB8YlPE/6UJ+Ocatt87wQCdD/JPfOiivm+sF+O
6QSknCpzblUk4+yHnytVCwiIadEvT1Mj4wMBtzXqGwkIbSt3GqeR8eVEhOX9
xwR0kZe4PjUk46yNm7ZUPiFAtoSqkmNExpOVB04UtxBwq75lGl8v5s8U36W8
JiD/1eBgopmYa55K2ttHwAVeR7oii4zXLHO8TgwQkIqse4fEun9q9QO+kADi
R9P3e2wyznxx54v93wSElfntdeeIeZiQZzpGwH3/hOh0a3Gf/ZUETUSATrbc
tBcmvneJDNSdJGBiuRvdBBfnrV1zVWmGgDlRxL+tIM6TH6qizBFQtjM+KZsn
9vtV2SY7T0DddOnn/TZiv+HIfqkFAvZWTs2abxT7dTjNLC4SkCGI+bgg1v8B
+XNlOw==
          "]], 
         LineBox[{{13.472280131333479`, 0.00036103905598254603`}, {
          13.472280131333687`, -0.0005151367542420304}}]}, 
        Annotation[#, "Charting`Private`Tag$262750#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{10, 100}, {-0.0005151367542420304, 
       0.00036103905598254603`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.749167580322329*^9, 3.749167606169574*^9}, {
  3.749167804272717*^9, 3.7491678756549892`*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"16433592-bb50-4565-84b3-69f72ecbcf5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"a", ">", "0"}], ",", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}], ")"}], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Y", "[", "x", "]"}], ",", "x"}], "]"}]}], ",", "x"}], 
        "]"}], "+", 
       RowBox[{"2", 
        SuperscriptBox[
         RowBox[{"LegendreP", "[", 
          RowBox[{"l", ",", "1", ",", "x"}], "]"}], "2"]}]}], "\[Equal]", 
      RowBox[{"2", "l", 
       RowBox[{"(", 
        RowBox[{"l", "+", "1"}], ")"}], " ", 
       RowBox[{"Y", "[", "x", "]"}]}]}], ",", "Y", ",", "x"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.749169955007094*^9, 3.749169993817399*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"80f356ae-bd5f-46ef-8036-7308ed4be368"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], " ", 
        RowBox[{"LegendreP", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"8", " ", "l"}], "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "x"}], "]"}]}],
        "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "1", "x"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"LegendreP", "[", 
                  RowBox[{"l", ",", "1", ",", 
                   RowBox[{"K", "[", "1", "]"}]}], "]"}], "2"], " ", 
                RowBox[{"LegendreQ", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", 
                  RowBox[{"K", "[", "1", "]"}]}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", "l", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "l"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
                   RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
                   RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}]}]}], ")"}]}], 
               ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "-", 
                  RowBox[{"8", " ", "l"}], "-", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["l", "2"]}]}]], " ", 
                SuperscriptBox[
                 RowBox[{"LegendreP", "[", 
                  RowBox[{"l", ",", "1", ",", 
                   RowBox[{"K", "[", "1", "]"}]}], "]"}], "2"], " ", 
                RowBox[{"LegendreQ", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", 
                  RowBox[{"K", "[", "1", "]"}]}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", "l", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "l"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
                   RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
                   RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "1", "]"}]}], "]"}]}]}], ")"}]}], 
               ")"}]}]}], ")"}], 
           RowBox[{"\[DifferentialD]", 
            RowBox[{"K", "[", "1", "]"}]}]}]}], ")"}], " ", 
        RowBox[{"LegendreP", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"8", " ", "l"}], "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "x"}], "]"}]}],
        "+", 
       RowBox[{
        RowBox[{"C", "[", "2", "]"}], " ", 
        RowBox[{"LegendreQ", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"8", " ", "l"}], "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "x"}], "]"}]}],
        "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "1", "x"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"LegendreP", "[", 
                   RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"LegendreP", "[", 
                    RowBox[{"l", ",", "1", ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}], "2"]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "l", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "l"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}], " ", 
                    RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}], " ", 
                    RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}]}]}], ")"}]}], 
                 ")"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "-", 
                  RowBox[{"8", " ", "l"}], "-", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["l", "2"]}]}]], " ", 
                RowBox[{"LegendreP", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", 
                  RowBox[{"K", "[", "2", "]"}]}], "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"LegendreP", "[", 
                  RowBox[{"l", ",", "1", ",", 
                   RowBox[{"K", "[", "2", "]"}]}], "]"}], "2"]}], ")"}], "/", 
              
              RowBox[{"(", 
               RowBox[{"2", " ", "l", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "l"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}], " ", 
                   RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}]}], "-", 
                  RowBox[{
                   RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}], " ", 
                   RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                    RowBox[{"K", "[", "2", "]"}]}], "]"}]}]}], ")"}]}], 
               ")"}]}]}], ")"}], 
           RowBox[{"\[DifferentialD]", 
            RowBox[{"K", "[", "2", "]"}]}]}]}], ")"}], " ", 
        RowBox[{"LegendreQ", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"8", " ", "l"}], "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "x"}], 
         "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.749169997817443*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"d1afc050-d366-4350-8141-c1be2d54dc44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], " ", 
    RowBox[{"LegendreP", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"8", " ", "l"}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "x"}], "]"}]}], 
   "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "1", "x"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"LegendreP", "[", 
              RowBox[{"l", ",", "1", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"LegendreQ", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"8", " ", "l"}], "-", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", 
              RowBox[{"K", "[", "1", "]"}]}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "l", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "l"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"LegendreP", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
               RowBox[{"LegendreQ", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"LegendreP", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
               RowBox[{"LegendreQ", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}]}]}], ")"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"8", " ", "l"}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["l", "2"]}]}]], " ", 
            SuperscriptBox[
             RowBox[{"LegendreP", "[", 
              RowBox[{"l", ",", "1", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"LegendreQ", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"8", " ", "l"}], "-", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", 
              RowBox[{"K", "[", "1", "]"}]}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "l", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "l"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"LegendreP", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
               RowBox[{"LegendreQ", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"LegendreP", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
               RowBox[{"LegendreQ", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}]}]}], ")"}]}], 
           ")"}]}]}], ")"}], 
       RowBox[{"\[DifferentialD]", 
        RowBox[{"K", "[", "1", "]"}]}]}]}], ")"}], " ", 
    RowBox[{"LegendreP", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"8", " ", "l"}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "x"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.749170300712041*^9, 3.7491703030506353`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"d5d33f40-d055-4040-b9a5-0acab78b65a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "1", "x"], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"8", " ", "l"}], "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"LegendreP", "[", 
             RowBox[{"l", ",", "1", ",", 
              RowBox[{"K", "[", "1", "]"}]}], "]"}], "2"], " ", 
           RowBox[{"LegendreQ", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "-", 
                  RowBox[{"8", " ", "l"}], "-", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", 
             RowBox[{"K", "[", "1", "]"}]}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "l", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "l"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"LegendreP", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
              RowBox[{"LegendreQ", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"LegendreP", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
              RowBox[{"LegendreQ", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                RowBox[{"K", "[", "1", "]"}]}], "]"}]}]}], ")"}]}], ")"}]}], 
        ")"}]}], 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"K", "[", "1", "]"}]}]}]}]}], ")"}], " ", 
  RowBox[{"LegendreP", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"8", " ", "l"}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "x"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.7491703040494957`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"1c3fcf07-8fa0-4952-82ff-87989b8e2dcf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]\[Theta]", "[", 
   RowBox[{"l_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"C11", "+", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "1", "x"], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"8", " ", "l"}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"LegendreP", "[", 
              RowBox[{"l", ",", "1", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"LegendreQ", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"8", " ", "l"}], "-", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", 
              RowBox[{"K", "[", "1", "]"}]}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "l", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "l"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"LegendreP", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
               RowBox[{"LegendreQ", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"LegendreP", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
               RowBox[{"LegendreQ", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
                 RowBox[{"K", "[", "1", "]"}]}], "]"}]}]}], ")"}]}], ")"}]}], 
         ")"}]}], 
       RowBox[{"\[DifferentialD]", 
        RowBox[{"K", "[", "1", "]"}]}]}]}]}], ")"}], " ", 
   RowBox[{"LegendreP", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"8", " ", "l"}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "x"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7491702761318207`*^9, 3.749170288144299*^9}, {
  3.7491703215091667`*^9, 3.749170325035034*^9}, {3.749170404590756*^9, 
  3.749170407038392*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"adedf2b9-608b-40f0-aec8-d1f14ec5415a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lm", "[", 
   RowBox[{"l_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "1", "x"], 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"8", " ", "l"}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["l", "2"]}]}]]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"LegendreP", "[", 
           RowBox[{"l", ",", "1", ",", "y"}], "]"}], "2"], " ", 
         RowBox[{"LegendreQ", "[", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"8", " ", "l"}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["l", "2"]}]}]]}], ")"}]}], ",", "y"}], 
          "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "l"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"LegendreP", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
              "y"}], "]"}], " ", 
            RowBox[{"LegendreQ", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
              "y"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"LegendreP", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
              "y"}], "]"}], " ", 
            RowBox[{"LegendreQ", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"8", " ", "l", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "l"}], ")"}]}]}]]}], ")"}]}], ",", 
              "y"}], "]"}]}]}], ")"}]}], ")"}]}], ")"}]}], 
    RowBox[{"\[DifferentialD]", "y"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7491729892887917`*^9, 3.7491730694053383`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5e0f0032-fb91-4853-8cab-ac06f84bdc89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C11", "=", "1"}]], "Input",
 CellChangeTimes->{{3.749170410732628*^9, 3.749170413205402*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7794c7f3-d35c-439d-97d6-d5e24c5dda72"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7491704201054077`*^9, 3.749172559862969*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c7f61b43-364e-4a06-8bc8-dd85fabb3723"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"lm", "[", 
   RowBox[{"2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.749172567378281*^9, 3.749172574948626*^9}, {
  3.749172630820602*^9, 3.749172631308864*^9}, {3.749172738987749*^9, 
  3.7491727436255074`*^9}, {3.7491728162613277`*^9, 3.7491728166003733`*^9}, {
  3.749173076129463*^9, 3.749173076343316*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"966ba369-d1b6-48f5-b077-facdfccac4ab"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7491726289586782`*^9, 3.749172689847636*^9, 
  3.74917279038946*^9, 3.749172971347847*^9, 3.749173268176712*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"1238630e-52b7-4c66-b981-170296dada52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Theta]\[Theta]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749170369620721*^9, 3.749170387358*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"2e2a4942-1e06-4284-bfb7-55a35ab00e62"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.74917041751882*^9, 3.749172350917611*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"64b371f5-e2c9-4ea7-920d-a6325a4120b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\[Theta]\[Theta]", "[", 
     RowBox[{"1", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.749172293256647*^9, 3.7491723291920347`*^9}, {
  3.749172366465273*^9, 3.7491723670567007`*^9}, {3.749172469676166*^9, 
  3.749172484684463*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"74fffa4d-2566-4736-9885-65092733fbf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Theta]\[Theta]", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", 
   RowBox[{"\[Theta]\[Theta]", "[", 
    RowBox[{"1", ",", "0"}], "]"}], ",", 
   RowBox[{"\[Theta]\[Theta]", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.749172359763362*^9, {3.7491724715803013`*^9, 3.749172485185693*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"e928ffbe-4eaf-4251-b439-362c93067c9b"]
}, Open  ]]
},
WindowSize->{1865, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification->1.5,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1031, 29, 51, "Input",ExpressionUUID->"e34ebbaa-b49f-48d3-9ae3-d28e82ae474c"],
Cell[1614, 53, 20483, 533, 1607, "Output",ExpressionUUID->"17568730-8bac-4dc8-b061-27d397283f87"]
}, Open  ]],
Cell[22112, 589, 18570, 527, 2477, "Input",ExpressionUUID->"f096f007-1129-4a3d-bd8f-3efae82646f2"],
Cell[40685, 1118, 7716, 214, 843, "Input",ExpressionUUID->"3beda23c-3c61-4c74-a3a7-03a1e219f51e"],
Cell[48404, 1334, 4416, 131, 373, "Input",ExpressionUUID->"da4394ec-35ff-4029-be05-0100f8722b93"],
Cell[52823, 1467, 4935, 152, 359, "Input",ExpressionUUID->"2302711a-9eac-474e-9a1b-19afa4b65ee2"],
Cell[CellGroupData[{
Cell[57783, 1623, 1854, 41, 428, "Input",ExpressionUUID->"7f3387a3-88fb-488f-8654-1102f1fdc7c8"],
Cell[59640, 1666, 14403, 246, 92, "Output",ExpressionUUID->"f16f4fe9-d00d-467e-bfcf-9a0635aa1e57"],
Cell[74046, 1914, 2073, 29, 74, "Output",ExpressionUUID->"88ffb926-d552-4af1-a255-65d0de760f7b"],
Cell[76122, 1945, 2078, 29, 74, "Output",ExpressionUUID->"631e249c-556e-4b4e-a910-91f94649ac82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78237, 1979, 440, 10, 47, "Input",ExpressionUUID->"57d88186-ef74-4c6e-9e66-b0b8b6874fc4"],
Cell[78680, 1991, 7516, 140, 310, "Output",ExpressionUUID->"f235f72a-d5bd-47bf-9af7-2d81e04a793e"]
}, Open  ]],
Cell[86211, 2134, 339, 6, 71, "Text",ExpressionUUID->"ce74ca16-802a-4d2d-bd07-98ef7610f6d0"],
Cell[86553, 2142, 2316, 51, 51, "Input",ExpressionUUID->"5c4fb602-2d69-4d3e-a57f-9c6699829127"],
Cell[CellGroupData[{
Cell[88894, 2197, 1308, 29, 82, "Input",ExpressionUUID->"cf7eb2bf-d8b0-44c3-bab7-954fd41e6138"],
Cell[90205, 2228, 19411, 353, 98, "Output",ExpressionUUID->"23d586a1-a519-4fa8-823b-33b5896c2835"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109653, 2586, 812, 19, 82, "Input",ExpressionUUID->"1ae0df2b-3bff-4b87-bee6-e82f480da72d"],
Cell[110468, 2607, 129574, 2127, 447, "Output",ExpressionUUID->"20f8f82a-312e-4cbc-a24c-11e108b558a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240079, 4739, 1878, 37, 82, "Input",ExpressionUUID->"16730207-9217-4d4a-af25-6a0b2939de55"],
Cell[241960, 4778, 387765, 6511, 449, "Output",ExpressionUUID->"d4fdd209-6344-4398-9ac0-d6ce38dc2810"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629762, 11294, 1147, 29, 89, "Input",ExpressionUUID->"26668a5f-3113-4926-b77c-6730ec6d93b5"],
Cell[630912, 11325, 130388, 2142, 443, "Output",ExpressionUUID->"ff222073-e078-4441-92fa-4eab418c5159"]
}, Open  ]],
Cell[CellGroupData[{
Cell[761337, 13472, 964, 25, 89, "Input",ExpressionUUID->"d3b5eddc-b01c-43d3-a64d-53d2ec787ea3"],
Cell[762304, 13499, 86822, 1443, 330, "Output",ExpressionUUID->"9f3fed64-eedb-4a18-8472-93e399936bcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849163, 14947, 791, 23, 51, "Input",ExpressionUUID->"60f82ff4-86fd-4900-be1c-dfe78b10515b"],
Cell[849957, 14972, 2147, 61, 133, "Output",ExpressionUUID->"68c56d38-669d-4bd3-9b9e-3dcbc155b550"]
}, Open  ]],
Cell[852119, 15036, 597, 19, 59, "Input",ExpressionUUID->"1f602525-73eb-4150-a847-1e7255914e6d"],
Cell[852719, 15057, 595, 19, 59, "Input",ExpressionUUID->"bd4b620f-8cb7-4a93-8f3b-7e9a3218be9a"],
Cell[CellGroupData[{
Cell[853339, 15080, 341, 8, 47, "Input",ExpressionUUID->"f6fbd06f-8a89-408f-ba6f-ddc2952a3a2a"],
Cell[853683, 15090, 3797, 79, 377, "Output",ExpressionUUID->"900659a1-cc2e-4cdf-8890-49ca54a154c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[857517, 15174, 1510, 32, 47, "Input",ExpressionUUID->"384df273-d210-4af3-83da-023640b65396"],
Cell[859030, 15208, 784, 15, 73, "Message",ExpressionUUID->"c65d5fbf-5b48-4bdd-ac86-354829b6aaa3"],
Cell[859817, 15225, 784, 15, 73, "Message",ExpressionUUID->"5c1b6820-54c7-4cad-a252-bb8ed9df7901"],
Cell[860604, 15242, 784, 15, 73, "Message",ExpressionUUID->"1c98f9e4-9055-43fa-a38d-305fa9c65320"],
Cell[861391, 15259, 467, 10, 34, "Message",ExpressionUUID->"edd4bba3-e8ef-467e-b3c9-31f94d05dc3e"],
Cell[861861, 15271, 19349, 379, 551, "Output",ExpressionUUID->"9a7ee08f-6ab9-4c09-b160-233b2ed82228"]
}, Open  ]],
Cell[CellGroupData[{
Cell[881247, 15655, 672, 17, 47, "Input",ExpressionUUID->"806ff679-9885-4323-8c62-4e0909aea0e7"],
Cell[881922, 15674, 784, 15, 73, "Message",ExpressionUUID->"57315ecd-7c0c-4225-ae8b-c04519133674"],
Cell[882709, 15691, 784, 15, 73, "Message",ExpressionUUID->"a2bdcecc-be9d-4c71-be54-51987d2746c3"],
Cell[883496, 15708, 784, 15, 73, "Message",ExpressionUUID->"3f445eb6-b5e5-415e-b89f-3ad77685a0e9"],
Cell[884283, 15725, 465, 10, 34, "Message",ExpressionUUID->"c0b92d8f-1f93-4c6f-8582-226c1b8811f3"],
Cell[884751, 15737, 19023, 374, 555, "Output",ExpressionUUID->"16433592-bb50-4565-84b3-69f72ecbcf5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903811, 16116, 948, 28, 51, "Input",ExpressionUUID->"80f356ae-bd5f-46ef-8036-7308ed4be368"],
Cell[904762, 16146, 16275, 412, 757, "Output",ExpressionUUID->"d1afc050-d366-4350-8141-c1be2d54dc44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[921074, 16563, 7598, 204, 604, "Input",ExpressionUUID->"d5d33f40-d055-4040-b9a5-0acab78b65a1"],
Cell[928675, 16769, 4082, 113, 198, "Output",ExpressionUUID->"1c3fcf07-8fa0-4952-82ff-87989b8e2dcf"]
}, Open  ]],
Cell[932772, 16885, 4362, 117, 414, "Input",ExpressionUUID->"adedf2b9-608b-40f0-aec8-d1f14ec5415a"],
Cell[937137, 17004, 3378, 96, 267, "Input",ExpressionUUID->"5e0f0032-fb91-4853-8cab-ac06f84bdc89"],
Cell[CellGroupData[{
Cell[940540, 17104, 195, 3, 47, "Input",ExpressionUUID->"7794c7f3-d35c-439d-97d6-d5e24c5dda72"],
Cell[940738, 17109, 172, 2, 53, "Output",ExpressionUUID->"c7f61b43-364e-4a06-8bc8-dd85fabb3723"]
}, Open  ]],
Cell[CellGroupData[{
Cell[940947, 17116, 477, 9, 47, "Input",ExpressionUUID->"966ba369-d1b6-48f5-b077-facdfccac4ab"],
Cell[941427, 17127, 247, 3, 53, "Output",ExpressionUUID->"1238630e-52b7-4c66-b981-170296dada52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[941711, 17135, 371, 9, 47, "Input",ExpressionUUID->"2e2a4942-1e06-4284-bfb7-55a35ab00e62"],
Cell[942085, 17146, 177, 2, 53, "Output",ExpressionUUID->"64b371f5-e2c9-4ea7-920d-a6325a4120b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[942299, 17153, 530, 13, 47, "Input",ExpressionUUID->"74fffa4d-2566-4736-9885-65092733fbf0"],
Cell[942832, 17168, 482, 12, 53, "Output",ExpressionUUID->"e928ffbe-4eaf-4251-b439-362c93067c9b"]
}, Open  ]]
}
]
*)

